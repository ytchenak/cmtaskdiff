GetCli (cmtaskdiff.py:407): parsing...
GetCli (cmtaskdiff.py:408): get:{'repo': None, 'mode': None, 'simlog': None, 'target': None, 'verbose': 3}
Execute (executor.py:80): EXECUTE_CMD: ccm task -show synopsis 46511
Execute (executor.py:83): OUTPUT_BEGIN
Task 46511: 700fp1: sls/gsr reconnection
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm task 46511 -show objs -u
Execute (executor.py:83): OUTPUT_BEGIN
BsmCommon#28:dir:2 sqa yakovt                  
BsmCommon.vcproj#39:ms_dsp:1 sqa yakovt        
BsmConfigurationDef.h#2:INC:1 sqa yakovt       
BsmService#7:dir:1 sqa yakovt                  
BsmService.vcproj#17:ms_dsp:1 sqa yakovt       
Configuration.cpp#3:cpp:1 sqa yakovt           
Configuration.h#3:INC:1 sqa yakovt             
ConfigurationService.cpp#3:cpp:1 sqa yakovt    
GsrActionCallback.h#2:INC:1 sqa yakovt         
GsrConnector.cpp#2:cpp:1 sqa yakovt            
GsrConnector.h#2:INC:1 sqa yakovt              
GsrCorbaCallbackCommand.cpp#2:cpp:1 sqa yakovt 
GsrKeepAndLive.cpp#2:cpp:1 sqa yakovt          
GsrReconnector.cpp#1:cpp:1 sqa yakovt          
GsrReconnector.h#1:INC:1 sqa yakovt            
GsrService.cpp#2:cpp:1 sqa yakovt              
GsrService.h#3:INC:1 sqa yakovt                
Sleeper.cpp#1:cpp:4 sqa yakovt                 
Sleeper.h#1:INC:3 sqa yakovt                   
SlsGsrActions.cpp#2:cpp:1 sqa yakovt           
SlsGsrActions.h#2:INC:1 sqa yakovt             
SlsServer.cpp#5:cpp:1 sqa yakovt               
SlsServerEngine.cpp#3:cpp:1 sqa yakovt         
SlsServerEngine.h#2:INC:1 sqa yakovt           
SlsServiceCmds.cpp#3:cpp:1 sqa yakovt          
SlsServiceCmds.h#3:INC:1 sqa yakovt            
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm history BsmCommon#28:dir:2
Execute (executor.py:83): OUTPUT_BEGIN
Object:  BsmCommon#1 (dir:2)
Owner:   yakovt
State:   sqa
Created: Wed Jun 13 19:38:48 2007
Task:    28889
Comment:
changed to sqa state by user:mntinteg
Predecessors:
Successors:
	BsmCommon#2:dir:2
*****************************************************************************
Object:  BsmCommon#2 (dir:2)
Owner:   yakovt
State:   sqa
Created: Wed Jul 11 16:56:20 2007
Task:    29299
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon
Predecessors:
	BsmCommon#1:dir:2
Successors:
	BsmCommon#3:dir:2
*****************************************************************************
Object:  BsmCommon#3 (dir:2)
Owner:   yakovt
State:   sqa
Created: Sun Jul 15 11:13:50 2007
Task:    29326
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon
Predecessors:
	BsmCommon#2:dir:2
Successors:
	BsmCommon#4:dir:2
*****************************************************************************
Object:  BsmCommon#4 (dir:2)
Owner:   yakovt
State:   sqa
Created: Mon Jul 16 13:35:52 2007
Task:    29345
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon
Predecessors:
	BsmCommon#3:dir:2
Successors:
	BsmCommon#5:dir:2
*****************************************************************************
Object:  BsmCommon#5 (dir:2)
Owner:   yakovt
State:   sqa
Created: Thu Jul 19 18:38:04 2007
Task:    29389
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon
Predecessors:
	BsmCommon#4:dir:2
Successors:
	BsmCommon#6:dir:2
*****************************************************************************
Object:  BsmCommon#6 (dir:2)
Owner:   yakovt
State:   sqa
Created: Sun Jul 22 10:06:36 2007
Task:    29411
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon
Predecessors:
	BsmCommon#5:dir:2
Successors:
	BsmCommon#7:dir:2
*****************************************************************************
Object:  BsmCommon#7 (dir:2)
Owner:   yakovt
State:   released
Created: Wed Jul 25 15:01:44 2007
Task:    29458
Comment:
Version automatically created to add/delete to project 'ECSNT#640bsmyakovt-win:project:4'.
by tadmon

Predecessors:
	BsmCommon#6:dir:2
Successors:
	BsmCommon#8:dir:2
	BsmCommon#7.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#8 (dir:2)
Owner:   yakovt
State:   sqa
Created: Thu Jul 17 11:59:27 2008
Task:    35469
Comment:
Version automatically created to add/delete to project 'ECSNT#640yakovt-psr-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#7:dir:2
Successors:
	BsmCommon#9:dir:2
*****************************************************************************
Object:  BsmCommon#7.1.1 (dir:2)
Owner:   yturgman
State:   sqa
Created: Wed Aug 27 17:38:08 2008
Task:    33515
Comment:
Version automatically created to add/delete to project 'ECSNT#640YoelT_Base_Win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#7:dir:2
Successors:
	BsmCommon#7.1.2:dir:2
*****************************************************************************
Object:  BsmCommon#7.1.2 (dir:2)
Owner:   yturgman
State:   sqa
Created: Thu Sep 11 16:46:05 2008
Task:    35916
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#7.1.1:dir:2
Successors:
	BsmCommon#9:dir:2
*****************************************************************************
Object:  BsmCommon#9 (dir:2)
Owner:   yakovt
State:   sqa
Created: Sun Sep 14 15:09:02 2008
Task:    35469
Comment:
Merged 'BsmCommon#8' with 'BsmCommon#7.1.2'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#8:dir:2
	BsmCommon#7.1.2:dir:2
Successors:
	BsmCommon#10:dir:2
*****************************************************************************
Object:  BsmCommon#10 (dir:2)
Owner:   yturgman
State:   sqa
Created: Wed Dec 17 19:18:00 2008
Task:    37216
Comment:
Version automatically created to add/delete to project 'ECSNT#Yoel_640_FP2_WIN:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#9:dir:2
Successors:
	BsmCommon#11:dir:2
*****************************************************************************
Object:  BsmCommon#11 (dir:2)
Owner:   yakovt
State:   released
Created: Wed Jan 07 14:25:28 2009
Task:    37626
Comment:
Version automatically created to add/delete to project 'ECSNT#640fp2yakovt-win:project:4'.
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon#10:dir:2
Successors:
	BsmCommon#12:dir:2
	BsmCommon#11.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#12 (dir:2)
Owner:   yturgman
State:   sqa
Created: Sun Apr 05 10:55:16 2009
Task:    38982
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#11:dir:2
Successors:
	BsmCommon#13:dir:2
*****************************************************************************
Object:  BsmCommon#11.1.1 (dir:2)
Owner:   tadmon
State:   sqa
Created: Sun Apr 05 10:57:07 2009
Task:    38972
Comment:
Version automatically created to add/delete to project 'ECSNT#T6402tadmon:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#11:dir:2
Successors:
	BsmCommon#11.1.2:dir:2
	BsmCommon#13:dir:2
*****************************************************************************
Object:  BsmCommon#11.1.2 (dir:2)
Owner:   tadmon
State:   sqa
Created: Mon Apr 06 09:17:43 2009
Task:    38999
Comment:
Version automatically created to add/delete to project 'ECSNT#T6402tadmon:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#11.1.1:dir:2
Successors:
	BsmCommon#14:dir:2
*****************************************************************************
Object:  BsmCommon#13 (dir:2)
Owner:   yturgman
State:   sqa
Created: Mon Apr 06 09:45:00 2009
Task:    38982
Comment:
Merged 'BsmCommon#12' with 'BsmCommon#11.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#12:dir:2
	BsmCommon#11.1.1:dir:2
Successors:
	BsmCommon#14:dir:2
*****************************************************************************
Object:  BsmCommon#14 (dir:2)
Owner:   tadmon
State:   released
Created: Mon Apr 06 13:00:27 2009
Task:    39005
Comment:
Merged 'BsmCommon#13' with 'BsmCommon#11.1.2'.
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon#11.1.2:dir:2
	BsmCommon#13:dir:2
Successors:
	BsmCommon#15:dir:2
*****************************************************************************
Object:  BsmCommon#15 (dir:2)
Owner:   yakovt
State:   sqa
Created: Thu Apr 16 17:47:28 2009
Task:    39049
Comment:
Version automatically created to add/delete to project 'ECSNT#640fp2yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#14:dir:2
Successors:
	BsmCommon#16:dir:2
*****************************************************************************
Object:  BsmCommon#16 (dir:2)
Owner:   yakovt
State:   released
Created: Fri Apr 17 12:33:30 2009
Task:    39069
Comment:
Version automatically created to add/delete to project 'ECSNT#640fp2yakovt-win:project:4'.
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon#15:dir:2
Successors:
	BsmCommon#17:dir:2
	BsmCommon#16.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#17 (dir:2)
Owner:   evgenir
State:   sqa
Created: Thu Jun 04 18:59:13 2009
Task:    39706
Comment:
Version automatically created to add/delete to project 'ECSNT#evgenir_700_win1:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#16:dir:2
Successors:
	BsmCommon#18:dir:2
*****************************************************************************
Object:  BsmCommon#18 (dir:2)
Owner:   yakovt
State:   sqa
Created: Thu Jul 09 10:34:22 2009
Task:    40215
Comment:
Version automatically created to add/delete to project 'ECSNT#700yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#17:dir:2
Successors:
	BsmCommon#19:dir:2
*****************************************************************************
Object:  BsmCommon#19 (dir:2)
Owner:   tadmon
State:   sqa
Created: Tue Aug 04 11:09:03 2009
Task:    40651
Comment:
Version automatically created to add/delete to project 'ECSNT#700tadmonNEW:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#18:dir:2
Successors:
	BsmCommon#20:dir:2
*****************************************************************************
Object:  BsmCommon#16.1.1 (dir:2)
Owner:   yturgman
State:   released
Created: Tue Nov 03 13:31:42 2009
Task:    42313
Comment:
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon#16:dir:2
Successors:
	BsmCommon#20:dir:2
	BsmCommon#16.1.2:dir:2
	BsmCommon#16.1.1.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#20 (dir:2)
Owner:   yturgman
State:   sqa
Created: Thu Nov 05 23:54:30 2009
Task:    42446
Comment:
Merged 'BsmCommon#19' with 'BsmCommon#16.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#19:dir:2
	BsmCommon#16.1.1:dir:2
Successors:
	BsmCommon#21:dir:2
*****************************************************************************
Object:  BsmCommon#21 (dir:2)
Owner:   yakovt
State:   sqa
Created: Tue Jan 05 17:48:21 2010
Task:    44290
Comment:
Version automatically created to add/delete to project 'ECSNT#700yakovt-psr-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#20:dir:2
Successors:
	BsmCommon#22:dir:2
*****************************************************************************
Object:  BsmCommon#16.1.2 (dir:2)
Owner:   yakovt
State:   sqa
Created: Tue Jan 19 09:27:49 2010
Task:    44568
Comment:
Version automatically created to add/delete to project 'ECSNT#640fp4-yakovt-win:project:4'.

Predecessors:
	BsmCommon#16.1.1:dir:2
Successors:
	BsmCommon#22:dir:2
*****************************************************************************
Object:  BsmCommon#22 (dir:2)
Owner:   yakovt
State:   sqa
Created: Tue Jan 19 11:56:41 2010
Task:    44582
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#21:dir:2
	BsmCommon#16.1.2:dir:2
Successors:
	BsmCommon#23:dir:2
	BsmCommon#22.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#23 (dir:2)
Owner:   yakovt
State:   sqa
Created: Sun Feb 21 16:15:15 2010
Task:    45537
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#22:dir:2
Successors:
	BsmCommon#24:dir:2
*****************************************************************************
Object:  BsmCommon#24 (dir:2)
Owner:   yakovt
State:   sqa
Created: Thu Mar 04 15:12:12 2010
Task:    45852
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#23:dir:2
Successors:
	BsmCommon#25:dir:2
*****************************************************************************
Object:  BsmCommon#25 (dir:2)
Owner:   yakovt
State:   sqa
Created: Tue Mar 09 16:07:27 2010
Task:    45947
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#24:dir:2
Successors:
	BsmCommon#26:dir:2
	BsmCommon#25.1.1:dir:2
*****************************************************************************
Object:  BsmCommon#16.1.1.1.1 (dir:2)
Owner:   yakovt
State:   integrate
Created: Thu Mar 11 10:55:04 2010
Task:    45988
Comment:
Version automatically created to add/delete to project 'ECSNT#640fp3yakovt-win:project:4'.
Predecessors:
	BsmCommon#16.1.1:dir:2
Successors:
*****************************************************************************
Object:  BsmCommon#26 (dir:2)
Owner:   yakovt
State:   sqa
Created: Tue Mar 16 13:11:09 2010
Task:    46080
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#25:dir:2
Successors:
	BsmCommon#27:dir:2
*****************************************************************************
Object:  BsmCommon#27 (dir:2)
Owner:   yakovt
State:   sqa
Created: Sun Mar 21 10:03:38 2010
Task:    46075
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#26:dir:2
Successors:
	BsmCommon#28:dir:2
*****************************************************************************
Object:  BsmCommon#25.1.1 (dir:2)
Owner:   evgenir
State:   working
Created: Sun Mar 28 14:35:38 2010
Task:    46140
Comment:
Version automatically created to add/delete to project 'ECSNT#700FP1_evgenir_win:project:4'.
Predecessors:
	BsmCommon#25:dir:2
Successors:
*****************************************************************************
Object:  BsmCommon#22.1.1 (dir:2)
Owner:   tadmon
State:   sqa
Created: Wed Apr 14 10:16:16 2010
Task:    46603
Comment:
Version automatically created to add/delete to project 'ECSNT#700tadmonNEW:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#22:dir:2
Successors:
*****************************************************************************
Object:  BsmCommon#28 (dir:2)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 10:25:10 2010
Task:    46511
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon#27:dir:2
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse BsmCommon#28:dir:2
Execute (executor.py:83): OUTPUT_BEGIN
BsmCommon#28 sqa yakovt dir ECSNT 2 46511
	ECSNT\BsmCommon#28@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon#28@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon#28@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon#28@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon#28@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon#28@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon#28@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon#28@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon#28@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon#28@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmCommon#28:dir:2
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object BsmCommon#28:dir:2 has type dir
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history BsmCommon.vcproj#39:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  BsmCommon.vcproj#1 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Jun 13 19:39:40 2007
Task:    28889
Comment:
changed to sqa state by user:mntinteg
Predecessors:
Successors:
	BsmCommon.vcproj#2:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#2 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Jun 19 17:01:25 2007
Task:    29068
Comment:
changed to sqa state by mntinteg
Predecessors:
	BsmCommon.vcproj#1:ms_dsp:1
Successors:
	BsmCommon.vcproj#3:ms_dsp:1
	BsmCommon.vcproj#2.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#3 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Jul 11 16:56:39 2007
Task:    29299
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#2:ms_dsp:1
Successors:
	BsmCommon.vcproj#4:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#4 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Jul 15 11:14:17 2007
Task:    29326
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#3:ms_dsp:1
Successors:
	BsmCommon.vcproj#5:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#5 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Mon Jul 16 13:30:41 2007
Task:    29345
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#4:ms_dsp:1
Successors:
	BsmCommon.vcproj#6:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#6 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Thu Jul 19 18:37:47 2007
Task:    29389
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#5:ms_dsp:1
Successors:
	BsmCommon.vcproj#7:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#7 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Jul 22 10:07:06 2007
Task:    29411
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#6:ms_dsp:1
Successors:
	BsmCommon.vcproj#8:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#8 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Jul 25 15:02:05 2007
Task:    29458
Comment:
by tadmon
Predecessors:
	BsmCommon.vcproj#7:ms_dsp:1
Successors:
	BsmCommon.vcproj#9:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#2.1.1 (ms_dsp:1)
Owner:   amoshayo
State:   sqa
Created: Wed Aug 08 16:02:09 2007
Task:    29658
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#2:ms_dsp:1
Successors:
	BsmCommon.vcproj#9:ms_dsp:1
	BsmCommon.vcproj#2.1.2:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#9 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Thu Aug 23 16:08:00 2007
Task:    29797
Comment:
Merged 'BsmCommon.vcproj#8' with 'BsmCommon.vcproj#2.1.1'.
by tadmon
Predecessors:
	BsmCommon.vcproj#8:ms_dsp:1
	BsmCommon.vcproj#2.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#10:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#2.1.2 (ms_dsp:1)
Owner:   rgalia
State:   sqa
Created: Mon Oct 29 15:28:10 2007
Task:    30746
Comment:
[-] had to add 2 new TAO libraries
[-] will use $(tao_LIBSd) and $(tao_LIBSr) in vcproj files to list all required TAO libraries
[-] EMCtrls\EmConfirmationBox file defined DEFAULT_SIZE which collided with ACE's define. Made it a static const int memebr.
[-] ForecastCommon problems
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#2.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#10:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#10 (ms_dsp:1)
Owner:   eyals
State:   released
Created: Thu Nov 01 16:55:01 2007
Task:    30844
Comment:
Merged 'BsmCommon.vcproj#9' with 'BsmCommon.vcproj#2.1.2'.
by tadmon

Predecessors:
	BsmCommon.vcproj#9:ms_dsp:1
	BsmCommon.vcproj#2.1.2:ms_dsp:1
Successors:
	BsmCommon.vcproj#11:ms_dsp:1
	BsmCommon.vcproj#10.1.1:ms_dsp:1
	BsmCommon.vcproj#10.2.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#11 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Jul 22 16:37:03 2008
Task:    35469
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#10:ms_dsp:1
Successors:
	BsmCommon.vcproj#10.1.3:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#10.1.1 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Wed Aug 27 17:34:08 2008
Task:    33515
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#10:ms_dsp:1
Successors:
	BsmCommon.vcproj#10.1.2:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#10.1.2 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Thu Sep 11 16:46:23 2008
Task:    35916
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#10.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#10.1.3:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#10.1.3 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Mon Sep 15 11:35:27 2008
Task:    35469
Comment:
Merged 'BsmCommon.vcproj#10.1.2' with 'BsmCommon.vcproj#11'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#11:ms_dsp:1
	BsmCommon.vcproj#10.1.2:ms_dsp:1
Successors:
	BsmCommon.vcproj#13:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#13 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Wed Dec 17 19:17:46 2008
Task:    37216
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#10.1.3:ms_dsp:1
Successors:
	BsmCommon.vcproj#14:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#14 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Jan 07 14:18:17 2009
Task:    37626
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#13:ms_dsp:1
Successors:
	BsmCommon.vcproj#15:ms_dsp:1
	BsmCommon.vcproj#14.1.1:ms_dsp:1
	BsmCommon.vcproj#14.2.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#10.2.1 (ms_dsp:1)
Owner:   ariels
State:   sqa
Created: Thu Feb 26 12:38:08 2009
Task:    38340
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#10:ms_dsp:1
Successors:
	BsmCommon.vcproj#15:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#15 (ms_dsp:1)
Owner:   barak
State:   released
Created: Mon Mar 02 16:26:36 2009
Task:    38413
Comment:
Merged from 'BsmCommon.vcproj#14:ms_dsp:1' and 'BsmCommon.vcproj#10.2.1:ms_dsp:1' by barak.



Predecessors:
	BsmCommon.vcproj#14:ms_dsp:1
	BsmCommon.vcproj#10.2.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#21:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#14.1.1 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Sun Apr 05 11:16:14 2009
Task:    38982
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#14:ms_dsp:1
Successors:
	BsmCommon.vcproj#16:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#14.2.1 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Sun Apr 05 11:31:11 2009
Task:    38972
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#14:ms_dsp:1
Successors:
	BsmCommon.vcproj#14.2.2:ms_dsp:1
	BsmCommon.vcproj#16:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#14.2.2 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Mon Apr 06 09:20:14 2009
Task:    38999
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#14.2.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#18:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#16 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Mon Apr 06 09:45:24 2009
Task:    38982
Comment:
Merged 'BsmCommon.vcproj#14.1.1' with 'BsmCommon.vcproj#14.2.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#14.1.1:ms_dsp:1
	BsmCommon.vcproj#14.2.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#17:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#17 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Mon Apr 06 10:27:21 2009
Task:    39001
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#16:ms_dsp:1
Successors:
	BsmCommon.vcproj#18:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#18 (ms_dsp:1)
Owner:   tadmon
State:   released
Created: Mon Apr 06 12:57:25 2009
Task:    39005
Comment:
Merged 'BsmCommon.vcproj#17' with 'BsmCommon.vcproj#14.2.2'.
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon.vcproj#14.2.2:ms_dsp:1
	BsmCommon.vcproj#17:ms_dsp:1
Successors:
	BsmCommon.vcproj#19:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#19 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 16 17:23:29 2009
Task:    39049
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#18:ms_dsp:1
Successors:
	BsmCommon.vcproj#20:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#20 (ms_dsp:1)
Owner:   yakovt
State:   released
Created: Fri Apr 17 12:43:49 2009
Task:    39069
Comment:
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon.vcproj#19:ms_dsp:1
Successors:
	BsmCommon.vcproj#21:ms_dsp:1
	BsmCommon.vcproj#20.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#21 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun May 10 14:23:02 2009
Task:    39374
Comment:
Merged 'BsmCommon.vcproj#20' with 'BsmCommon.vcproj#15'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#15:ms_dsp:1
	BsmCommon.vcproj#20:ms_dsp:1
Successors:
	BsmCommon.vcproj#22:ms_dsp:1
	BsmCommon.vcproj#21.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#22 (ms_dsp:1)
Owner:   tyeger
State:   sqa
Created: Wed Jun 03 18:35:51 2009
Task:    39544
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#21:ms_dsp:1
Successors:
	BsmCommon.vcproj#23:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#21.1.1 (ms_dsp:1)
Owner:   evgenir
State:   sqa
Created: Thu Jun 04 18:58:46 2009
Task:    39706
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#21:ms_dsp:1
Successors:
	BsmCommon.vcproj#21.1.2:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#21.1.2 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Mon Jun 08 15:19:45 2009
Task:    39759
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#21.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#23:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#23 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Wed Jun 10 18:42:21 2009
Task:    39889
Comment:
Merged 'BsmCommon.vcproj#22' with 'BsmCommon.vcproj#21.1.2'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#22:ms_dsp:1
	BsmCommon.vcproj#21.1.2:ms_dsp:1
Successors:
	BsmCommon.vcproj#24:ms_dsp:1
	BsmCommon.vcproj#23.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#24 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Thu Jul 09 10:34:42 2009
Task:    40215
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#23:ms_dsp:1
Successors:
	BsmCommon.vcproj#25:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#23.1.1 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Sun Jul 12 10:39:10 2009
Task:    40085
Comment:
Version automatically created during work area reconciliation.


changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#23:ms_dsp:1
Successors:
	BsmCommon.vcproj#25:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#25 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Tue Jul 14 12:24:57 2009
Task:    40265
Comment:
Merged 'BsmCommon.vcproj#24' with 'BsmCommon.vcproj#23.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#24:ms_dsp:1
	BsmCommon.vcproj#23.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#26:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#26 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Mon Jul 20 17:46:25 2009
Task:    40363
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#25:ms_dsp:1
Successors:
	BsmCommon.vcproj#27:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#27 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Jul 29 16:00:28 2009
Task:    40595
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#26:ms_dsp:1
Successors:
	BsmCommon.vcproj#28:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#28 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Tue Aug 04 11:09:38 2009
Task:    40651
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#27:ms_dsp:1
Successors:
	BsmCommon.vcproj#29:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#20.1.1 (ms_dsp:1)
Owner:   yturgman
State:   released
Created: Tue Nov 03 13:53:18 2009
Task:    42313
Comment:
changed to sqa state by GAP automatic approval

Predecessors:
	BsmCommon.vcproj#20:ms_dsp:1
Successors:
	BsmCommon.vcproj#29:ms_dsp:1
	BsmCommon.vcproj#20.1.2:ms_dsp:1
	BsmCommon.vcproj#20.1.1.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#29 (ms_dsp:1)
Owner:   yturgman
State:   sqa
Created: Thu Nov 05 23:55:09 2009
Task:    42446
Comment:
Merged 'BsmCommon.vcproj#28' with 'BsmCommon.vcproj#20.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#28:ms_dsp:1
	BsmCommon.vcproj#20.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#30:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#30 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Jan 05 17:47:39 2010
Task:    44290
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#29:ms_dsp:1
Successors:
	BsmCommon.vcproj#31:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#20.1.2 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Jan 19 09:23:03 2010
Task:    44568
Comment:

Predecessors:
	BsmCommon.vcproj#20.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#31:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#31 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Jan 19 11:56:47 2010
Task:    44582
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#30:ms_dsp:1
	BsmCommon.vcproj#20.1.2:ms_dsp:1
Successors:
	BsmCommon.vcproj#32:ms_dsp:1
	BsmCommon.vcproj#31.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#32 (ms_dsp:1)
Owner:   gtwig
State:   sqa
Created: Mon Feb 15 10:38:40 2010
Task:    45406
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#31:ms_dsp:1
Successors:
	BsmCommon.vcproj#33:ms_dsp:1
	BsmCommon.vcproj#32.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#31.1.1 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Feb 21 16:04:03 2010
Task:    45537
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#31:ms_dsp:1
Successors:
	BsmCommon.vcproj#33:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#33 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Mon Mar 01 15:36:27 2010
Task:    45537
Comment:
Merged 'BsmCommon.vcproj#32' with 'BsmCommon.vcproj#31.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#32:ms_dsp:1
	BsmCommon.vcproj#31.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#34:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#34 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 04 15:15:54 2010
Task:    45852
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#33:ms_dsp:1
Successors:
	BsmCommon.vcproj#35:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#35 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 09 16:07:45 2010
Task:    45947
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#34:ms_dsp:1
Successors:
	BsmCommon.vcproj#36:ms_dsp:1
	BsmCommon.vcproj#35.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#32.1.1 (ms_dsp:1)
Owner:   rluzzatt
State:   sqa
Created: Wed Mar 10 16:54:47 2010
Task:    45970
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#32:ms_dsp:1
Successors:
	BsmCommon.vcproj#36.1.1:ms_dsp:1
	BsmCommon.vcproj#32.1.2:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#20.1.1.1.1 (ms_dsp:1)
Owner:   yakovt
State:   integrate
Created: Thu Mar 11 11:01:14 2010
Task:    45988
Comment:

Predecessors:
	BsmCommon.vcproj#20.1.1:ms_dsp:1
Successors:
*****************************************************************************
Object:  BsmCommon.vcproj#36 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 16 13:06:21 2010
Task:    46080
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#35:ms_dsp:1
Successors:
	BsmCommon.vcproj#37:ms_dsp:1
	BsmCommon.vcproj#36.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#37 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Mar 21 11:20:31 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#36:ms_dsp:1
Successors:
	BsmCommon.vcproj#38:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#36.1.1 (ms_dsp:1)
Owner:   rluzzatt
State:   sqa
Created: Wed Mar 24 11:24:43 2010
Task:    46267
Comment:
Merged 'BsmCommon.vcproj#36' with 'BsmCommon.vcproj#32.1.1'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#32.1.1:ms_dsp:1
	BsmCommon.vcproj#36:ms_dsp:1
Successors:
	BsmCommon.vcproj#38:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#38 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Mar 28 08:46:46 2010
Task:    46075
Comment:
Merged 'BsmCommon.vcproj#36.1.1' with 'BsmCommon.vcproj#37'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#37:ms_dsp:1
	BsmCommon.vcproj#36.1.1:ms_dsp:1
Successors:
	BsmCommon.vcproj#39:ms_dsp:1
*****************************************************************************
Object:  BsmCommon.vcproj#35.1.1 (ms_dsp:1)
Owner:   evgenir
State:   working
Created: Sun Mar 28 16:09:12 2010
Task:    46140
Comment:

Predecessors:
	BsmCommon.vcproj#35:ms_dsp:1
Successors:
*****************************************************************************
Object:  BsmCommon.vcproj#32.1.2 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Wed Apr 14 10:17:04 2010
Task:    46603
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#32.1.1:ms_dsp:1
Successors:
*****************************************************************************
Object:  BsmCommon.vcproj#39 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 10:25:22 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmCommon.vcproj#38:ms_dsp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse BsmCommon.vcproj#39:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
BsmCommon.vcproj#39 sqa yakovt ms_dsp ECSNT 1 46511
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\BsmCommon.vcproj#39@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmCommon.vcproj#39:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
<?xml version="1.0" encoding="windows-1255"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="9.00"
	Name="BsmCommon"
	ProjectGUID="{36D96E84-6AF8-4E75-B2CC-CA16A752869C}"
	RootNamespace="BsmCommon"
	Keyword="Win32Proj"
	TargetFrameworkVersion="131072"
	>
	<Platforms>
		<Platform
			Name="Win32"
		/>
		<Platform
			Name="x64"
		/>
	</Platforms>
	<ToolFiles>
	</ToolFiles>
	<Configurations>
		<Configuration
			Name="Debug|Win32"
			OutputDirectory="Debug"
			IntermediateDirectory="Debug"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md"
				MinimalRebuild="false"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="4"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(TOOLKIT)lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Debug|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC"
				MinimalRebuild="false"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib64&quot;;&quot;$(RW)/lib64&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Release"
			IntermediateDirectory="Release"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m"
				RuntimeLibrary="2"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/FORCE:MULTIPLE"
				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP"
				RuntimeLibrary="2"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/FORCE:MULTIPLE"
				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
	</Configurations>
	<References>
	</References>
	<Files>
		<Filter
			Name="Source Files"
			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
			>
			<File
				RelativePath=".\BsmCommon.cpp"
				>
			</File>
			<File
				RelativePath=".\BuildResourceUpdate.cpp"
				>
			</File>
			<File
				RelativePath=".\CommonApplicationServices.cpp"
				>
			</File>
			<File
				RelativePath=".\Configuration.cpp"
				>
			</File>
			<File
				RelativePath=".\ContextStreambuf.cpp"
				>
			</File>
			<File
				RelativePath=".\DefJob.cpp"
				>
			</File>
			<File
				RelativePath=".\DefTableInfo.cpp"
				>
			</File>
			<File
				RelativePath=".\FcException.cpp"
				>
			</File>
			<File
				RelativePath=".\Helper.cpp"
				>
			</File>
			<File
				RelativePath=".\JobStatus.cpp"
				>
			</File>
			<File
				RelativePath=".\Locker.cpp"
				>
			</File>
			<File
				RelativePath=".\LockerImpl.cpp"
				>
			</File>
			<File
				RelativePath=".\MetricReport.cpp"
				>
			</File>
			<File
				RelativePath=".\OrderId.cpp"
				>
			</File>
			<File
				RelativePath=".\ReverseTokenizer.cpp"
				>
			</File>
			<File
				RelativePath=".\Sleeper.cpp"
				>
			</File>
			<File
				RelativePath=".\stdafx.cpp"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Debug|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\TableNameMatcher.cpp"
				>
			</File>
			<File
				RelativePath=".\TimeBounds.cpp"
				>
			</File>
			<File
				RelativePath=".\Values.cpp"
				>
			</File>
			<File
				RelativePath=".\VectorBool.cpp"
				>
			</File>
			<File
				RelativePath=".\WLPeriod.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkingTask.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkingThread.cpp"
				>
			</File>
		</Filter>
		<Filter
			Name="Header Files"
			Filter="h;hpp;hxx;hm;inl;inc;xsd"
			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
			>
			<File
				RelativePath=".\ApplicationService.h"
				>
			</File>
			<File
				RelativePath=".\BimAeDefines.h"
				>
			</File>
			<File
				RelativePath=".\BsmCommon.h"
				>
			</File>
			<File
				RelativePath=".\BuildResourceUpdate.h"
				>
			</File>
			<File
				RelativePath=".\CommonApplicationServices.h"
				>
			</File>
			<File
				RelativePath=".\ConditionKey.h"
				>
			</File>
			<File
				RelativePath=".\Configuration.h"
				>
			</File>
			<File
				RelativePath=".\ContextStreambuf.h"
				>
			</File>
			<File
				RelativePath=".\DefJob.h"
				>
			</File>
			<File
				RelativePath=".\DefTableInfo.h"
				>
			</File>
			<File
				RelativePath=".\FcException.h"
				>
			</File>
			<File
				RelativePath=".\FixedArray.h"
				>
			</File>
			<File
				RelativePath=".\Helper.h"
				>
			</File>
			<File
				RelativePath=".\JobStatus.h"
				>
			</File>
			<File
				RelativePath=".\Locker.h"
				>
			</File>
			<File
				RelativePath=".\LockerImpl.h"
				>
			</File>
			<File
				RelativePath=".\MetricReport.h"
				>
			</File>
			<File
				RelativePath=".\NotfiyI.h"
				>
			</File>
			<File
				RelativePath=".\OrderId.h"
				>
			</File>
			<File
				RelativePath=".\ReverseTokenizer.h"
				>
			</File>
			<File
				RelativePath=".\Sleeper.h"
				>
			</File>
			<File
				RelativePath=".\stdafx.h"
				>
			</File>
			<File
				RelativePath=".\SystemParametersDef.h"
				>
			</File>
			<File
				RelativePath=".\TableNameMatcher.h"
				>
			</File>
			<File
				RelativePath=".\TimeBounds.h"
				>
			</File>
			<File
				RelativePath=".\TinyArray.h"
				>
			</File>
			<File
				RelativePath=".\Value_Ptr.h"
				>
			</File>
			<File
				RelativePath=".\Values.h"
				>
			</File>
			<File
				RelativePath=".\VectorBool.h"
				>
			</File>
			<File
				RelativePath=".\WLPeriod.h"
				>
			</File>
			<File
				RelativePath=".\WorkingTask.h"
				>
			</File>
			<File
				RelativePath=".\WorkingThread.h"
				>
			</File>
		</Filter>
		<Filter
			Name="Resource Files"
			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
			>
		</Filter>
		<Filter
			Name="smartheap"
			>
			<File
				RelativePath="..\Common\SmartHeapWin.c"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Debug|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
			</File>
		</Filter>
		<File
			RelativePath=".\Makefile"
			>
		</File>
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object BsmCommon.vcproj#39:ms_dsp:1 has type ms_dsp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\BsmCommon.vcproj
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\BsmCommon.vcproj
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\BsmCommon.vcproj
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  BsmCommon.vcproj#39:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            BsmCommon.vcproj#38        BsmCommon.vcproj#39       
------------------------- -------------------------- --------------------------
create_time               Sun Mar 28 08:46:46 2010   Wed Apr 14 10:25:22 2010  
modify_time               Mon Apr 12 11:58:07 2010   Wed Apr 14 17:02:47 2010  
version                   38                         39                        
source_create_time        Wed Mar 24 11:33:08 2010   Sun Mar 28 08:46:49 2010  
source_modify_time        Sun Mar 28 08:46:49 2010   Wed Apr 14 10:50:09 2010  

===============================================================================
Associated tasks differs:

BsmCommon.vcproj#38
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

BsmCommon.vcproj#39
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'comment' differs:

1d0
< Merged 'BsmCommon.vcproj#36.1.1' with 'BsmCommon.vcproj#37'.

===============================================================================
Text attribute 'source' differs:

106,188d105
< 			Name="Release|Win32"
< 			OutputDirectory="Release"
< 			IntermediateDirectory="Release"
< 			ConfigurationType="2"
< 			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
< 			CharacterSet="2"
< 			>
< 			<Tool
< 				Name="VCPreBuildEventTool"
< 			/>
< 			<Tool
< 				Name="VCCustomBuildTool"
< 			/>
< 			<Tool
< 				Name="VCXMLDataGeneratorTool"
< 			/>
< 			<Tool
< 				Name="VCWebServiceProxyGeneratorTool"
< 			/>
< 			<Tool
< 				Name="VCMIDLTool"
< 			/>
< 			<Tool
< 				Name="VCCLCompilerTool"
< 				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
< 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m"
< 				RuntimeLibrary="2"
< 				RuntimeTypeInfo="true"
< 				UsePrecompiledHeader="2"
< 				WarningLevel="3"
< 				Detect64BitPortabilityProblems="false"
< 				DebugInformationFormat="3"
< 			/>
< 			<Tool
< 				Name="VCManagedResourceCompilerTool"
< 			/>
< 			<Tool
< 				Name="VCResourceCompilerTool"
< 			/>
< 			<Tool
< 				Name="VCPreLinkEventTool"
< 			/>
< 			<Tool
< 				Name="VCLinkerTool"
< 				AdditionalOptions="/FORCE:MULTIPLE"
< 				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib"
< 				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
< 				LinkIncremental="1"
< 				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
< 				GenerateDebugInformation="true"
< 				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
< 				SubSystem="2"
< 				OptimizeReferences="2"
< 				EnableCOMDATFolding="2"
< 				RandomizedBaseAddress="1"
< 				DataExecutionPrevention="0"
< 				ImportLibrary="$(OutDir)/BsmCommon.lib"
< 				TargetMachine="1"
< 			/>
< 			<Tool
< 				Name="VCALinkTool"
< 			/>
< 			<Tool
< 				Name="VCManifestTool"
< 			/>
< 			<Tool
< 				Name="VCXDCMakeTool"
< 			/>
< 			<Tool
< 				Name="VCBscMakeTool"
< 			/>
< 			<Tool
< 				Name="VCFxCopTool"
< 			/>
< 			<Tool
< 				Name="VCAppVerifierTool"
< 			/>
< 			<Tool
< 				Name="VCPostBuildEventTool"
< 				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
< 			/>
< 		</Configuration>
< 		<Configuration
215,216c132,133
< 				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
< 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md"
---
> 				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
> 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC"
237c154
< 				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib"
---
> 				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib"
240c157
< 				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(TOOLKIT)lib&quot;;&quot;$(RW)/lib&quot;"
---
> 				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib64&quot;;&quot;$(RW)/lib64&quot;"
273,275c190,192
< 			Name="Release|x64"
< 			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
< 			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
---
> 			Name="Release|Win32"
> 			OutputDirectory="Release"
> 			IntermediateDirectory="Release"
294d210
< 				TargetEnvironment="3"
298c214
< 				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT_64)&quot;;&quot;$(ACE_ROOT_64)\TAO&quot;;&quot;$(ACE_ROOT_64)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap_64)\include&quot;;&quot;$(MSDEV_SmartHeap_64)\msvc&quot;"
---
> 				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
322c238
< 				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT_64)\lib&quot;;&quot;$(RW)\lib64&quot;;&quot;$(MSDEV_SmartHeap_64)\msvc&quot;"
---
> 				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
331,415c247
< 				TargetMachine="17"
< 			/>
< 			<Tool
< 				Name="VCALinkTool"
< 			/>
< 			<Tool
< 				Name="VCManifestTool"
< 			/>
< 			<Tool
< 				Name="VCXDCMakeTool"
< 			/>
< 			<Tool
< 				Name="VCBscMakeTool"
< 			/>
< 			<Tool
< 				Name="VCFxCopTool"
< 			/>
< 			<Tool
< 				Name="VCAppVerifierTool"
< 			/>
< 			<Tool
< 				Name="VCPostBuildEventTool"
< 				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
< 			/>
< 		</Configuration>
< 		<Configuration
< 			Name="Debug|x64"
< 			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
< 			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
< 			ConfigurationType="2"
< 			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
< 			CharacterSet="2"
< 			>
< 			<Tool
< 				Name="VCPreBuildEventTool"
< 			/>
< 			<Tool
< 				Name="VCCustomBuildTool"
< 			/>
< 			<Tool
< 				Name="VCXMLDataGeneratorTool"
< 			/>
< 			<Tool
< 				Name="VCWebServiceProxyGeneratorTool"
< 			/>
< 			<Tool
< 				Name="VCMIDLTool"
< 				TargetEnvironment="3"
< 			/>
< 			<Tool
< 				Name="VCCLCompilerTool"
< 				Optimization="0"
< 				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
< 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC"
< 				MinimalRebuild="false"
< 				BasicRuntimeChecks="3"
< 				RuntimeLibrary="3"
< 				RuntimeTypeInfo="true"
< 				UsePrecompiledHeader="2"
< 				WarningLevel="3"
< 				Detect64BitPortabilityProblems="false"
< 				DebugInformationFormat="3"
< 			/>
< 			<Tool
< 				Name="VCManagedResourceCompilerTool"
< 			/>
< 			<Tool
< 				Name="VCResourceCompilerTool"
< 			/>
< 			<Tool
< 				Name="VCPreLinkEventTool"
< 			/>
< 			<Tool
< 				Name="VCLinkerTool"
< 				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib"
< 				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
< 				LinkIncremental="2"
< 				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib64&quot;;&quot;$(RW)/lib64&quot;"
< 				GenerateDebugInformation="true"
< 				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
< 				SubSystem="2"
< 				RandomizedBaseAddress="1"
< 				DataExecutionPrevention="0"
< 				ImportLibrary="$(OutDir)/BsmCommon.lib"
< 				TargetMachine="17"
---
> 				TargetMachine="1"
593a426,429
> 				RelativePath=".\Sleeper.cpp"
> 				>
> 			</File>
> 			<File
605c441
< 					Name="Release|Win32"
---
> 					Name="Debug|x64"
613c449
< 					Name="Debug|x64"
---
> 					Name="Release|Win32"
743a580,583
> 				RelativePath=".\Sleeper.h"
> 				>
> 			</File>
> 			<File
809c649
< 					Name="Release|Win32"
---
> 					Name="Debug|x64"
817c657
< 					Name="Debug|x64"
---
> 					Name="Release|Win32"

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Sun Mar 28 08:46:46 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:48 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:07 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 10:25:22 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:12 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:47 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmCommon.vcproj#38:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
<?xml version="1.0" encoding="windows-1255"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="9.00"
	Name="BsmCommon"
	ProjectGUID="{36D96E84-6AF8-4E75-B2CC-CA16A752869C}"
	RootNamespace="BsmCommon"
	Keyword="Win32Proj"
	TargetFrameworkVersion="131072"
	>
	<Platforms>
		<Platform
			Name="Win32"
		/>
		<Platform
			Name="x64"
		/>
	</Platforms>
	<ToolFiles>
	</ToolFiles>
	<Configurations>
		<Configuration
			Name="Debug|Win32"
			OutputDirectory="Debug"
			IntermediateDirectory="Debug"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md"
				MinimalRebuild="false"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="4"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(TOOLKIT)lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Release"
			IntermediateDirectory="Release"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m"
				RuntimeLibrary="2"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/FORCE:MULTIPLE"
				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Debug|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md"
				MinimalRebuild="false"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(TOOLKIT)lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT_64)&quot;;&quot;$(ACE_ROOT_64)\TAO&quot;;&quot;$(ACE_ROOT_64)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap_64)\include&quot;;&quot;$(MSDEV_SmartHeap_64)\msvc&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m"
				RuntimeLibrary="2"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/FORCE:MULTIPLE"
				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT_64)\lib&quot;;&quot;$(RW)\lib64&quot;;&quot;$(MSDEV_SmartHeap_64)\msvc&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Debug|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT_64)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC"
				MinimalRebuild="false"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="$(XERCESd) helper-vc-debug-mt.lib $(tao_LIBSd) thread-vc-debug-mt.lib time-vc-debug-mt.lib psapi.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT_64)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib64&quot;;&quot;$(RW)/lib64&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|x64"
			OutputDirectory="$(PlatformName)\$(ConfigurationName)"
			IntermediateDirectory="$(PlatformName)\$(ConfigurationName)"
			ConfigurationType="2"
			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
				TargetEnvironment="3"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)\src&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;../;../../;&quot;$(RW)&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMCOMMON_EXP;OS_WIN_NT_4_0;NO_MFC;EM_WITH_SMP"
				RuntimeLibrary="2"
				RuntimeTypeInfo="true"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalOptions="/FORCE:MULTIPLE"
				AdditionalDependencies=".\Release\SmartHeapWin.obj $(XERCESr) helper-vc-mt.lib thread-vc-mt.lib $(tao_LIBSr) time-vc-mt.lib psapi.lib"
				OutputFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(COREKIT)\lib\win32&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(RW)\lib&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmcommon-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				ImportLibrary="$(OutDir)/BsmCommon.lib"
				TargetMachine="17"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
	</Configurations>
	<References>
	</References>
	<Files>
		<Filter
			Name="Source Files"
			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
			>
			<File
				RelativePath=".\BsmCommon.cpp"
				>
			</File>
			<File
				RelativePath=".\BuildResourceUpdate.cpp"
				>
			</File>
			<File
				RelativePath=".\CommonApplicationServices.cpp"
				>
			</File>
			<File
				RelativePath=".\Configuration.cpp"
				>
			</File>
			<File
				RelativePath=".\ContextStreambuf.cpp"
				>
			</File>
			<File
				RelativePath=".\DefJob.cpp"
				>
			</File>
			<File
				RelativePath=".\DefTableInfo.cpp"
				>
			</File>
			<File
				RelativePath=".\FcException.cpp"
				>
			</File>
			<File
				RelativePath=".\Helper.cpp"
				>
			</File>
			<File
				RelativePath=".\JobStatus.cpp"
				>
			</File>
			<File
				RelativePath=".\Locker.cpp"
				>
			</File>
			<File
				RelativePath=".\LockerImpl.cpp"
				>
			</File>
			<File
				RelativePath=".\MetricReport.cpp"
				>
			</File>
			<File
				RelativePath=".\OrderId.cpp"
				>
			</File>
			<File
				RelativePath=".\ReverseTokenizer.cpp"
				>
			</File>
			<File
				RelativePath=".\stdafx.cpp"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Debug|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\TableNameMatcher.cpp"
				>
			</File>
			<File
				RelativePath=".\TimeBounds.cpp"
				>
			</File>
			<File
				RelativePath=".\Values.cpp"
				>
			</File>
			<File
				RelativePath=".\VectorBool.cpp"
				>
			</File>
			<File
				RelativePath=".\WLPeriod.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkingTask.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkingThread.cpp"
				>
			</File>
		</Filter>
		<Filter
			Name="Header Files"
			Filter="h;hpp;hxx;hm;inl;inc;xsd"
			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
			>
			<File
				RelativePath=".\ApplicationService.h"
				>
			</File>
			<File
				RelativePath=".\BimAeDefines.h"
				>
			</File>
			<File
				RelativePath=".\BsmCommon.h"
				>
			</File>
			<File
				RelativePath=".\BuildResourceUpdate.h"
				>
			</File>
			<File
				RelativePath=".\CommonApplicationServices.h"
				>
			</File>
			<File
				RelativePath=".\ConditionKey.h"
				>
			</File>
			<File
				RelativePath=".\Configuration.h"
				>
			</File>
			<File
				RelativePath=".\ContextStreambuf.h"
				>
			</File>
			<File
				RelativePath=".\DefJob.h"
				>
			</File>
			<File
				RelativePath=".\DefTableInfo.h"
				>
			</File>
			<File
				RelativePath=".\FcException.h"
				>
			</File>
			<File
				RelativePath=".\FixedArray.h"
				>
			</File>
			<File
				RelativePath=".\Helper.h"
				>
			</File>
			<File
				RelativePath=".\JobStatus.h"
				>
			</File>
			<File
				RelativePath=".\Locker.h"
				>
			</File>
			<File
				RelativePath=".\LockerImpl.h"
				>
			</File>
			<File
				RelativePath=".\MetricReport.h"
				>
			</File>
			<File
				RelativePath=".\NotfiyI.h"
				>
			</File>
			<File
				RelativePath=".\OrderId.h"
				>
			</File>
			<File
				RelativePath=".\ReverseTokenizer.h"
				>
			</File>
			<File
				RelativePath=".\stdafx.h"
				>
			</File>
			<File
				RelativePath=".\SystemParametersDef.h"
				>
			</File>
			<File
				RelativePath=".\TableNameMatcher.h"
				>
			</File>
			<File
				RelativePath=".\TimeBounds.h"
				>
			</File>
			<File
				RelativePath=".\TinyArray.h"
				>
			</File>
			<File
				RelativePath=".\Value_Ptr.h"
				>
			</File>
			<File
				RelativePath=".\Values.h"
				>
			</File>
			<File
				RelativePath=".\VectorBool.h"
				>
			</File>
			<File
				RelativePath=".\WLPeriod.h"
				>
			</File>
			<File
				RelativePath=".\WorkingTask.h"
				>
			</File>
			<File
				RelativePath=".\WorkingThread.h"
				>
			</File>
		</Filter>
		<Filter
			Name="Resource Files"
			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
			>
		</Filter>
		<Filter
			Name="smartheap"
			>
			<File
				RelativePath="..\Common\SmartHeapWin.c"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Debug|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|x64"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="0"
					/>
				</FileConfiguration>
			</File>
		</Filter>
		<File
			RelativePath=".\Makefile"
			>
		</File>
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\BsmCommon.vcproj
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\BsmCommon.vcproj
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\BsmCommon.vcproj.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\BsmCommon.vcproj.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history BsmConfigurationDef.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  BsmConfigurationDef.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Mar 21 11:21:54 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	BsmConfigurationDef.h#2:INC:1
*****************************************************************************
Object:  BsmConfigurationDef.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 15:01:52 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmConfigurationDef.h#1:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse BsmConfigurationDef.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
BsmConfigurationDef.h#2 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\BsmConfigurationDef.h#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmConfigurationDef.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	BsmConfigurationDef.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 15:01:52 2010 %
*
**********************************************************************/
#ifndef _1_BsmConfigurationDef_h_H
#define _1_BsmConfigurationDef_h_H

#define BSMCFG_CorbaMaxQueueSize				"CorbaMaxQueueSize"
#define BSMCFG_CorbaMaxQueueSize_DEFAULT		60000

#define BSMCFG_CorbaMinQueueSize				"CorbaMinQueueSize"
#define BSMCFG_CorbaMinQueueSize_DEFAULT		1000

#define BSMCFG_UseDoCondition					"UseDoCondition"
#define BSMCFG_UseDoCondition_DEFAULT			1

#define BSMCFG_ConditionDaysToLoad				"ConditionDaysToLoad"
#define BSMCFG_ConditionDaysToLoad_DEFAULT		7

#define BSMCFG_GsrUpdatesQueueLimit				"GsrUpdatesQueueLimit"
#define BSMCFG_GsrUpdatesQueueLimit_DEFAULT		150000

#define BSMCFG_DetectInterval					"DetectInterval"
#define BSMCFG_DetectInterval_DEFAULT			60 //sec

#define BSMCFG_SelfSerivceUserName				"SelfServiceUserName"
#define BSMCFG_SelfSerivceUserName_DEFAULT		"SelfServiceUser"

//------------------------------------------------------------------------------------
// reconnection parameters

#define BSMCFG_FailoverMaxRetry					"FailoverMaxRetry"
#define BSMCFG_FailoverMaxRetry_DEFAULT			10

#define BSMCFG_FailoverMinUptime				"FailoverMinUptime"
#define BSMCFG_FailoverMinUptime_DEFAULT		30*60 // 30 min 

#define BSMCFG_BackupGUIServers					"BackupGUIServers"

#define BSMCFG_ConnectToGsrRetryDelay			"ConnectToGsrRetryDelay"
#define BSMCFG_ConnectToGsrRetryDelay_DEFAULT	30 // 30 sec
//------------------------------------------------------------------------------------


#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object BsmConfigurationDef.h#2:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\BsmConfigurationDef.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\BsmConfigurationDef.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\BsmConfigurationDef.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  BsmConfigurationDef.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            BsmConfigurationDef.h#1    BsmConfigurationDef.h#2   
------------------------- -------------------------- --------------------------
create_time               Sun Mar 21 11:21:54 2010   Sun Apr 11 15:01:52 2010  
modify_time               Mon Apr 12 11:58:08 2010   Wed Apr 14 17:02:48 2010  
version                   1                          2                         
source_create_time        Sun Mar 21 11:21:55 2010   Sun Apr 11 15:01:53 2010  
source_modify_time        Wed Apr 07 15:47:23 2010   Wed Apr 14 11:17:26 2010  

===============================================================================
Associated tasks differs:

BsmConfigurationDef.h#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

BsmConfigurationDef.h#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Sun Mar 21 11:21:54 2010 %
---
> *	%date_created:	Sun Apr 11 15:01:52 2010 %
17a18
> 
19a21
> 
21a24
> 
23a27
> 
25a30
> 
27c32,33
< #define BSMCFG_DetectInterval_DEFAULT			"00:01:00"
---
> #define BSMCFG_DetectInterval_DEFAULT			60 //sec
> 
30a37,46
> //------------------------------------------------------------------------------------
> // reconnection parameters
> 
> #define BSMCFG_FailoverMaxRetry					"FailoverMaxRetry"
> #define BSMCFG_FailoverMaxRetry_DEFAULT			10
> 
> #define BSMCFG_FailoverMinUptime				"FailoverMinUptime"
> #define BSMCFG_FailoverMinUptime_DEFAULT		30*60 // 30 min 
> 
> #define BSMCFG_BackupGUIServers					"BackupGUIServers"
31a48,50
> #define BSMCFG_ConnectToGsrRetryDelay			"ConnectToGsrRetryDelay"
> #define BSMCFG_ConnectToGsrRetryDelay_DEFAULT	30 // 30 sec
> //------------------------------------------------------------------------------------

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Sun Mar 21 11:21:54 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:49 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:08 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 15:01:52 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:12 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:47 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmConfigurationDef.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	BsmConfigurationDef.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Mar 21 11:21:54 2010 %
*
**********************************************************************/
#ifndef _1_BsmConfigurationDef_h_H
#define _1_BsmConfigurationDef_h_H

#define BSMCFG_CorbaMaxQueueSize				"CorbaMaxQueueSize"
#define BSMCFG_CorbaMaxQueueSize_DEFAULT		60000
#define BSMCFG_CorbaMinQueueSize				"CorbaMinQueueSize"
#define BSMCFG_CorbaMinQueueSize_DEFAULT		1000
#define BSMCFG_UseDoCondition					"UseDoCondition"
#define BSMCFG_UseDoCondition_DEFAULT			1
#define BSMCFG_ConditionDaysToLoad				"ConditionDaysToLoad"
#define BSMCFG_ConditionDaysToLoad_DEFAULT		7
#define BSMCFG_GsrUpdatesQueueLimit				"GsrUpdatesQueueLimit"
#define BSMCFG_GsrUpdatesQueueLimit_DEFAULT		150000
#define BSMCFG_DetectInterval					"DetectInterval"
#define BSMCFG_DetectInterval_DEFAULT			"00:01:00"
#define BSMCFG_SelfSerivceUserName				"SelfServiceUserName"
#define BSMCFG_SelfSerivceUserName_DEFAULT		"SelfServiceUser"




#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\BsmConfigurationDef.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\BsmConfigurationDef.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\BsmConfigurationDef.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\BsmConfigurationDef.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history BsmService#7:dir:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  BsmService#1 (dir:1)
Owner:   tadmon
State:   sqa
Created: Wed Dec 12 14:56:24 2007
Task:    31424
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	BsmService#2:dir:1
*****************************************************************************
Object:  BsmService#2 (dir:1)
Owner:   tadmon
State:   sqa
Created: Tue Feb 05 17:34:07 2008
Task:    32345
Comment:
Version automatically created to add/delete to project 'ECSNT#R640tadmonNT:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService#1:dir:1
Successors:
	BsmService#3:dir:1
*****************************************************************************
Object:  BsmService#3 (dir:1)
Owner:   tadmon
State:   released
Created: Thu Feb 21 16:13:39 2008
Task:    32700
Comment:
Version automatically created to add/delete to project 'ECSNT#R640tadmonNT:project:4'.
changed to sqa state by GAP automatic approval

Predecessors:
	BsmService#2:dir:1
Successors:
	BsmService#4:dir:1
*****************************************************************************
Object:  BsmService#4 (dir:1)
Owner:   tadmon
State:   sqa
Created: Sun May 31 14:16:47 2009
Task:    39678
Comment:
Version automatically created to add/delete to project 'ECSNT#700tadmonNEW:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService#3:dir:1
Successors:
	BsmService#5:dir:1
*****************************************************************************
Object:  BsmService#5 (dir:1)
Owner:   tadmon
State:   sqa
Created: Mon Mar 08 13:31:36 2010
Task:    45916
Comment:
Version automatically created to add/delete to project 'ECSNT#700tadmonALTN:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService#4:dir:1
Successors:
	BsmService#6:dir:1
	BsmService#5.1.1:dir:1
*****************************************************************************
Object:  BsmService#6 (dir:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 16 15:20:56 2010
Task:    46075
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService#5:dir:1
Successors:
	BsmService#7:dir:1
*****************************************************************************
Object:  BsmService#5.1.1 (dir:1)
Owner:   tadmon
State:   working
Created: Sun Mar 21 09:45:02 2010
Task:    46056
Comment:

Predecessors:
	BsmService#5:dir:1
Successors:
*****************************************************************************
Object:  BsmService#7 (dir:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 14:43:40 2010
Task:    46511
Comment:
Version automatically created to add/delete to project 'ECSNT#700fp1yakovt-win:project:4'.
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService#6:dir:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse BsmService#7:dir:1
Execute (executor.py:83): OUTPUT_BEGIN
BsmService#7 sqa yakovt dir ECSNT 1 46511
	ECSNT\BsmService#7@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService#7@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService#7@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService#7@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService#7@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService#7@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService#7@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService#7@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService#7@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService#7@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmService#7:dir:1
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object BsmService#7:dir:1 has type dir
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history BsmService.vcproj#17:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  BsmService.vcproj#1 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Wed Dec 12 14:57:08 2007
Task:    31424
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	BsmService.vcproj#2:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#2 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Mon Dec 17 16:02:40 2007
Task:    31501
Comment:
by tadmon
Predecessors:
	BsmService.vcproj#1:ms_dsp:1
Successors:
	BsmService.vcproj#2.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#2.1.1 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Wed Jan 02 12:03:45 2008
Task:    31784
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#2:ms_dsp:1
Successors:
	BsmService.vcproj#3:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#3 (ms_dsp:1)
Owner:   eyals
State:   sqa
Created: Wed Jan 02 13:34:20 2008
Task:    31780
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#2.1.1:ms_dsp:1
Successors:
	BsmService.vcproj#4:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#4 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Tue Feb 05 17:35:01 2008
Task:    32345
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#3:ms_dsp:1
Successors:
	BsmService.vcproj#5:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#5 (ms_dsp:1)
Owner:   tadmon
State:   released
Created: Thu Feb 21 16:14:02 2008
Task:    32700
Comment:
changed to sqa state by GAP automatic approval

Predecessors:
	BsmService.vcproj#4:ms_dsp:1
Successors:
	BsmService.vcproj#6:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#6 (ms_dsp:1)
Owner:   ariels
State:   released
Created: Thu Feb 26 12:38:21 2009
Task:    38340
Comment:

Predecessors:
	BsmService.vcproj#5:ms_dsp:1
Successors:
	BsmService.vcproj#7:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#7 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Sun May 31 14:17:14 2009
Task:    39678
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#6:ms_dsp:1
Successors:
	BsmService.vcproj#8:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#8 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Mon Jun 08 15:20:24 2009
Task:    39759
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#7:ms_dsp:1
Successors:
	BsmService.vcproj#9:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#9 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Sun Jul 12 10:37:36 2009
Task:    40085
Comment:
Version automatically created during work area reconciliation.


changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#8:ms_dsp:1
Successors:
	BsmService.vcproj#10:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#10 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Mon Jul 20 17:46:07 2009
Task:    40363
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#9:ms_dsp:1
Successors:
	BsmService.vcproj#11:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#11 (ms_dsp:1)
Owner:   rgalia
State:   sqa
Created: Sun Jul 26 11:19:27 2009
Task:    40305
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#10:ms_dsp:1
Successors:
	BsmService.vcproj#12:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#12 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Tue Aug 11 11:13:18 2009
Task:    40792
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#11:ms_dsp:1
Successors:
	BsmService.vcproj#13:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#13 (ms_dsp:1)
Owner:   barak
State:   sqa
Created: Wed Aug 26 12:51:44 2009
Task:    41027
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#12:ms_dsp:1
Successors:
	BsmService.vcproj#14:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#14 (ms_dsp:1)
Owner:   tadmon
State:   sqa
Created: Mon Mar 08 13:32:31 2010
Task:    45916
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#13:ms_dsp:1
Successors:
	BsmService.vcproj#15:ms_dsp:1
	BsmService.vcproj#14.1.1:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#15 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Wed Mar 17 13:00:30 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#14:ms_dsp:1
Successors:
	BsmService.vcproj#16:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#14.1.1 (ms_dsp:1)
Owner:   evgenir
State:   working
Created: Mon Mar 22 11:48:41 2010
Task:    46140
Comment:

Predecessors:
	BsmService.vcproj#14:ms_dsp:1
Successors:
*****************************************************************************
Object:  BsmService.vcproj#16 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 08 17:22:06 2010
Task:    46486
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#15:ms_dsp:1
Successors:
	BsmService.vcproj#17:ms_dsp:1
*****************************************************************************
Object:  BsmService.vcproj#17 (ms_dsp:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 14:43:53 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	BsmService.vcproj#16:ms_dsp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse BsmService.vcproj#17:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
BsmService.vcproj#17 sqa yakovt ms_dsp ECSNT 1 46511
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\BsmService.vcproj#17@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmService.vcproj#17:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
<?xml version="1.0" encoding="windows-1255"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="9.00"
	Name="BsmService"
	ProjectGUID="{90341156-B5E7-4EA1-AE86-1F16B643C57A}"
	RootNamespace="BsmService"
	Keyword="Win32Proj"
	TargetFrameworkVersion="131072"
	>
	<Platforms>
		<Platform
			Name="Win32"
		/>
	</Platforms>
	<ToolFiles>
	</ToolFiles>
	<Configurations>
		<Configuration
			Name="Debug|Win32"
			OutputDirectory="Debug"
			IntermediateDirectory="Debug"
			ConfigurationType="2"
			InheritedPropertySheets="..\..\corekit.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="..\;..\..;..;&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)/src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;&quot;$(RW)&quot;;&quot;$(IM_ROOT)\headers&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;WINVER=0x0501;NO_MFC;BSMSERVICE_EXPORTS;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md;OS_WIN_NT_4_0"
				MinimalRebuild="true"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="4"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="io-vc-debug-mt.lib network-vc-debug-mt.lib time-vc-debug-mt.lib helper-vc-debug-mt.lib thread-vc-debug-mt.lib  file-vc-debug-mt.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib $(XERCESd) $(tao_LIBSd)"
				OutputFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Release"
			IntermediateDirectory="Release"
			ConfigurationType="2"
			InheritedPropertySheets="..\..\corekit.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			WholeProgramOptimization="1"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="..\;..\..;..;&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)/src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;&quot;$(RW)&quot;;&quot;$(IM_ROOT)\headers&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMSERVICE_EXPORTS;WINVER=0x0501;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m;OS_WIN_NT_4_0"
				RuntimeLibrary="2"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="io-vc-mt.lib network-vc-mt.lib time-vc-mt.lib helper-vc-mt.lib thread-vc-mt.lib  file-vc-mt.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib $(XERCESr) $(tao_LIBSr)"
				OutputFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;&#x0D;&#x0A;rem IncrediBuild_AllowOverlap&#x0D;&#x0A;"
			/>
		</Configuration>
	</Configurations>
	<References>
	</References>
	<Files>
		<Filter
			Name="Source Files"
			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
			>
			<File
				RelativePath=".\BsmAppServiceFactory.cpp"
				>
			</File>
			<File
				RelativePath=".\BsmService.cpp"
				>
			</File>
			<File
				RelativePath=".\CrbConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrActiveDataCenterSimulAdapter.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrConnector.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommand.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommandMgr.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaSimulJobDataAdapter.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrDataCenterMgr.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrFieldMapper.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrKeepAndLive.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrReconnector.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrService.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrViewPoint.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrViewPointRefresh.cpp"
				>
			</File>
			<File
				RelativePath=".\JobKey.cpp"
				>
			</File>
			<File
				RelativePath=".\PeriodicStatsAdapters.cpp"
				>
			</File>
			<File
				RelativePath=".\ScenarioManager.cpp"
				>
			</File>
			<File
				RelativePath=".\SLSDBConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\SLSDBConvert.h"
				>
			</File>
			<File
				RelativePath=".\SLSDefWrapperDB.cpp"
				>
			</File>
			<File
				RelativePath=".\stdafx.cpp"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\WLDBConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkloadDB.cpp"
				>
			</File>
		</Filter>
		<Filter
			Name="Header Files"
			Filter="h;hpp;hxx;hm;inl;inc;xsd"
			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
			>
			<File
				RelativePath=".\BsmAppServiceFactory.h"
				>
			</File>
			<File
				RelativePath=".\BsmService.h"
				>
			</File>
			<File
				RelativePath=".\CrbConvert.h"
				>
			</File>
			<File
				RelativePath=".\GsrActionCallback.h"
				>
			</File>
			<File
				RelativePath=".\GsrActiveDataCenterSimulAdapter.h"
				>
			</File>
			<File
				RelativePath=".\GsrConnector.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommand.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommandMgr.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaSimulJobDataAdapter.h"
				>
			</File>
			<File
				RelativePath=".\GsrDataCenterMgr.h"
				>
			</File>
			<File
				RelativePath=".\GsrFieldMapper.h"
				>
			</File>
			<File
				RelativePath=".\GsrKeepAndLive.h"
				>
			</File>
			<File
				RelativePath=".\GsrReconnector.h"
				>
			</File>
			<File
				RelativePath=".\GsrService.h"
				>
			</File>
			<File
				RelativePath=".\GsrServiceStartupParams.h"
				>
			</File>
			<File
				RelativePath=".\GsrViewPoint.h"
				>
			</File>
			<File
				RelativePath=".\GsrViewPointRefresh.h"
				>
			</File>
			<File
				RelativePath=".\JobKey.h"
				>
			</File>
			<File
				RelativePath=".\PeriodicStatsAdapters.h"
				>
			</File>
			<File
				RelativePath=".\ScenarioManager.h"
				>
			</File>
			<File
				RelativePath=".\SLSDefWrapperDB.h"
				>
			</File>
			<File
				RelativePath=".\stdafx.h"
				>
			</File>
			<File
				RelativePath=".\WLDBConvert.h"
				>
			</File>
			<File
				RelativePath=".\WorkloadDB.h"
				>
			</File>
		</Filter>
		<Filter
			Name="Resource Files"
			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
			>
		</Filter>
		<File
			RelativePath=".\Makefile"
			>
			<FileConfiguration
				Name="Debug|Win32"
				ExcludedFromBuild="true"
				>
				<Tool
					Name="VCCustomBuildTool"
				/>
			</FileConfiguration>
			<FileConfiguration
				Name="Release|Win32"
				ExcludedFromBuild="true"
				>
				<Tool
					Name="VCCustomBuildTool"
				/>
			</FileConfiguration>
		</File>
		<File
			RelativePath=".\ReadMe.txt"
			>
		</File>
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object BsmService.vcproj#17:ms_dsp:1 has type ms_dsp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\BsmService.vcproj
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\BsmService.vcproj
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\BsmService.vcproj
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  BsmService.vcproj#17:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            BsmService.vcproj#16       BsmService.vcproj#17      
------------------------- -------------------------- --------------------------
create_time               Thu Apr 08 17:22:06 2010   Sun Apr 11 14:43:53 2010  
modify_time               Mon Apr 12 11:58:11 2010   Wed Apr 14 17:02:49 2010  
version                   16                         17                        
source_create_time        Wed Apr 07 17:21:28 2010   Thu Apr 08 17:26:26 2010  
source_modify_time        Thu Apr 08 17:26:26 2010   Mon Apr 12 13:03:58 2010  

===============================================================================
Associated tasks differs:

BsmService.vcproj#16
46486: Fix for Task 46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

BsmService.vcproj#17
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

233a234,237
> 				RelativePath=".\GsrReconnector.cpp"
> 				>
> 			</File>
> 			<File
348a353,356
> 				>
> 			</File>
> 			<File
> 				RelativePath=".\GsrReconnector.h"

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Apr  8 17:22:07 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 17:42:31 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:10 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 14:43:54 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:14 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:48 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat BsmService.vcproj#16:ms_dsp:1
Execute (executor.py:83): OUTPUT_BEGIN
<?xml version="1.0" encoding="windows-1255"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="9.00"
	Name="BsmService"
	ProjectGUID="{90341156-B5E7-4EA1-AE86-1F16B643C57A}"
	RootNamespace="BsmService"
	Keyword="Win32Proj"
	TargetFrameworkVersion="131072"
	>
	<Platforms>
		<Platform
			Name="Win32"
		/>
	</Platforms>
	<ToolFiles>
	</ToolFiles>
	<Configurations>
		<Configuration
			Name="Debug|Win32"
			OutputDirectory="Debug"
			IntermediateDirectory="Debug"
			ConfigurationType="2"
			InheritedPropertySheets="..\..\corekit.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				Optimization="0"
				AdditionalIncludeDirectories="..\;..\..;..;&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)/src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;&quot;$(RW)&quot;;&quot;$(IM_ROOT)\headers&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;"
				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;WINVER=0x0501;NO_MFC;BSMSERVICE_EXPORTS;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_md;OS_WIN_NT_4_0"
				MinimalRebuild="true"
				BasicRuntimeChecks="3"
				RuntimeLibrary="3"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				Detect64BitPortabilityProblems="false"
				DebugInformationFormat="4"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="io-vc-debug-mt.lib network-vc-debug-mt.lib time-vc-debug-mt.lib helper-vc-debug-mt.lib thread-vc-debug-mt.lib  file-vc-debug-mt.lib $(RW_LIB_DBCORE_NAME)-md.lib $(RW_LIB_TOOLS_NAME)-md.lib $(XERCESd) $(tao_LIBSd)"
				OutputFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT)d.dll"
				LinkIncremental="2"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT)d.pdb"
				SubSystem="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;"
			/>
		</Configuration>
		<Configuration
			Name="Release|Win32"
			OutputDirectory="Release"
			IntermediateDirectory="Release"
			ConfigurationType="2"
			InheritedPropertySheets="..\..\corekit.vsprops;..\..\common.vsprops;..\DisableDeprecateWarning.vsprops"
			CharacterSet="2"
			WholeProgramOptimization="1"
			>
			<Tool
				Name="VCPreBuildEventTool"
			/>
			<Tool
				Name="VCCustomBuildTool"
			/>
			<Tool
				Name="VCXMLDataGeneratorTool"
			/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
			/>
			<Tool
				Name="VCMIDLTool"
			/>
			<Tool
				Name="VCCLCompilerTool"
				AdditionalIncludeDirectories="..\;..\..;..;&quot;$(TOOLKIT)&quot;;&quot;$(XERCES)/src&quot;;&quot;$(ACE_ROOT)&quot;;&quot;$(ACE_ROOT)\TAO&quot;;&quot;$(ACE_ROOT)\TAO\orbsvcs&quot;;&quot;$(RW)&quot;;&quot;$(IM_ROOT)\headers&quot;;&quot;$(COREKIT)\include&quot;;&quot;$(COREKIT)\src&quot;;&quot;$(MSDEV_SmartHeap)\msvc&quot;;&quot;$(MSDEV_SmartHeap)\include&quot;"
				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;BSMSERVICE_EXPORTS;WINVER=0x0501;NO_MFC;_RWDBDLL;_RWTOOLSDLL;_RWCONFIG_m;OS_WIN_NT_4_0"
				RuntimeLibrary="2"
				UsePrecompiledHeader="2"
				WarningLevel="3"
				DebugInformationFormat="3"
			/>
			<Tool
				Name="VCManagedResourceCompilerTool"
			/>
			<Tool
				Name="VCResourceCompilerTool"
			/>
			<Tool
				Name="VCPreLinkEventTool"
			/>
			<Tool
				Name="VCLinkerTool"
				AdditionalDependencies="io-vc-mt.lib network-vc-mt.lib time-vc-mt.lib helper-vc-mt.lib thread-vc-mt.lib  file-vc-mt.lib $(RW_LIB_DBCORE_NAME)-m.lib $(RW_LIB_TOOLS_NAME)-m.lib $(XERCESr) $(tao_LIBSr)"
				OutputFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT).dll"
				LinkIncremental="1"
				AdditionalLibraryDirectories="&quot;$(TOOLKIT)\lib&quot;;&quot;$(ACE_ROOT)\lib&quot;;&quot;$(XERCES)\lib&quot;;&quot;$(RW)/lib&quot;"
				GenerateDebugInformation="true"
				ProgramDatabaseFile="$(OutDir)/bmc-ctmem-bsmservice-$(VEREXT).pdb"
				SubSystem="2"
				OptimizeReferences="2"
				EnableCOMDATFolding="2"
				RandomizedBaseAddress="1"
				DataExecutionPrevention="0"
				TargetMachine="1"
			/>
			<Tool
				Name="VCALinkTool"
			/>
			<Tool
				Name="VCManifestTool"
			/>
			<Tool
				Name="VCXDCMakeTool"
			/>
			<Tool
				Name="VCBscMakeTool"
			/>
			<Tool
				Name="VCFxCopTool"
			/>
			<Tool
				Name="VCAppVerifierTool"
			/>
			<Tool
				Name="VCPostBuildEventTool"
				CommandLine="$(SolutionDir)post_build.bat &quot;$(ConfigurationName)&quot; &quot;$(ProjectName)&quot; &quot;$(TargetDir)&quot; &quot;$(TargetName)&quot; &quot;$(TargetExt)&quot; &quot;$(TargetPath)&quot;&#x0D;&#x0A;rem IncrediBuild_AllowOverlap&#x0D;&#x0A;"
			/>
		</Configuration>
	</Configurations>
	<References>
	</References>
	<Files>
		<Filter
			Name="Source Files"
			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
			>
			<File
				RelativePath=".\BsmAppServiceFactory.cpp"
				>
			</File>
			<File
				RelativePath=".\BsmService.cpp"
				>
			</File>
			<File
				RelativePath=".\CrbConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrActiveDataCenterSimulAdapter.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrConnector.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommand.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommandMgr.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaSimulJobDataAdapter.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrDataCenterMgr.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrFieldMapper.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrKeepAndLive.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrService.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrViewPoint.cpp"
				>
			</File>
			<File
				RelativePath=".\GsrViewPointRefresh.cpp"
				>
			</File>
			<File
				RelativePath=".\JobKey.cpp"
				>
			</File>
			<File
				RelativePath=".\PeriodicStatsAdapters.cpp"
				>
			</File>
			<File
				RelativePath=".\ScenarioManager.cpp"
				>
			</File>
			<File
				RelativePath=".\SLSDBConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\SLSDBConvert.h"
				>
			</File>
			<File
				RelativePath=".\SLSDefWrapperDB.cpp"
				>
			</File>
			<File
				RelativePath=".\stdafx.cpp"
				>
				<FileConfiguration
					Name="Debug|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
				<FileConfiguration
					Name="Release|Win32"
					>
					<Tool
						Name="VCCLCompilerTool"
						UsePrecompiledHeader="1"
					/>
				</FileConfiguration>
			</File>
			<File
				RelativePath=".\WLDBConvert.cpp"
				>
			</File>
			<File
				RelativePath=".\WorkloadDB.cpp"
				>
			</File>
		</Filter>
		<Filter
			Name="Header Files"
			Filter="h;hpp;hxx;hm;inl;inc;xsd"
			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
			>
			<File
				RelativePath=".\BsmAppServiceFactory.h"
				>
			</File>
			<File
				RelativePath=".\BsmService.h"
				>
			</File>
			<File
				RelativePath=".\CrbConvert.h"
				>
			</File>
			<File
				RelativePath=".\GsrActionCallback.h"
				>
			</File>
			<File
				RelativePath=".\GsrActiveDataCenterSimulAdapter.h"
				>
			</File>
			<File
				RelativePath=".\GsrConnector.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommand.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaCallbackCommandMgr.h"
				>
			</File>
			<File
				RelativePath=".\GsrCorbaSimulJobDataAdapter.h"
				>
			</File>
			<File
				RelativePath=".\GsrDataCenterMgr.h"
				>
			</File>
			<File
				RelativePath=".\GsrFieldMapper.h"
				>
			</File>
			<File
				RelativePath=".\GsrKeepAndLive.h"
				>
			</File>
			<File
				RelativePath=".\GsrService.h"
				>
			</File>
			<File
				RelativePath=".\GsrServiceStartupParams.h"
				>
			</File>
			<File
				RelativePath=".\GsrViewPoint.h"
				>
			</File>
			<File
				RelativePath=".\GsrViewPointRefresh.h"
				>
			</File>
			<File
				RelativePath=".\JobKey.h"
				>
			</File>
			<File
				RelativePath=".\PeriodicStatsAdapters.h"
				>
			</File>
			<File
				RelativePath=".\ScenarioManager.h"
				>
			</File>
			<File
				RelativePath=".\SLSDefWrapperDB.h"
				>
			</File>
			<File
				RelativePath=".\stdafx.h"
				>
			</File>
			<File
				RelativePath=".\WLDBConvert.h"
				>
			</File>
			<File
				RelativePath=".\WorkloadDB.h"
				>
			</File>
		</Filter>
		<Filter
			Name="Resource Files"
			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
			>
		</Filter>
		<File
			RelativePath=".\Makefile"
			>
			<FileConfiguration
				Name="Debug|Win32"
				ExcludedFromBuild="true"
				>
				<Tool
					Name="VCCustomBuildTool"
				/>
			</FileConfiguration>
			<FileConfiguration
				Name="Release|Win32"
				ExcludedFromBuild="true"
				>
				<Tool
					Name="VCCustomBuildTool"
				/>
			</FileConfiguration>
		</File>
		<File
			RelativePath=".\ReadMe.txt"
			>
		</File>
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\BsmService.vcproj
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\BsmService.vcproj
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\BsmService.vcproj.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\BsmService.vcproj.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history Configuration.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  Configuration.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 04 15:12:19 2010
Task:    45852
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	Configuration.cpp#2:cpp:1
*****************************************************************************
Object:  Configuration.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 23 16:32:13 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	Configuration.cpp#1:cpp:1
Successors:
	Configuration.cpp#3:cpp:1
*****************************************************************************
Object:  Configuration.cpp#3 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 12:50:45 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	Configuration.cpp#2:cpp:1
Successors:
	Configuration.cpp#4:cpp:1
*****************************************************************************
Object:  Configuration.cpp#4 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 15 10:25:42 2010
Task:    46633
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	Configuration.cpp#3:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse Configuration.cpp#4:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Configuration.cpp#4 sqa yakovt cpp ECSNT 1 46633
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\Configuration.cpp#4@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Configuration.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		Configuration.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 12:50:45 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: Configuration.cpp#3 %  (%full_filespec: Configuration.cpp#3:cpp:1 %)";
#endif
#include "Configuration.h"
#include "em_foundations/EmHelper.h"
#include "em_foundations/EmException.h"
#include "em_db/ECSParams.h"
#include "em_db/EMDB.h"
#include "BsmCommon/TimeValue.h"
#include "BsmCommon/Locker.h"

DIAG_REGISTER_MODULE;

namespace bsm {
EM_SINGLETON_IMPLEMENTATION(Configuration);

//////////////////////////////////////////////////////////////////////////
//
Configuration::ParameterDef::ParameterDef()
: m_DefaultValue("")
, m_Type(en_TypeNone)
{
}


Configuration::ParameterDef::ParameterDef(
									const std::string& defaultValue,
									Type type
									)
: m_Type(type)
, m_DefaultValue(defaultValue)
{
}

Configuration::ParameterDef::ParameterDef(
	int defaultValue, 
	Type type)
: m_Type(type)
{
	m_DefaultValue = em::tos(defaultValue);
}




//////////////////////////////////////////////////////////////////////////
// ctor
Configuration::Configuration()
{

}

Configuration::~Configuration()
{

}


void Configuration::SetMainScope(const std::string& main_scope)
{
	m_MainScopeName = main_scope;
}
void Configuration::AddSearchScope(const std::string& scope_name)
{
	m_SearchScopeNames.push_back( scope_name );
}


//////////////////////////////////////////////////////////////////////////
//
void Configuration::RegisterParameter( const std::string& name, const Configuration::ParameterDef& def )
{
	m_ParametersDef[name] = def;

}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::RegisterEnvParameter( const std::string& name )
{
	m_EnvParameterNames.insert(name);
}


//////////////////////////////////////////////////////////////////////////
//
bool Configuration::HasEnvParameter( const std::string& name ) const
{
	return m_EnvParameterNames.count(name) > 0;
}


//////////////////////////////////////////////////////////////////////////
//
static Configuration::ParameterDef sEmptyParameterDef;
const Configuration::ParameterDef& Configuration::GetParameter(const std::string& name) const
{
	EM_ASSERT( HasParameter(name), "parameter " + name + " is not registered" );
	ParametersDef::const_iterator it = m_ParametersDef.find(name);
	if( it != m_ParametersDef.end())
	{
		return (*it).second;
	}
	else
	{
		return sEmptyParameterDef;
	}
}

Configuration::ParameterDef& Configuration::GetParameter(const std::string& name)
{
	EM_ASSERT( HasParameter(name), "parameter " + name + " is not registered" );
	ParametersDef::iterator it = m_ParametersDef.find(name);
	if( it != m_ParametersDef.end())
	{
		return (*it).second;
	}
	else
	{
		return sEmptyParameterDef;
	}
}

//////////////////////////////////////////////////////////////////////////
//
bool Configuration::HasParameter(const std::string& name) const
{
	return m_ParametersDef.count(name) > 0;
}

std::string Configuration::GetString(const std::string& name, const std::string& v_default ) const
{
	DBG_FNC_ENTER("Configuration::GetString");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, v_default);
		ParameterDef def( v_default, ParameterDef::en_TypeString);
		def.SetOrigin("adhoc");
		const_cast<Configuration*>(this)->RegisterParameter( name, def );
		return v_default;
	}
	
	return  m_Properties.GetProperty(name);

}



int Configuration::GetNumber(const std::string& name, int v_default) const
{
	DBG_FNC_ENTER("Configuration::GetNumber");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, em::tos(v_default));
		ParameterDef def( v_default, ParameterDef::en_TypeNumber);
		def.SetOrigin("adhoc");
		const_cast<Configuration*>(this)->RegisterParameter( name, def );
		return v_default;
	}

	std::string s = m_Properties.GetProperty(name);

	int pvalue = 0;
	int n = ::sscanf(s.c_str(), "%d",  &pvalue);
	EM_ASSERT( n == 1, "wrong number " + s + " for name " + name); 

	return pvalue;
}


size_t Configuration::GetTimeIntervalInSec(const std::string& name, size_t v_default) const
{
	DBG_FNC_ENTER("Configuration::GetTimeInSec");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, em::tos(v_default));
		return v_default;
	}

	std::string s = m_Properties.GetProperty(name);

	int pvalue = StrToSecTime(s);
	EM_ASSERT( pvalue  >= 0, "wrong time " + s + " for name " + name); 
	if ( pvalue  <  0)
		pvalue = 0;
	return pvalue;
}



//////////////////////////////////////////////////////////////////////////
//
em::Properties Configuration::GetProperties() const
{
	DBG_FNC_ENTER("Configuration::GetProperties");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	return m_Properties;
}


//////////////////////////////////////////////////////////////////////////
//
void Configuration::Refresh()
{
	DBG_FNC_ENTER("Configuration::Refresh");
	os_sem_lock<os_critical_section> guard(m_Lock);

	EMDB::Instance()->Login(); //first time (or in case DB connection lost) will connect to DB

	ECSParamsDB::GetECSParamsDB()->InitDB(EMDB::Instance()->GetDB()); //initialize EM parameter framework 

	ECSParams_RecVector allParams;
	ECSParamsDB::GetECSParamsDB()->GetAll(allParams);

	m_Properties.Clear();

	// look at first in main scope, after in 'searched' scopes and in end in general scope
	std::vector< std::string > scopes;
	scopes.push_back(m_MainScopeName);
	std::copy( m_SearchScopeNames.begin(), m_SearchScopeNames.end(), std::back_inserter(scopes) );
	scopes.push_back("general"); //general always in search scope


	// set default values of registered parameters
	for( ParametersDef::iterator it = m_ParametersDef.begin(); it != m_ParametersDef.end(); ++it  )
	{
		const std::string& pname =  (*it).first;
		ParameterDef& def = (*it).second;
		m_Properties.SetProperty(pname, def.GetDefaultValue() );
		def.SetOrigin("regdef");
	}

	//read all parameter for main scope and register parameters from 'search' scopes
	for( size_t i=0; i<scopes.size(); ++i )
	{
		for (ECSParams_RecVector::const_iterator it = allParams.begin(); it != allParams.end(); ++it)
		{
			const ECSParams_Rec& curr = (*it);
			const std::string& scope = scopes[i];
			if (curr.ptype == scope )
			{
				std::string valName = curr.pname;
				std::string valValue = curr.pvalue;

				if( i == 0 ) //main scope
				{
					if( HasParameter(valName) )
					{
						ParameterDef& def = GetParameter(valName);
						def.SetOrigin("system"); //registered parameter is found in main scope, else the parameter will be unknown
					}
					
					m_Properties.SetProperty(valName, valValue); 
				}
				//fall-back: the registered parameter is not still found in previous scope
				else if( HasParameter(valName) && !m_Properties.HasProperty(valName)) //for 'fall-back search path store only registered parameters
				{
					ParameterDef& def = GetParameter(valName);
					def.SetOrigin("system"); //registered parameter is found is one of searched scopes
					m_Properties.SetProperty(valName, valValue);
				}
			}
		}
	}

	//read all registered environment variables
	for( EnvParameterNames::const_iterator it = m_EnvParameterNames.begin(); it != m_EnvParameterNames.end(); ++it )
	{
		const std::string& name = *it;
		if( !m_Properties.HasProperty(name) )
		{
			const char* env = ::getenv(name.c_str());
			if ( env != NULL )
			{
				m_Properties.SetProperty(name, env);
			}
		}
	}

}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::Print( std::ostream& os) const
{
	DBG_FNC_ENTER("Configuration::Print");
	os_sem_lock<os_critical_section> guard( const_cast<Configuration*>(this)->m_Lock);

	os.setf(ios::left, ios::adjustfield);
	os 
		<< std::setw(35) 
		<< "Name"  
		<< std::setw(8) 
		<< "Origin" 
		<< "Value" << std::endl;
	std::set< std::string > names;
	for( ParametersDef::const_iterator it = m_ParametersDef.begin(); it != m_ParametersDef.end(); ++it)
		names.insert( (*it).first );
	const em::Properties::PropertiesData& data = m_Properties.GetData();
	for( em::Properties::PropertiesData::const_iterator it = data.begin(); it != data.end(); ++it)
		names.insert( (*it).first );
	

	for( std::set< std::string >::const_iterator it = names.begin(); it != names.end(); ++it)
	{
		const std::string& pname = *it;
		std::string pvalue = m_Properties.GetProperty(pname);
		std::string origin;
		if( HasParameter(pname) )
		{
			origin	= GetParameter(pname).GetOrigin();
		}
		else if( HasEnvParameter(pname) && ::getenv(pname.c_str()) != NULL )
		{
			origin	= "env";
		}
		else if( HasEnvParameter(pname) && m_Properties.HasProperty(pname) )
		{
			origin	= "envsys";
		}
		else if( !HasParameter(pname) && !HasEnvParameter(pname) && m_Properties.HasProperty(pname) )
		{
			origin	= "undef";
		}
		else
		{
			origin	= "unknown";
		}

		os  
			<< std::setw(35) 
			<< std::setfill('.')
			<< pname 
			<< std::setw(8) 
			<< std::setfill(' ')
			<< origin 
			<< pvalue  
			<< std::endl;
	}

}

//////////////////////////////////////////////////////////////////////////
//
int Configuration::StrToSecTime(const std::string& StrTime) const
{

	if ( StrTime.length() == 0 )
		return -1;

	int result = 0;

	if( StrTime.find(':') == std::string::npos )
	{
		result = ::atoi(StrTime.c_str() ); //the string has only seconds
	}
	else
	{
		unsigned int i = 0;
		int s(0);
		char tmp[3];
		tmp[2] = '\0';

		tmp[0] = StrTime[i+0];
		tmp[1] = StrTime[i+1];
		int h = atoi(tmp);
		i += 2;

		if( StrTime[i] == ':' )
			++i;

		tmp[0] = StrTime[i+0];
		tmp[1] = StrTime[i+1];
		int m = atoi(tmp);
		i += 2;
		if( i < StrTime.length() )
		{
			if( StrTime[i] == ':' )
				++i;

			tmp[0] = StrTime[i+0];
			tmp[1] = StrTime[i+1];
			s = atoi(tmp);
		}
		result = s+m*60+h*60*60;
	}
		
	return result;
}

//////////////////////////////////////////////////////////////////////////
// check make know validation:
//  * parameter in main context should be registered
//  * 
void Configuration::Verify()
{
	//TODO
}

//////////////////////////////////////////////////////////////////////////
//
std::string Configuration::GetEnv(const std::string& env_name) const
{
	// env variable override system parameter
	const char* env = getenv(env_name.c_str());
	if (env != 0)
		return env;

	std::string sys = m_Properties.GetProperty(env_name);
	return sys;
}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::ClearAll()
{
	m_ParametersDef.clear();
	m_EnvParameterNames.clear();
	m_SearchScopeNames.clear();
	m_MainScopeName.clear();
	m_Properties.Clear();
}


} // namespace bsmOUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object Configuration.cpp#3:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Configuration.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Configuration.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\Configuration.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  Configuration.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            Configuration.cpp#2        Configuration.cpp#3       
------------------------- -------------------------- --------------------------
create_time               Tue Mar 23 16:32:13 2010   Wed Apr 14 12:50:45 2010  
modify_time               Mon Apr 12 11:58:18 2010   Wed Apr 14 17:02:49 2010  
version                   2                          3                         
source_create_time        Tue Mar 23 16:32:14 2010   Wed Apr 14 12:50:46 2010  
source_modify_time        Wed Apr 07 15:55:09 2010   Wed Apr 14 15:43:02 2010  

===============================================================================
Associated tasks differs:

Configuration.cpp#2
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

Configuration.cpp#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Tue Mar 23 16:32:13 2010 %
---
> *	%date_created:	Wed Apr 14 12:50:45 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: Configuration.cpp#2 %  (%full_filespec: Configuration.cpp#2:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: Configuration.cpp#3 %  (%full_filespec: Configuration.cpp#3:cpp:1 %)";
43,44c43,44
< : m_DefaultValue(defaultValue)
< , m_Type(type)
---
> : m_Type(type)
> , m_DefaultValue(defaultValue)
47a48,56
> Configuration::ParameterDef::ParameterDef(
> 	int defaultValue, 
> 	Type type)
> : m_Type(type)
> {
> 	m_DefaultValue = em::tos(defaultValue);
> }
> 
> 
143a153,155
> 		ParameterDef def( v_default, ParameterDef::en_TypeString);
> 		def.SetOrigin("adhoc");
> 		const_cast<Configuration*>(this)->RegisterParameter( name, def );
161a174,176
> 		ParameterDef def( v_default, ParameterDef::en_TypeNumber);
> 		def.SetOrigin("adhoc");
> 		const_cast<Configuration*>(this)->RegisterParameter( name, def );
168,169c183,184
< 	int n = ::sscanf("%d", s.c_str(), &pvalue);
< 	EM_ASSERT( n != 1, "wrong number " + s + " for name " + name); 
---
> 	int n = ::sscanf(s.c_str(), "%d",  &pvalue);
> 	EM_ASSERT( n == 1, "wrong number " + s + " for name " + name); 
189c204
< 	size_t pvalue = StrToSecTime(s);
---
> 	int pvalue = StrToSecTime(s);
191c206,208
< 	return true;
---
> 	if ( pvalue  <  0)
> 		pvalue = 0;
> 	return pvalue;
329c346
< 			origin	= "default";
---
> 			origin	= "undef";
353,357c370,371
< 	if (StrTime.empty())
< 		return -1; 
< 	unsigned int i = 0;
< 	int sign(1);
< 	if (StrTime.length() < 4 || StrTime.length() > 8 )
---
> 
> 	if ( StrTime.length() == 0 )
360,376c374,380
< 	int s(0);
< 	char tmp[3];
< 	tmp[2] = '\0';
< 
< 	tmp[0] = StrTime[i+0];
< 	tmp[1] = StrTime[i+1];
< 	int h = atoi(tmp);
< 	i += 2;
< 
< 	if( StrTime[i] == ':' )
< 		++i;
< 
< 	tmp[0] = StrTime[i+0];
< 	tmp[1] = StrTime[i+1];
< 	int m = atoi(tmp);
< 	i += 2;
< 	if( i < StrTime.length() )
---
> 	int result = 0;
> 
> 	if( StrTime.find(':') == std::string::npos )
> 	{
> 		result = ::atoi(StrTime.c_str() ); //the string has only seconds
> 	}
> 	else
377a382,391
> 		unsigned int i = 0;
> 		int s(0);
> 		char tmp[3];
> 		tmp[2] = '\0';
> 
> 		tmp[0] = StrTime[i+0];
> 		tmp[1] = StrTime[i+1];
> 		int h = atoi(tmp);
> 		i += 2;
> 
383c397,408
< 		s = atoi(tmp);
---
> 		int m = atoi(tmp);
> 		i += 2;
> 		if( i < StrTime.length() )
> 		{
> 			if( StrTime[i] == ':' )
> 				++i;
> 
> 			tmp[0] = StrTime[i+0];
> 			tmp[1] = StrTime[i+1];
> 			s = atoi(tmp);
> 		}
> 		result = s+m*60+h*60*60;
385c410,411
< 	return  (s+m*60+h*60*60);
---
> 		
> 	return result;

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Tue Mar 23 16:32:13 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:53 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:18 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 12:50:45 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:15 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:49 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Configuration.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		Configuration.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Tue Mar 23 16:32:13 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: Configuration.cpp#2 %  (%full_filespec: Configuration.cpp#2:cpp:1 %)";
#endif
#include "Configuration.h"
#include "em_foundations/EmHelper.h"
#include "em_foundations/EmException.h"
#include "em_db/ECSParams.h"
#include "em_db/EMDB.h"
#include "BsmCommon/TimeValue.h"
#include "BsmCommon/Locker.h"

DIAG_REGISTER_MODULE;

namespace bsm {
EM_SINGLETON_IMPLEMENTATION(Configuration);

//////////////////////////////////////////////////////////////////////////
//
Configuration::ParameterDef::ParameterDef()
: m_DefaultValue("")
, m_Type(en_TypeNone)
{
}


Configuration::ParameterDef::ParameterDef(
									const std::string& defaultValue,
									Type type
									)
: m_DefaultValue(defaultValue)
, m_Type(type)
{
}



//////////////////////////////////////////////////////////////////////////
// ctor
Configuration::Configuration()
{

}

Configuration::~Configuration()
{

}


void Configuration::SetMainScope(const std::string& main_scope)
{
	m_MainScopeName = main_scope;
}
void Configuration::AddSearchScope(const std::string& scope_name)
{
	m_SearchScopeNames.push_back( scope_name );
}


//////////////////////////////////////////////////////////////////////////
//
void Configuration::RegisterParameter( const std::string& name, const Configuration::ParameterDef& def )
{
	m_ParametersDef[name] = def;

}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::RegisterEnvParameter( const std::string& name )
{
	m_EnvParameterNames.insert(name);
}


//////////////////////////////////////////////////////////////////////////
//
bool Configuration::HasEnvParameter( const std::string& name ) const
{
	return m_EnvParameterNames.count(name) > 0;
}


//////////////////////////////////////////////////////////////////////////
//
static Configuration::ParameterDef sEmptyParameterDef;
const Configuration::ParameterDef& Configuration::GetParameter(const std::string& name) const
{
	EM_ASSERT( HasParameter(name), "parameter " + name + " is not registered" );
	ParametersDef::const_iterator it = m_ParametersDef.find(name);
	if( it != m_ParametersDef.end())
	{
		return (*it).second;
	}
	else
	{
		return sEmptyParameterDef;
	}
}

Configuration::ParameterDef& Configuration::GetParameter(const std::string& name)
{
	EM_ASSERT( HasParameter(name), "parameter " + name + " is not registered" );
	ParametersDef::iterator it = m_ParametersDef.find(name);
	if( it != m_ParametersDef.end())
	{
		return (*it).second;
	}
	else
	{
		return sEmptyParameterDef;
	}
}

//////////////////////////////////////////////////////////////////////////
//
bool Configuration::HasParameter(const std::string& name) const
{
	return m_ParametersDef.count(name) > 0;
}

std::string Configuration::GetString(const std::string& name, const std::string& v_default ) const
{
	DBG_FNC_ENTER("Configuration::GetString");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, v_default);
		return v_default;
	}
	
	return  m_Properties.GetProperty(name);

}



int Configuration::GetNumber(const std::string& name, int v_default) const
{
	DBG_FNC_ENTER("Configuration::GetNumber");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, em::tos(v_default));
		return v_default;
	}

	std::string s = m_Properties.GetProperty(name);

	int pvalue = 0;
	int n = ::sscanf("%d", s.c_str(), &pvalue);
	EM_ASSERT( n != 1, "wrong number " + s + " for name " + name); 

	return pvalue;
}


size_t Configuration::GetTimeIntervalInSec(const std::string& name, size_t v_default) const
{
	DBG_FNC_ENTER("Configuration::GetTimeInSec");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	if( !m_Properties.HasProperty(name) )
	{
		DIAG_PDEF(DIAG_D, "parameter " << name << " is undefined, default value '" << v_default << "' is used" );
		const_cast<Configuration*>(this)->m_Properties.SetProperty(name, em::tos(v_default));
		return v_default;
	}

	std::string s = m_Properties.GetProperty(name);

	size_t pvalue = StrToSecTime(s);
	EM_ASSERT( pvalue  >= 0, "wrong time " + s + " for name " + name); 
	return true;
}



//////////////////////////////////////////////////////////////////////////
//
em::Properties Configuration::GetProperties() const
{
	DBG_FNC_ENTER("Configuration::GetProperties");
	bsm::ConstSemLock<os_critical_section> guard(m_Lock);

	return m_Properties;
}


//////////////////////////////////////////////////////////////////////////
//
void Configuration::Refresh()
{
	DBG_FNC_ENTER("Configuration::Refresh");
	os_sem_lock<os_critical_section> guard(m_Lock);

	EMDB::Instance()->Login(); //first time (or in case DB connection lost) will connect to DB

	ECSParamsDB::GetECSParamsDB()->InitDB(EMDB::Instance()->GetDB()); //initialize EM parameter framework 

	ECSParams_RecVector allParams;
	ECSParamsDB::GetECSParamsDB()->GetAll(allParams);

	m_Properties.Clear();

	// look at first in main scope, after in 'searched' scopes and in end in general scope
	std::vector< std::string > scopes;
	scopes.push_back(m_MainScopeName);
	std::copy( m_SearchScopeNames.begin(), m_SearchScopeNames.end(), std::back_inserter(scopes) );
	scopes.push_back("general"); //general always in search scope


	// set default values of registered parameters
	for( ParametersDef::iterator it = m_ParametersDef.begin(); it != m_ParametersDef.end(); ++it  )
	{
		const std::string& pname =  (*it).first;
		ParameterDef& def = (*it).second;
		m_Properties.SetProperty(pname, def.GetDefaultValue() );
		def.SetOrigin("regdef");
	}

	//read all parameter for main scope and register parameters from 'search' scopes
	for( size_t i=0; i<scopes.size(); ++i )
	{
		for (ECSParams_RecVector::const_iterator it = allParams.begin(); it != allParams.end(); ++it)
		{
			const ECSParams_Rec& curr = (*it);
			const std::string& scope = scopes[i];
			if (curr.ptype == scope )
			{
				std::string valName = curr.pname;
				std::string valValue = curr.pvalue;

				if( i == 0 ) //main scope
				{
					if( HasParameter(valName) )
					{
						ParameterDef& def = GetParameter(valName);
						def.SetOrigin("system"); //registered parameter is found in main scope, else the parameter will be unknown
					}
					
					m_Properties.SetProperty(valName, valValue); 
				}
				//fall-back: the registered parameter is not still found in previous scope
				else if( HasParameter(valName) && !m_Properties.HasProperty(valName)) //for 'fall-back search path store only registered parameters
				{
					ParameterDef& def = GetParameter(valName);
					def.SetOrigin("system"); //registered parameter is found is one of searched scopes
					m_Properties.SetProperty(valName, valValue);
				}
			}
		}
	}

	//read all registered environment variables
	for( EnvParameterNames::const_iterator it = m_EnvParameterNames.begin(); it != m_EnvParameterNames.end(); ++it )
	{
		const std::string& name = *it;
		if( !m_Properties.HasProperty(name) )
		{
			const char* env = ::getenv(name.c_str());
			if ( env != NULL )
			{
				m_Properties.SetProperty(name, env);
			}
		}
	}

}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::Print( std::ostream& os) const
{
	DBG_FNC_ENTER("Configuration::Print");
	os_sem_lock<os_critical_section> guard( const_cast<Configuration*>(this)->m_Lock);

	os.setf(ios::left, ios::adjustfield);
	os 
		<< std::setw(35) 
		<< "Name"  
		<< std::setw(8) 
		<< "Origin" 
		<< "Value" << std::endl;
	std::set< std::string > names;
	for( ParametersDef::const_iterator it = m_ParametersDef.begin(); it != m_ParametersDef.end(); ++it)
		names.insert( (*it).first );
	const em::Properties::PropertiesData& data = m_Properties.GetData();
	for( em::Properties::PropertiesData::const_iterator it = data.begin(); it != data.end(); ++it)
		names.insert( (*it).first );
	

	for( std::set< std::string >::const_iterator it = names.begin(); it != names.end(); ++it)
	{
		const std::string& pname = *it;
		std::string pvalue = m_Properties.GetProperty(pname);
		std::string origin;
		if( HasParameter(pname) )
		{
			origin	= GetParameter(pname).GetOrigin();
		}
		else if( HasEnvParameter(pname) && ::getenv(pname.c_str()) != NULL )
		{
			origin	= "env";
		}
		else if( HasEnvParameter(pname) && m_Properties.HasProperty(pname) )
		{
			origin	= "envsys";
		}
		else if( !HasParameter(pname) && !HasEnvParameter(pname) && m_Properties.HasProperty(pname) )
		{
			origin	= "default";
		}
		else
		{
			origin	= "unknown";
		}

		os  
			<< std::setw(35) 
			<< std::setfill('.')
			<< pname 
			<< std::setw(8) 
			<< std::setfill(' ')
			<< origin 
			<< pvalue  
			<< std::endl;
	}

}

//////////////////////////////////////////////////////////////////////////
//
int Configuration::StrToSecTime(const std::string& StrTime) const
{
	if (StrTime.empty())
		return -1; 
	unsigned int i = 0;
	int sign(1);
	if (StrTime.length() < 4 || StrTime.length() > 8 )
		return -1;

	int s(0);
	char tmp[3];
	tmp[2] = '\0';

	tmp[0] = StrTime[i+0];
	tmp[1] = StrTime[i+1];
	int h = atoi(tmp);
	i += 2;

	if( StrTime[i] == ':' )
		++i;

	tmp[0] = StrTime[i+0];
	tmp[1] = StrTime[i+1];
	int m = atoi(tmp);
	i += 2;
	if( i < StrTime.length() )
	{
		if( StrTime[i] == ':' )
			++i;

		tmp[0] = StrTime[i+0];
		tmp[1] = StrTime[i+1];
		s = atoi(tmp);
	}
	return  (s+m*60+h*60*60);
}

//////////////////////////////////////////////////////////////////////////
// check make know validation:
//  * parameter in main context should be registered
//  * 
void Configuration::Verify()
{
	//TODO
}

//////////////////////////////////////////////////////////////////////////
//
std::string Configuration::GetEnv(const std::string& env_name) const
{
	// env variable override system parameter
	const char* env = getenv(env_name.c_str());
	if (env != 0)
		return env;

	std::string sys = m_Properties.GetProperty(env_name);
	return sys;
}

//////////////////////////////////////////////////////////////////////////
//
void Configuration::ClearAll()
{
	m_ParametersDef.clear();
	m_EnvParameterNames.clear();
	m_SearchScopeNames.clear();
	m_MainScopeName.clear();
	m_Properties.Clear();
}


} // namespace bsmOUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\Configuration.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\Configuration.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\Configuration.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\Configuration.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history Configuration.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  Configuration.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 04 15:12:10 2010
Task:    45852
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	Configuration.h#2:INC:1
*****************************************************************************
Object:  Configuration.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 23 16:24:37 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	Configuration.h#1:INC:1
Successors:
	Configuration.h#3:INC:1
*****************************************************************************
Object:  Configuration.h#3 (INC:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 12:49:55 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	Configuration.h#2:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse Configuration.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Configuration.h#3 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\Configuration.h#3@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Configuration.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	Configuration.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 12:49:55 2010 %
*
**********************************************************************/
#ifndef _1_Configuration_h_H
#define _1_Configuration_h_H

#include "BsmCommon.h"
#include "em_foundations/em_singleton.h"
#include "em_foundations/Properties.h"

namespace bsm
{


	class BSM_COMMON_API Configuration
	{
 		EM_SINGLETON(Configuration);


		//parameter metadata
		class BSM_COMMON_API ParameterDef	
		{
		public:

			enum Type
			{
				en_TypeNone,
				en_TypeString,
				en_TypeNumber,
				en_TypeTime 
			};

			ParameterDef();
			ParameterDef(
				const std::string& defaultValue, 
				Type type);
			ParameterDef(
				int defaultValue, 
				Type type);

			std::string		GetDefaultValue() const { return m_DefaultValue;}
			Type			GetType() const			{ return m_Type;		}
			std::string		GetOrigin() const { return m_Origin;}
			void			SetOrigin(const std::string& v) { m_Origin = v;}
			

		private:
			std::string		m_DefaultValue;	
			Type			m_Type;
			std::string		m_Origin;

		};


		//Configuration
	public:
		void SetMainScope(const std::string& main_scope);
		void AddSearchScope(const std::string& scopes);
		void RegisterParameter( const std::string& name, const ParameterDef& def );
		const ParameterDef& GetParameter(const std::string& name) const;
		ParameterDef& GetParameter(const std::string& name);
		bool HasParameter(const std::string& name) const;

		void RegisterEnvParameter( const std::string& name );
		bool HasEnvParameter( const std::string& name ) const;


		bool IsValid(const std::string& name) const;
		em::Properties GetProperties() const;
		std::string GetEnv(const std::string& env_name) const;


		std::string GetString(const std::string& name, const std::string& v_default ) const;
		std::string GetString(const std::string& name) const { return GetString(name, std::string()); }
		int GetNumber(const std::string& name, int v_default) const;
		int GetNumber(const std::string& name) const { return GetNumber(name, 0); }
		size_t GetTimeIntervalInSec(const std::string& name, size_t v_default) const;
		size_t GetTimeIntervalInSec(const std::string& name) const { return GetTimeIntervalInSec(name, 0); }

		void Refresh();
		void Print( std::ostream& os) const;
		void ClearAll();

	protected:
		Configuration();
		~Configuration();
		int StrToSecTime(const std::string& StrTime) const;
		void Verify();


	private:
		em::Properties								m_Properties;
		typedef std::map<std::string, ParameterDef>	ParametersDef;
		ParametersDef								m_ParametersDef;
		typedef std::set<std::string>				EnvParameterNames;
		EnvParameterNames							m_EnvParameterNames;
		std::vector<std::string>					m_SearchScopeNames;
		std::string									m_MainScopeName;
		os_critical_section							m_Lock;
	};

} //namespace bsm 

#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object Configuration.h#3:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Configuration.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Configuration.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\Configuration.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  Configuration.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            Configuration.h#2          Configuration.h#3         
------------------------- -------------------------- --------------------------
create_time               Tue Mar 23 16:24:37 2010   Wed Apr 14 12:49:55 2010  
modify_time               Mon Apr 12 11:58:18 2010   Wed Apr 14 17:02:49 2010  
version                   2                          3                         
source_create_time        Tue Mar 23 16:24:38 2010   Wed Apr 14 12:49:57 2010  
source_modify_time        Wed Mar 24 09:08:00 2010   Wed Apr 14 12:50:20 2010  

===============================================================================
Associated tasks differs:

Configuration.h#2
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

Configuration.h#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Tue Mar 23 16:24:37 2010 %
---
> *	%date_created:	Wed Apr 14 12:49:55 2010 %
44a45,47
> 				Type type);
> 			ParameterDef(
> 				int defaultValue, 

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Tue Mar 23 16:24:38 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:54 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:18 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 12:49:56 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:15 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:49 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Configuration.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	Configuration.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Tue Mar 23 16:24:37 2010 %
*
**********************************************************************/
#ifndef _1_Configuration_h_H
#define _1_Configuration_h_H

#include "BsmCommon.h"
#include "em_foundations/em_singleton.h"
#include "em_foundations/Properties.h"

namespace bsm
{


	class BSM_COMMON_API Configuration
	{
 		EM_SINGLETON(Configuration);


		//parameter metadata
		class BSM_COMMON_API ParameterDef	
		{
		public:

			enum Type
			{
				en_TypeNone,
				en_TypeString,
				en_TypeNumber,
				en_TypeTime 
			};

			ParameterDef();
			ParameterDef(
				const std::string& defaultValue, 
				Type type);

			std::string		GetDefaultValue() const { return m_DefaultValue;}
			Type			GetType() const			{ return m_Type;		}
			std::string		GetOrigin() const { return m_Origin;}
			void			SetOrigin(const std::string& v) { m_Origin = v;}
			

		private:
			std::string		m_DefaultValue;	
			Type			m_Type;
			std::string		m_Origin;

		};


		//Configuration
	public:
		void SetMainScope(const std::string& main_scope);
		void AddSearchScope(const std::string& scopes);
		void RegisterParameter( const std::string& name, const ParameterDef& def );
		const ParameterDef& GetParameter(const std::string& name) const;
		ParameterDef& GetParameter(const std::string& name);
		bool HasParameter(const std::string& name) const;

		void RegisterEnvParameter( const std::string& name );
		bool HasEnvParameter( const std::string& name ) const;


		bool IsValid(const std::string& name) const;
		em::Properties GetProperties() const;
		std::string GetEnv(const std::string& env_name) const;


		std::string GetString(const std::string& name, const std::string& v_default ) const;
		std::string GetString(const std::string& name) const { return GetString(name, std::string()); }
		int GetNumber(const std::string& name, int v_default) const;
		int GetNumber(const std::string& name) const { return GetNumber(name, 0); }
		size_t GetTimeIntervalInSec(const std::string& name, size_t v_default) const;
		size_t GetTimeIntervalInSec(const std::string& name) const { return GetTimeIntervalInSec(name, 0); }

		void Refresh();
		void Print( std::ostream& os) const;
		void ClearAll();

	protected:
		Configuration();
		~Configuration();
		int StrToSecTime(const std::string& StrTime) const;
		void Verify();


	private:
		em::Properties								m_Properties;
		typedef std::map<std::string, ParameterDef>	ParametersDef;
		ParametersDef								m_ParametersDef;
		typedef std::set<std::string>				EnvParameterNames;
		EnvParameterNames							m_EnvParameterNames;
		std::vector<std::string>					m_SearchScopeNames;
		std::string									m_MainScopeName;
		os_critical_section							m_Lock;
	};

} //namespace bsm 

#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\Configuration.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmCommon\Configuration.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\Configuration.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\Configuration.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history ConfigurationService.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  ConfigurationService.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 09 15:53:51 2010
Task:    45947
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	ConfigurationService.cpp#2:cpp:1
*****************************************************************************
Object:  ConfigurationService.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Mar 28 10:52:01 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	ConfigurationService.cpp#1:cpp:1
Successors:
	ConfigurationService.cpp#3:cpp:1
*****************************************************************************
Object:  ConfigurationService.cpp#3 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 12:04:47 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	ConfigurationService.cpp#2:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse ConfigurationService.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
ConfigurationService.cpp#3 sqa yakovt cpp ECSNT 1 46511
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\ConfigurationService.cpp#3@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat ConfigurationService.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		ConfigurationService.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 12:04:47 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: ConfigurationService.cpp#3 %  (%full_filespec: ConfigurationService.cpp#3:cpp:1 %)";
#endif

#include "ConfigurationService.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"
#include "em_foundations/EmHelper.h"

DIAG_REGISTER_MODULE;

namespace sls {
//
//	ConfigurationService
//

/*virtual*/ std::string ConfigurationService::name() const
{ 
	return "Configuration parameters"; 
}

/*virtual*/ int ConfigurationService::startup(int argc,char* argv[])
{
	DBG_FNC_ENTER("ConfigurationService::startup");

	try
	{
		bsm::Configuration* cfg = bsm::Configuration::Instance();
		cfg->SetMainScope("sls");

		cfg->RegisterParameter(BSMCFG_DetectInterval		,bsm::Configuration::ParameterDef( BSMCFG_DetectInterval_DEFAULT		,bsm::Configuration::ParameterDef::en_TypeTime			));
		cfg->RegisterParameter(BSMCFG_SelfSerivceUserName	,bsm::Configuration::ParameterDef( BSMCFG_SelfSerivceUserName_DEFAULT	,bsm::Configuration::ParameterDef::en_TypeString		));
		cfg->RegisterEnvParameter("EM_DEBUG_ASSERT_LEVEL");
		cfg->Refresh(); //read all from DB
	}
	catch (std::exception& e)
	{
		DIAG_PDEF(DIAG_E, "Failed to read system parameters, " << e.what());
		return 1;
	}

	return 0;
}

/*virtual*/ int ConfigurationService::shutdown()
{
	bsm::Configuration::Destroy();
	return 0;
}

}// namespace sls OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object ConfigurationService.cpp#3:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\ConfigurationService.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\ConfigurationService.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\ConfigurationService.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  ConfigurationService.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            ConfigurationService.cpp#2 ConfigurationService.cpp#3
------------------------- -------------------------- --------------------------
create_time               Sun Mar 28 10:52:01 2010   Wed Apr 14 12:04:47 2010  
modify_time               Mon Apr 12 11:58:19 2010   Wed Apr 14 17:02:50 2010  
version                   2                          3                         
source_create_time        Sun Mar 28 10:52:02 2010   Wed Apr 14 12:04:48 2010  
source_modify_time        Wed Apr 07 15:50:21 2010   Wed Apr 14 15:54:23 2010  

===============================================================================
Associated tasks differs:

ConfigurationService.cpp#2
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

ConfigurationService.cpp#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Sun Mar 28 10:52:01 2010 %
---
> *	%date_created:	Wed Apr 14 12:04:47 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: ConfigurationService.cpp#2 %  (%full_filespec: ConfigurationService.cpp#2:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: ConfigurationService.cpp#3 %  (%full_filespec: ConfigurationService.cpp#3:cpp:1 %)";
20a21
> #include "em_foundations/EmHelper.h"
42,45d42
< 		cfg->RegisterParameter(BSMCFG_DetectInterval		,bsm::Configuration::ParameterDef(BSMCFG_DetectInterval_DEFAULT				,bsm::Configuration::ParameterDef::en_TypeTime)		);
< 		cfg->RegisterParameter(BSMCFG_SelfSerivceUserName	,bsm::Configuration::ParameterDef(BSMCFG_SelfSerivceUserName_DEFAULT	,bsm::Configuration::ParameterDef::en_TypeString)		);
< 		cfg->RegisterEnvParameter("EM_DEBUG_ASSERT_LEVEL");
< 		cfg->Refresh();
47,53c44,47
< 		//print to DIAG
< 		std::ostringstream str;
< 		TDiag *pTheDiag = TDiag::Instance(); 
< 		cfg->Print(str);
< 		pTheDiag->PrintDirectly(str.str().c_str());
< 		pTheDiag->flush(); 
< 		cout << str.str() << std::endl;
---
> 		cfg->RegisterParameter(BSMCFG_DetectInterval		,bsm::Configuration::ParameterDef( BSMCFG_DetectInterval_DEFAULT		,bsm::Configuration::ParameterDef::en_TypeTime			));
> 		cfg->RegisterParameter(BSMCFG_SelfSerivceUserName	,bsm::Configuration::ParameterDef( BSMCFG_SelfSerivceUserName_DEFAULT	,bsm::Configuration::ParameterDef::en_TypeString		));
> 		cfg->RegisterEnvParameter("EM_DEBUG_ASSERT_LEVEL");
> 		cfg->Refresh(); //read all from DB

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Sun Mar 28 10:52:01 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:55 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:18 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 12:04:47 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:16 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:50 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat ConfigurationService.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		ConfigurationService.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Mar 28 10:52:01 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: ConfigurationService.cpp#2 %  (%full_filespec: ConfigurationService.cpp#2:cpp:1 %)";
#endif

#include "ConfigurationService.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"

DIAG_REGISTER_MODULE;

namespace sls {
//
//	ConfigurationService
//

/*virtual*/ std::string ConfigurationService::name() const
{ 
	return "Configuration parameters"; 
}

/*virtual*/ int ConfigurationService::startup(int argc,char* argv[])
{
	DBG_FNC_ENTER("ConfigurationService::startup");

	try
	{
		bsm::Configuration* cfg = bsm::Configuration::Instance();
		cfg->SetMainScope("sls");
		cfg->RegisterParameter(BSMCFG_DetectInterval		,bsm::Configuration::ParameterDef(BSMCFG_DetectInterval_DEFAULT				,bsm::Configuration::ParameterDef::en_TypeTime)		);
		cfg->RegisterParameter(BSMCFG_SelfSerivceUserName	,bsm::Configuration::ParameterDef(BSMCFG_SelfSerivceUserName_DEFAULT	,bsm::Configuration::ParameterDef::en_TypeString)		);
		cfg->RegisterEnvParameter("EM_DEBUG_ASSERT_LEVEL");
		cfg->Refresh();

		//print to DIAG
		std::ostringstream str;
		TDiag *pTheDiag = TDiag::Instance(); 
		cfg->Print(str);
		pTheDiag->PrintDirectly(str.str().c_str());
		pTheDiag->flush(); 
		cout << str.str() << std::endl;
	}
	catch (std::exception& e)
	{
		DIAG_PDEF(DIAG_E, "Failed to read system parameters, " << e.what());
		return 1;
	}

	return 0;
}

/*virtual*/ int ConfigurationService::shutdown()
{
	bsm::Configuration::Destroy();
	return 0;
}

}// namespace sls OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\ConfigurationService.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\ConfigurationService.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\ConfigurationService.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\ConfigurationService.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrActionCallback.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrActionCallback.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 25 15:52:16 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrActionCallback.h#2:INC:1
*****************************************************************************
Object:  GsrActionCallback.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 16:17:27 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrActionCallback.h#1:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrActionCallback.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrActionCallback.h#2 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrActionCallback.h#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrActionCallback.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrActionCallback.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 16:17:27 2010 %
*
**********************************************************************/
#ifndef _1_GsrActionCallback_h_H
#define _1_GsrActionCallback_h_H

namespace bsm {

class GsrCorbaSimulJobDataAdapter;

class GsrActionCallback
{
public:
	virtual ~GsrActionCallback() {}
	virtual void OnDataCenterNewDayBeginStart(const std::vector<std::string>& dc_names )			= 0;
	virtual void OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names )				= 0;
	virtual void OnDataCenterNewDayEnd()															= 0;
	virtual void OnReconectStarted()																= 0;
	virtual void OnUnableToReconect()																= 0;
	virtual bool OnShortUpdate(const std::string& dc_name, GsrCorbaSimulJobDataAdapter* pJobUpdate)	= 0;
	virtual bool OnFullUpdate(const std::string& dc_name, GsrCorbaSimulJobDataAdapter* pJobUpdate)	= 0;
	virtual void OnLastInServiceUpdate(const std::string& dc_name, const os_time_and_date& ostime)	= 0;
	

};

} //namespace bsm

#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrActionCallback.h#2:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrActionCallback.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrActionCallback.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrActionCallback.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrActionCallback.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrActionCallback.h#1      GsrActionCallback.h#2     
------------------------- -------------------------- --------------------------
create_time               Thu Mar 25 15:52:16 2010   Sun Apr 11 16:17:27 2010  
modify_time               Mon Apr 12 11:58:38 2010   Wed Apr 14 17:02:50 2010  
version                   1                          2                         
source_create_time        Thu Mar 25 15:52:16 2010   Sun Apr 11 16:17:29 2010  
source_modify_time        Thu Apr 08 14:49:49 2010   Wed Apr 14 15:44:46 2010  

===============================================================================
Associated tasks differs:

GsrActionCallback.h#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrActionCallback.h#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Mar 25 15:52:16 2010 %
---
> *	%date_created:	Sun Apr 11 16:17:27 2010 %
27a28
> 	virtual void OnUnableToReconect()																= 0;
29a31,32
> 	virtual void OnLastInServiceUpdate(const std::string& dc_name, const os_time_and_date& ostime)	= 0;
> 	

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Mar 25 15:52:16 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:45:59 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:38 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 16:17:28 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:17 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:50 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrActionCallback.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrActionCallback.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Mar 25 15:52:16 2010 %
*
**********************************************************************/
#ifndef _1_GsrActionCallback_h_H
#define _1_GsrActionCallback_h_H

namespace bsm {

class GsrCorbaSimulJobDataAdapter;

class GsrActionCallback
{
public:
	virtual ~GsrActionCallback() {}
	virtual void OnDataCenterNewDayBeginStart(const std::vector<std::string>& dc_names )			= 0;
	virtual void OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names )				= 0;
	virtual void OnDataCenterNewDayEnd()															= 0;
	virtual void OnReconectStarted()																= 0;
	virtual bool OnShortUpdate(const std::string& dc_name, GsrCorbaSimulJobDataAdapter* pJobUpdate)	= 0;
	virtual bool OnFullUpdate(const std::string& dc_name, GsrCorbaSimulJobDataAdapter* pJobUpdate)	= 0;

};

} //namespace bsm

#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrActionCallback.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrActionCallback.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrActionCallback.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrActionCallback.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrConnector.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrConnector.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 18 14:23:31 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrConnector.cpp#2:cpp:1
*****************************************************************************
Object:  GsrConnector.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 15:48:36 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrConnector.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrConnector.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrConnector.cpp#2 sqa yakovt cpp ECSNT 1 46511
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrConnector.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrConnector.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrConnector.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 15:48:36 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrConnector.cpp#2 %  (%full_filespec: GsrConnector.cpp#2:cpp:1 %)";
#endif

#include "GsrConnector.h"

#include "em_foundations/EmHelper.h"
#include "em_foundations/EmException.h"
#include "em_client_common/CommonDefs.h"
#include "em_foundations/EMString.h" //for login handler
#include "em_client_common/LoginHandler.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "em_client_common/ConnectionSettings.h"
#include "em_idl_prod/ECSCorbaPlayerControl.hh"

#include "BsmCommon/bsm_catch_macro.h"
#include "BsmCommon/Locker.h"
#include "em_client_common/CommonDefs.h"

DIAG_REGISTER_MODULE;

namespace bsm{


//////////////////////////////////////////////////////////////////////////
//
GsrConnector::GsrConnector()
: m_ClientId(E_UNKNOWN)
{
	
}

void GsrConnector::SetGsrName( const std::string& gsr_name )
{
	os_sem_lock<os_critical_section> guard( m_DataLock );
	m_GsrName = gsr_name;
}

const std::string&  GsrConnector::GetGsrName() const
{
	bsm::ConstSemLock<os_critical_section> guard( m_DataLock );
	return m_GsrName;
}


void GsrConnector::SetUserName( const std::string& username )
{
	m_UserName = username;
}

void GsrConnector::SetClientId( CLIENT_ID id )
{
	m_ClientId = id;
}

//////////////////////////////////////////////////////////////////////////
//
bool GsrConnector::LoginToGsr()
{
	DBG_FNC_ENTER("GsrConnector::LoginToGsr");

	m_Uid.clear();

	if( !CheckCurrentGsr() )
	{
		return false;
	}

	bool bLoginOK = false;

	EMString  sAuthMsg;
	TRC rc;

	std::string password = "empass"; //TODOSLS: use API key

	rc = GL_Login(m_UserName,
		password,
		m_GsrName,
		600, 
		sAuthMsg, 
		m_ClientId,
		E_GSR, 
		0, 0);

	bLoginOK = false;
	switch(rc) {
		case TRC_SUCCESS:
			bLoginOK = true; //for now is ok
			break;
		case TRC_WARNING_EXPIRATION:
			DIAG_PDEF(DIAG_W, "Password is about to expire" << sAuthMsg);
			break;
		case TRC_PASSWORD_EXPIRED:
			DIAG_PDEF(DIAG_W, "Password is expired"  << sAuthMsg );
			break;
		case TRC_ACCOUNT_LOCKED:
			DIAG_PDEF(DIAG_W, "Account is locked" << sAuthMsg );
			break;
		default:
			DIAG_PDEF(DIAG_W, "Login Failed: " << sAuthMsg);
			break;
			}

	if( bLoginOK )
	{
		if( GL_PostLogin(sAuthMsg) != TRC_SUCCESS )
		{
			DIAG_PDEF(DIAG_W, "Login Failed: " << sAuthMsg );
			bLoginOK = false;
		}
	}
	if( bLoginOK )
	{
		m_Uid = ConnectionSettings::Get()->GetUserID();
		DIAG_PDEF(DIAG_I, "login to GSR is successed, uid: " <<  m_Uid);
	}


	return bLoginOK;
}


//////////////////////////////////////////////////////////////////////////
// check is current if current GSR is active
//
bool  GsrConnector::CheckCurrentGsr()
{
	DBG_FNC_ENTER("GsrConnector::CheckCurrentGsr");

	bool bActive = false;
	try 
	{
		DIAG_PDEF(DIAG_I, "checking GSR: " << m_GsrName );

		const char* sServerID = GL_ResolveServerID(E_GSR);
		CORBA::Object_var pCRBObj = 
			ClientORB::Instance()->Bind(
			m_GsrName,
			sServerID,
			PLAYER_CONTROL_SERVNAT);

		ECSCorbaPlayerControl_var PlayerControl = ECSCorbaPlayerControl::_narrow(pCRBObj);
		if (!CORBA::is_nil(PlayerControl.in()))
		{
			CORBA::String_var version = PlayerControl->CRB_DoCommand("VER");
			DIAG_PDEF(DIAG_L, "found GSR " << m_GsrName << " version: " << version.in() );
			bActive = true;
		}
	}
	BSM_CATCH_ALL_AND_PRINT_EX("The GUI Server " + m_GsrName + " is down", DIAG_L);

	return bActive;
}

//////////////////////////////////////////////////////////////////////////
// try to logout from GSR server.
// all errors during logout are ignored
//
void GsrConnector::LogoutFromGsr()
{
	DBG_FNC_ENTER("GsrConnector::CheckCurrentGsr");

	try
	{
		GL_LogOut(false);
	}
	BSM_CATCH_ALL_AND_PRINT_EX("some errors while logout from GSR, ignoring", DIAG_I);


}

} //namespace bsm



OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrConnector.cpp#2:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrConnector.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrConnector.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrConnector.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrConnector.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrConnector.cpp#1         GsrConnector.cpp#2        
------------------------- -------------------------- --------------------------
create_time               Thu Mar 18 14:23:31 2010   Sun Apr 11 15:48:36 2010  
modify_time               Mon Apr 12 11:58:40 2010   Wed Apr 14 17:02:51 2010  
version                   1                          2                         
source_create_time        Thu Mar 18 14:23:32 2010   Sun Apr 11 15:48:38 2010  
source_modify_time        Wed Apr 07 16:21:01 2010   Wed Apr 14 14:11:32 2010  

===============================================================================
Associated tasks differs:

GsrConnector.cpp#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrConnector.cpp#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Mar 18 14:23:31 2010 %
---
> *	%date_created:	Sun Apr 11 15:48:36 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: GsrConnector.cpp#1 %  (%full_filespec: GsrConnector.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: GsrConnector.cpp#2 %  (%full_filespec: GsrConnector.cpp#2:cpp:1 %)";
30a31
> #include "BsmCommon/Locker.h"
47a49
> 	os_sem_lock<os_critical_section> guard( m_DataLock );
50a53,59
> const std::string&  GsrConnector::GetGsrName() const
> {
> 	bsm::ConstSemLock<os_critical_section> guard( m_DataLock );
> 	return m_GsrName;
> }
> 
> 
63c72
< bool GsrConnector::LoginToGsr(std::string& uid)
---
> bool GsrConnector::LoginToGsr()
67c76
< 	uid.clear();
---
> 	m_Uid.clear();
79c88
< 	std::string password = "empass"; //TODOGSR: use API key
---
> 	std::string password = "empass"; //TODOSLS: use API key
119,120c128,129
< 		uid = ConnectionSettings::Get()->GetUserID();
< 		DIAG_PDEF(DIAG_I, "login to GSR is successed, uid: " <<  uid);
---
> 		m_Uid = ConnectionSettings::Get()->GetUserID();
> 		DIAG_PDEF(DIAG_I, "login to GSR is successed, uid: " <<  m_Uid);
159a169,182
> //////////////////////////////////////////////////////////////////////////
> // try to logout from GSR server.
> // all errors during logout are ignored
> //
> void GsrConnector::LogoutFromGsr()
> {
> 	DBG_FNC_ENTER("GsrConnector::CheckCurrentGsr");
> 
> 	try
> 	{
> 		GL_LogOut(false);
> 	}
> 	BSM_CATCH_ALL_AND_PRINT_EX("some errors while logout from GSR, ignoring", DIAG_I);
> 
160a184
> }

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Mar 18 14:23:31 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:01 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:40 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 15:48:37 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:18 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:51 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrConnector.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrConnector.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Mar 18 14:23:31 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrConnector.cpp#1 %  (%full_filespec: GsrConnector.cpp#1:cpp:1 %)";
#endif

#include "GsrConnector.h"

#include "em_foundations/EmHelper.h"
#include "em_foundations/EmException.h"
#include "em_client_common/CommonDefs.h"
#include "em_foundations/EMString.h" //for login handler
#include "em_client_common/LoginHandler.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "em_client_common/ConnectionSettings.h"
#include "em_idl_prod/ECSCorbaPlayerControl.hh"

#include "BsmCommon/bsm_catch_macro.h"
#include "em_client_common/CommonDefs.h"

DIAG_REGISTER_MODULE;

namespace bsm{


//////////////////////////////////////////////////////////////////////////
//
GsrConnector::GsrConnector()
: m_ClientId(E_UNKNOWN)
{
	
}

void GsrConnector::SetGsrName( const std::string& gsr_name )
{
	m_GsrName = gsr_name;
}

void GsrConnector::SetUserName( const std::string& username )
{
	m_UserName = username;
}

void GsrConnector::SetClientId( CLIENT_ID id )
{
	m_ClientId = id;
}

//////////////////////////////////////////////////////////////////////////
//
bool GsrConnector::LoginToGsr(std::string& uid)
{
	DBG_FNC_ENTER("GsrConnector::LoginToGsr");

	uid.clear();

	if( !CheckCurrentGsr() )
	{
		return false;
	}

	bool bLoginOK = false;

	EMString  sAuthMsg;
	TRC rc;

	std::string password = "empass"; //TODOGSR: use API key

	rc = GL_Login(m_UserName,
		password,
		m_GsrName,
		600, 
		sAuthMsg, 
		m_ClientId,
		E_GSR, 
		0, 0);

	bLoginOK = false;
	switch(rc) {
		case TRC_SUCCESS:
			bLoginOK = true; //for now is ok
			break;
		case TRC_WARNING_EXPIRATION:
			DIAG_PDEF(DIAG_W, "Password is about to expire" << sAuthMsg);
			break;
		case TRC_PASSWORD_EXPIRED:
			DIAG_PDEF(DIAG_W, "Password is expired"  << sAuthMsg );
			break;
		case TRC_ACCOUNT_LOCKED:
			DIAG_PDEF(DIAG_W, "Account is locked" << sAuthMsg );
			break;
		default:
			DIAG_PDEF(DIAG_W, "Login Failed: " << sAuthMsg);
			break;
			}

	if( bLoginOK )
	{
		if( GL_PostLogin(sAuthMsg) != TRC_SUCCESS )
		{
			DIAG_PDEF(DIAG_W, "Login Failed: " << sAuthMsg );
			bLoginOK = false;
		}
	}
	if( bLoginOK )
	{
		uid = ConnectionSettings::Get()->GetUserID();
		DIAG_PDEF(DIAG_I, "login to GSR is successed, uid: " <<  uid);
	}


	return bLoginOK;
}


//////////////////////////////////////////////////////////////////////////
// check is current if current GSR is active
//
bool  GsrConnector::CheckCurrentGsr()
{
	DBG_FNC_ENTER("GsrConnector::CheckCurrentGsr");

	bool bActive = false;
	try 
	{
		DIAG_PDEF(DIAG_I, "checking GSR: " << m_GsrName );

		const char* sServerID = GL_ResolveServerID(E_GSR);
		CORBA::Object_var pCRBObj = 
			ClientORB::Instance()->Bind(
			m_GsrName,
			sServerID,
			PLAYER_CONTROL_SERVNAT);

		ECSCorbaPlayerControl_var PlayerControl = ECSCorbaPlayerControl::_narrow(pCRBObj);
		if (!CORBA::is_nil(PlayerControl.in()))
		{
			CORBA::String_var version = PlayerControl->CRB_DoCommand("VER");
			DIAG_PDEF(DIAG_L, "found GSR " << m_GsrName << " version: " << version.in() );
			bActive = true;
		}
	}
	BSM_CATCH_ALL_AND_PRINT_EX("The GUI Server " + m_GsrName + " is down", DIAG_L);

	return bActive;
}



} //namespace bsm



OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrConnector.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrConnector.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrConnector.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrConnector.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrConnector.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrConnector.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 18 14:23:26 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrConnector.h#2:INC:1
*****************************************************************************
Object:  GsrConnector.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 15:48:53 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrConnector.h#1:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrConnector.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrConnector.h#2 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrConnector.h#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrConnector.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrConnector.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 15:48:53 2010 %
*
**********************************************************************/
#ifndef _1_GsrConnector_h_H
#define _1_GsrConnector_h_H

#include "BsmService.h"
#include "em_client_common/CommonDefs.h"

namespace bsm {

	class GsrConnector
	{
	public:
		GsrConnector();
		bool LoginToGsr();
		void LogoutFromGsr();
		void SetGsrName( const std::string& gsr_name );
		const std::string&  GetGsrName() const;
		void SetUserName( const std::string& username);
		void SetClientId( CLIENT_ID id );
		const std::string& GetUid() const { return m_Uid; }

	private:
		bool CheckCurrentGsr();

	private:
		std::string m_GsrName;
		std::string m_UserName;
		CLIENT_ID	m_ClientId;
		std::string	m_Uid;
		os_critical_section m_DataLock;

	};

}

#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrConnector.h#2:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrConnector.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrConnector.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrConnector.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrConnector.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrConnector.h#1           GsrConnector.h#2          
------------------------- -------------------------- --------------------------
create_time               Thu Mar 18 14:23:26 2010   Sun Apr 11 15:48:53 2010  
modify_time               Mon Apr 12 11:58:40 2010   Wed Apr 14 17:02:51 2010  
version                   1                          2                         
source_create_time        Thu Mar 18 14:23:27 2010   Sun Apr 11 15:48:54 2010  
source_modify_time        Thu Mar 25 17:33:07 2010   Tue Apr 13 17:48:43 2010  

===============================================================================
Associated tasks differs:

GsrConnector.h#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrConnector.h#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Mar 18 14:23:26 2010 %
---
> *	%date_created:	Sun Apr 11 15:48:53 2010 %
25c25
< 		bool LoginToGsr(std::string& uid);
---
> 		bool LoginToGsr();
27a28
> 		const std::string&  GetGsrName() const;
29a31
> 		const std::string& GetUid() const { return m_Uid; }
37a40,41
> 		std::string	m_Uid;
> 		os_critical_section m_DataLock;

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Mar 18 14:23:26 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:01 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:40 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 15:48:53 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:18 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:51 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrConnector.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrConnector.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Mar 18 14:23:26 2010 %
*
**********************************************************************/
#ifndef _1_GsrConnector_h_H
#define _1_GsrConnector_h_H

#include "BsmService.h"
#include "em_client_common/CommonDefs.h"

namespace bsm {

	class GsrConnector
	{
	public:
		GsrConnector();
		bool LoginToGsr(std::string& uid);
		void LogoutFromGsr();
		void SetGsrName( const std::string& gsr_name );
		void SetUserName( const std::string& username);
		void SetClientId( CLIENT_ID id );

	private:
		bool CheckCurrentGsr();

	private:
		std::string m_GsrName;
		std::string m_UserName;
		CLIENT_ID	m_ClientId;

	};

}

#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrConnector.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrConnector.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrConnector.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrConnector.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrCorbaCallbackCommand.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrCorbaCallbackCommand.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Mar 21 10:03:00 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrCorbaCallbackCommand.cpp#2:cpp:1
*****************************************************************************
Object:  GsrCorbaCallbackCommand.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 14:06:44 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrCorbaCallbackCommand.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrCorbaCallbackCommand.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrCorbaCallbackCommand.cpp#2 sqa yakovt cpp ECSNT 1 46511
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrCorbaCallbackCommand.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrCorbaCallbackCommand.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrCorbaCallbackCommand.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 14:06:44 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrCorbaCallbackCommand.cpp#2 %  (%full_filespec: GsrCorbaCallbackCommand.cpp#2:cpp:1 %)";
#endif

#include "em_foundations/ECSAttrHolder.h"
#include "em_crb_foundations/CorbaBasics.h"
#include "Common/ECSViewPointStatuses.h"

#include "GsrCorbaCallbackCommand.h"
#include "BsmCommon/bsm_catch_macro.h"
#include "GsrCorbaSimulJobDataAdapter.h"
#include "JobKey.h"
#include "GsrDataCenterMgr.h"
#include "BsmService/CrbConvert.h"
#include "BsmService/GsrService.h"
#include "libfcengine/Simulator.h"
#include "ForecastDAL/ResourcesTypes.h"
#include "BsmCommon/BuildResourceUpdate.h"
#include "GsrActionCallback.h"

DIAG_REGISTER_MODULE;

namespace bsm {

//////////////////////////////////////////////////////////////////////////
//
GsrCorbaCallbackCommand_AddJobs::GsrCorbaCallbackCommand_AddJobs( const ECSCorbaJobSeq &JobsSeq)
{
	unsigned int JobsSeqSize=JobsSeq.length();
	m_JobsSeq.resize(JobsSeqSize);
	for(unsigned int i=0;i<JobsSeqSize;++i)
	{
		const ECSCorbaJob & CrbJob=JobsSeq[i];
		GsrCorbaSimulJobDataAdapter& JobAdapter=m_JobsSeq[i];
		JobAdapter.SetFromCorbaJob(CrbJob);
	}
}
size_t GsrCorbaCallbackCommand_AddJobs::Size()
{
	return m_JobsSeq.size();
}

void	GsrCorbaCallbackCommand_AddJobs::Dump(std::ostream& os)
{
	os << "UPD=" << "AddJobs";
	os << " DATA=" << m_JobsSeq.size();
}


void GsrCorbaCallbackCommand_AddJobs::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_AddJobs::CRB_AddJobs");

	DIAG_PDEF( DIAG_D,  "AddJobs Received " << m_JobsSeq.size() << " jobs" );

	//JobRepository::Instance()->AddJobs(m_JobsSeq);
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	std::string EmptyDcName;
	const char* lastDcName(EmptyDcName.c_str());
	DataCenterI* pDc = NULL;

	for (CORBA::ULong i = 0; i < m_JobsSeq.size(); ++i)
	{
		const GsrCorbaSimulJobDataAdapter& JobAdp=m_JobsSeq[i];
		if (IS_PRINTABLE_DIAG_PDEF(DIAG_D))
		{
			std::ostringstream os;
			os << "UPD=" << "AddJob(s)";
			os << " DATA=";
			JobAdp.DumpAdapter(os);
			if( os.str().length() >  1788 )
			{
				TDiag *pTheDiag = TDiag::Instance(); 
				pTheDiag->flush(); 
				pTheDiag->PrintDirectly(os.str().c_str());
			}
			else
			{
				DIAG_PDEF(DIAG_D, os.str().c_str());
			}
		}

		const char* JobDcName=JobAdp.GetDataCenterName();
		if( ::strcmp(lastDcName,JobDcName) !=0 )
		{
			lastDcName=JobDcName;
			pDc=simulator->GetDataCenterByName(lastDcName);
		}

		if( pDc == NULL )
		{
			DIAG_PDEF( DIAG_I, "skip job with unknown CTM: " << lastDcName);
			continue;
		}
		SimulJobI* simul_job = simulator->AddJob(pDc,&JobAdp);
		EM_ASSERT( simul_job != 0, "cannot create simul job" );
	}

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
//
GsrCorbaCallbackCommand_AddJob::GsrCorbaCallbackCommand_AddJob(const ECSCorbaJob &aJob)
: m_pNewJob(NULL)
{
	m_pNewJob=new GsrCorbaSimulJobDataAdapter;
	m_pNewJob->SetFromCorbaJob(aJob);
}

GsrCorbaCallbackCommand_AddJob::~GsrCorbaCallbackCommand_AddJob()
{
	if(m_pNewJob!=NULL)
	{
		delete m_pNewJob;
		m_pNewJob=NULL;
	}
}

void	GsrCorbaCallbackCommand_AddJob::Dump(std::ostream& os)
{
	os << "UPD=" << "AddJob";
	os << " DATA=";
	m_pNewJob->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_AddJob::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_AddJob::Execute");
	DIAG_PDEF( DIAG_D, "Single AddJob Received" );
	
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	//if(JobRepository::Instance()->AddSingleJob(m_pNewJob)==true)
	//	m_pNewJob=NULL;

	const std::string& DcName=m_pNewJob->GetDataCenterName();

	bool IsBimJobWasConfirmed(false); //dummy
	simulator->UpdateJob(DcName,m_pNewJob,IsBimJobWasConfirmed);
}



//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// UpdateJob
GsrCorbaCallbackCommand_UpdateJob::GsrCorbaCallbackCommand_UpdateJob(
	const char *sKey,
	const ECSAttrsSeq &FieldsIDsSeq,
	const stringSeq &ValuesSeq)
: m_pJobUpdate(NULL)
{
	bsm::JobKey Key(sKey);
	m_JobDcName=Key.GetCtmName();
	m_pJobUpdate=new GsrCorbaSimulJobDataAdapter;
	m_pJobUpdate->SetForShortUpdate(Key.GetOrderId(),FieldsIDsSeq,ValuesSeq);	
}

GsrCorbaCallbackCommand_UpdateJob::~GsrCorbaCallbackCommand_UpdateJob()
{
	if(m_pJobUpdate!=NULL)
	{
		delete m_pJobUpdate;
		m_pJobUpdate=NULL;
	}
}

void	GsrCorbaCallbackCommand_UpdateJob::Dump(std::ostream& os)
{
	os << "UPD=" << "UpdateJob";
	os << " DATA=";
	m_pJobUpdate->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_UpdateJob::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_UpdateJob::Execute");

	DIAG_PDEF( DIAG_D,  "Update job " << m_pJobUpdate->GetRealOrderId() );

	GsrActionCallback* gsr_actions = GsrService::Instance()->GetGsrActionCallback();
	if( gsr_actions )
	{
		bool was_handled = gsr_actions->OnShortUpdate(m_JobDcName, m_pJobUpdate);
		if( was_handled)
		{
			m_pJobUpdate = NULL; //pass ownership
			return;
		}
	}

	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	bool IsBimJobWasConfirmed(false);  //TODO: why we need it?
	simulator->UpdateJob(m_JobDcName,m_pJobUpdate,IsBimJobWasConfirmed);

}

//
//////////////////////////////////////////////////////////////////////////




//////////////////////////////////////////////////////////////////////////
// UpdateLastInServiceUpdateCallBack
UpdateLastInServiceUpdateCallBack::UpdateLastInServiceUpdateCallBack(const char *sKey)
: m_Time(bsm::GetOsSystemTime())

{
	m_pKey2Update = CORBA::string_dup(sKey);
}

void	UpdateLastInServiceUpdateCallBack::Dump(std::ostream& os)
{
	os << "UPD=" << "LastInService";
}

void UpdateLastInServiceUpdateCallBack::Execute()
{
	DBG_FNC_ENTER("UpdateLastInServiceUpdateCallBack::Execute");

	DIAG_PDEF( DIAG_D,  "Update job " << m_pKey2Update.in() );

	bsm::JobKey key2Update(m_pKey2Update.in());

	GsrService::Instance()->GetGsrActionCallback()->OnLastInServiceUpdate(key2Update.GetCtmName(), m_Time);

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// UpdateJobFull
GsrCorbaCallbackCommand_UpdateJobFull::GsrCorbaCallbackCommand_UpdateJobFull(const ECSCorbaJob &aJob)
: m_pJobFullUpdate(NULL)
{
	m_pJobFullUpdate=new GsrCorbaSimulJobDataAdapter;
	m_pJobFullUpdate->SetFromCorbaJob(aJob);
}

GsrCorbaCallbackCommand_UpdateJobFull::~GsrCorbaCallbackCommand_UpdateJobFull()
{
	if(m_pJobFullUpdate!=NULL)
	{
		delete m_pJobFullUpdate;
		m_pJobFullUpdate=NULL;
	}
}

void	GsrCorbaCallbackCommand_UpdateJobFull::Dump(std::ostream& os)
{
	os << "UPD=" << "UpdateJobFull";
	os << " DATA=";
	m_pJobFullUpdate->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_UpdateJobFull::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_UpdateJobFull::Execute");

	DIAG_PDEF( DIAG_D,  "Update job Full" << m_pJobFullUpdate->GetRealOrderId());

	const std::string& DcName=m_pJobFullUpdate->GetDataCenterName();

	GsrActionCallback* gsr_actions = GsrService::Instance()->GetGsrActionCallback();
	if( gsr_actions )
	{
		bool was_handled = gsr_actions->OnFullUpdate(DcName, m_pJobFullUpdate);
		if( was_handled)
		{
			m_pJobFullUpdate = NULL; //pass ownership
			return;
		}
	}

	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	bool IsBimJobWasConfirmed(false); //TODO: why we need it?
	SimulJobBaseI* pUpdatedJob=simulator->UpdateJob(DcName,m_pJobFullUpdate,IsBimJobWasConfirmed);

}
//
//////////////////////////////////////////////////////////////////////////




//////////////////////////////////////////////////////////////////////////
// DelCtm
GsrCorbaCallbackCommand_DelCtm::GsrCorbaCallbackCommand_DelCtm(const char *sCTM)
{
	m_pCTM2Delete = strdup(sCTM);
}

void	GsrCorbaCallbackCommand_DelCtm::Dump(std::ostream& os)
{
	os << "UPD=" << "DelCtm";
}

void GsrCorbaCallbackCommand_DelCtm::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_DelCtm::Execute");

	DIAG_PDEF( DIAG_I,  "Delete CTM " << m_pCTM2Delete.in() );

	//ignore the event. we will remove the DC by 'load-net-recommended' event

}
//
///////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// InformStatus
GsrCorbaCallbackCommand_InformStatus::GsrCorbaCallbackCommand_InformStatus(const ECSCorbaAttrHolder &rMsg)
: m_msgParams(rMsg)
{
}

void	GsrCorbaCallbackCommand_InformStatus::Dump(std::ostream& os)
{
	os << "UPD=" << "InformStatus";
}

void GsrCorbaCallbackCommand_InformStatus::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_InformStatus::Execute");

	EMString sStatusMsg;
	ECSAttrHolder	AttrHolder;

	ECSStringVector  sAttr, sFields;

	CorbaSequence2StlVector(&m_msgParams.m_Attributes, sAttr);
	CorbaSequence2StlVector(&m_msgParams.m_Fields, sFields);

	AttrHolder.SetAttrsNamesAndValues(sAttr,sFields);

	std::string value;
	if (AttrHolder.GetAttr(std::string(VP_ATTR_MSG_TEXT), value) == TRC_SUCCESS)
	{

		sStatusMsg = value + " ";
	}
	if (AttrHolder.GetAttr(std::string(VP_ATTR_NAME_RADIUS), value) == TRC_SUCCESS)
	{
		sStatusMsg += "Radius: " + value + " ";
	}
	if (AttrHolder.GetAttr(std::string(VP_ATTR_NAME_STATUS), value) == TRC_SUCCESS)
	{
		sStatusMsg += "Status: " + value + " ";
	}

	DIAG_PDEF( DIAG_I,  sStatusMsg );

	//@@TBD set the message to monitor

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// LoadNetRecommended
GsrCorbaCallbackCommand_LoadNetRecommended::GsrCorbaCallbackCommand_LoadNetRecommended(const char *sCTM)
{
	m_pCTM2Load = CORBA::string_dup(sCTM);
}

void	GsrCorbaCallbackCommand_LoadNetRecommended::Dump(std::ostream& os)
{
	os << "UPD=" << "LoadNetRecommended";
}

void GsrCorbaCallbackCommand_LoadNetRecommended::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_LoadNetRecommended::Execute");

	DIAG_PDEF( DIAG_I,  "PSR: Load Net Recommended  for " << m_pCTM2Load.in()  );

	GsrService::Instance()->RequestRefresh();

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// NewJobsBegin
GsrCorbaCallbackCommand_NewJobsBegin::GsrCorbaCallbackCommand_NewJobsBegin(
	CORBA::Long nJobs,
	const ECSAttrsSeq &FieldsSeq,
	const ECSAttrsSeq &HierFieldsSeq)
: m_nJobs(nJobs)
, m_FieldsSeq(FieldsSeq)
, m_HierarchyFieldsSeq(HierFieldsSeq)
{
}

void	GsrCorbaCallbackCommand_NewJobsBegin::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsBegin";
}

void GsrCorbaCallbackCommand_NewJobsBegin::Execute()
{

	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsBegin::Execute");
	DIAG_PDEF( DIAG_I, "PSR: Start executing New Jobs Begin Message." << " Number of Jobs " << m_nJobs);

	std::vector<std::string> ctms;
	ctms.push_back(GsrDataCenterMgr::AllCtmNamesStr); 
	
	GsrService::Instance()->RunDataCenterNewDay(ctms);

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// NewJobsIncermentalBegin
GsrCorbaCallbackCommand_NewJobsIncermentalBegin::GsrCorbaCallbackCommand_NewJobsIncermentalBegin(
	CORBA::Long nJobs,
	const stringSeq &ctmSeq)
: m_nJobs(nJobs)
, m_CTMsSeq(ctmSeq)
{
}

void GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsIncermentalBegin";
}

void GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Execute");
	DIAG_PDEF( DIAG_I,  "PSR: Incremental Begin Received, number of jobs is:  "<< m_nJobs  );

	std::vector<std::string> ctms;
	CRB::StringSeqToStlStringContainer(m_CTMsSeq, ctms);

	GsrService::Instance()->RunDataCenterNewDay(ctms);

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// NewJobsEnd
GsrCorbaCallbackCommand_NewJobsEnd::GsrCorbaCallbackCommand_NewJobsEnd()
{
}

void	GsrCorbaCallbackCommand_NewJobsEnd::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsEnd";
}

void GsrCorbaCallbackCommand_NewJobsEnd::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsEnd::Execute");

	DIAG_PDEF( DIAG_D, "PSR: Start executing  New Jobs End Message" );

	GsrService::Instance()->RunDataCenterNewDayEnd();
}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// ResourcesUpdates
GsrCorbaCallbackCommand_ResourcesUpdates::GsrCorbaCallbackCommand_ResourcesUpdates( const stringSeq& update_list  )
:m_UpdateList( update_list )
{
}

void	GsrCorbaCallbackCommand_ResourcesUpdates::Dump(std::ostream& os)
{
	os << "UPD=" << "ResourcesUpdates";
	os << " DATA=";
	std::vector<std::string> upd;
	CRB::StringSeqToStlStringContainer( m_UpdateList, upd );
	if( !upd.empty())
		os << upd[0];
}

void GsrCorbaCallbackCommand_ResourcesUpdates::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_ResourcesUpdates::Execute");
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	std::vector<std::string> upd;
	CRB::StringSeqToStlStringContainer( m_UpdateList, upd );

	if( upd.size() > 0)
	{
		const std::string& UpdateStr = upd[0];
		DIAG_PDEF(DIAG_D, UpdateStr); 
		ResourceUpdateData resUpd;
		BuildResourceUpdate::Build(UpdateStr,resUpd);

		simulator->UpdateResource(resUpd);
		delete resUpd.m_pResUpdData; 
	}
}
//
///////////////////////////////////////////////////////////////////////////


} //namespace bsm 

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrCorbaCallbackCommand.cpp#2:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrCorbaCallbackCommand.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrCorbaCallbackCommand.cp GsrCorbaCallbackCommand.cp
------------------------- -------------------------- --------------------------
create_time               Sun Mar 21 10:03:00 2010   Wed Apr 14 14:06:44 2010  
modify_time               Mon Apr 12 11:58:41 2010   Wed Apr 14 17:02:52 2010  
version                   1                          2                         
source_create_time        Sun Mar 21 10:03:00 2010   Wed Apr 14 14:06:46 2010  
source_modify_time        Thu Apr 08 14:42:07 2010   Wed Apr 14 14:10:44 2010  

===============================================================================
Associated tasks differs:

GsrCorbaCallbackCommand.cpp#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrCorbaCallbackCommand.cpp#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Sun Mar 21 10:03:00 2010 %
---
> *	%date_created:	Wed Apr 14 14:06:44 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: GsrCorbaCallbackCommand.cpp#1 %  (%full_filespec: GsrCorbaCallbackCommand.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: GsrCorbaCallbackCommand.cpp#2 %  (%full_filespec: GsrCorbaCallbackCommand.cpp#2:cpp:1 %)";
246,247c246
< 	//JobRepository::Instance()->LastInServiceUpdate(key2Update.GetCtmName(),m_Time);
< 	//TODOGSR: call callback action for LastInServiceUpdate
---
> 	GsrService::Instance()->GetGsrActionCallback()->OnLastInServiceUpdate(key2Update.GetCtmName(), m_Time);

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Sun Mar 21 10:03:00 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:02 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:40 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 14:06:45 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:19 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:52 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrCorbaCallbackCommand.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrCorbaCallbackCommand.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Mar 21 10:03:00 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrCorbaCallbackCommand.cpp#1 %  (%full_filespec: GsrCorbaCallbackCommand.cpp#1:cpp:1 %)";
#endif

#include "em_foundations/ECSAttrHolder.h"
#include "em_crb_foundations/CorbaBasics.h"
#include "Common/ECSViewPointStatuses.h"

#include "GsrCorbaCallbackCommand.h"
#include "BsmCommon/bsm_catch_macro.h"
#include "GsrCorbaSimulJobDataAdapter.h"
#include "JobKey.h"
#include "GsrDataCenterMgr.h"
#include "BsmService/CrbConvert.h"
#include "BsmService/GsrService.h"
#include "libfcengine/Simulator.h"
#include "ForecastDAL/ResourcesTypes.h"
#include "BsmCommon/BuildResourceUpdate.h"
#include "GsrActionCallback.h"

DIAG_REGISTER_MODULE;

namespace bsm {

//////////////////////////////////////////////////////////////////////////
//
GsrCorbaCallbackCommand_AddJobs::GsrCorbaCallbackCommand_AddJobs( const ECSCorbaJobSeq &JobsSeq)
{
	unsigned int JobsSeqSize=JobsSeq.length();
	m_JobsSeq.resize(JobsSeqSize);
	for(unsigned int i=0;i<JobsSeqSize;++i)
	{
		const ECSCorbaJob & CrbJob=JobsSeq[i];
		GsrCorbaSimulJobDataAdapter& JobAdapter=m_JobsSeq[i];
		JobAdapter.SetFromCorbaJob(CrbJob);
	}
}
size_t GsrCorbaCallbackCommand_AddJobs::Size()
{
	return m_JobsSeq.size();
}

void	GsrCorbaCallbackCommand_AddJobs::Dump(std::ostream& os)
{
	os << "UPD=" << "AddJobs";
	os << " DATA=" << m_JobsSeq.size();
}


void GsrCorbaCallbackCommand_AddJobs::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_AddJobs::CRB_AddJobs");

	DIAG_PDEF( DIAG_D,  "AddJobs Received " << m_JobsSeq.size() << " jobs" );

	//JobRepository::Instance()->AddJobs(m_JobsSeq);
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	std::string EmptyDcName;
	const char* lastDcName(EmptyDcName.c_str());
	DataCenterI* pDc = NULL;

	for (CORBA::ULong i = 0; i < m_JobsSeq.size(); ++i)
	{
		const GsrCorbaSimulJobDataAdapter& JobAdp=m_JobsSeq[i];
		if (IS_PRINTABLE_DIAG_PDEF(DIAG_D))
		{
			std::ostringstream os;
			os << "UPD=" << "AddJob(s)";
			os << " DATA=";
			JobAdp.DumpAdapter(os);
			if( os.str().length() >  1788 )
			{
				TDiag *pTheDiag = TDiag::Instance(); 
				pTheDiag->flush(); 
				pTheDiag->PrintDirectly(os.str().c_str());
			}
			else
			{
				DIAG_PDEF(DIAG_D, os.str().c_str());
			}
		}

		const char* JobDcName=JobAdp.GetDataCenterName();
		if( ::strcmp(lastDcName,JobDcName) !=0 )
		{
			lastDcName=JobDcName;
			pDc=simulator->GetDataCenterByName(lastDcName);
		}

		if( pDc == NULL )
		{
			DIAG_PDEF( DIAG_I, "skip job with unknown CTM: " << lastDcName);
			continue;
		}
		SimulJobI* simul_job = simulator->AddJob(pDc,&JobAdp);
		EM_ASSERT( simul_job != 0, "cannot create simul job" );
	}

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
//
GsrCorbaCallbackCommand_AddJob::GsrCorbaCallbackCommand_AddJob(const ECSCorbaJob &aJob)
: m_pNewJob(NULL)
{
	m_pNewJob=new GsrCorbaSimulJobDataAdapter;
	m_pNewJob->SetFromCorbaJob(aJob);
}

GsrCorbaCallbackCommand_AddJob::~GsrCorbaCallbackCommand_AddJob()
{
	if(m_pNewJob!=NULL)
	{
		delete m_pNewJob;
		m_pNewJob=NULL;
	}
}

void	GsrCorbaCallbackCommand_AddJob::Dump(std::ostream& os)
{
	os << "UPD=" << "AddJob";
	os << " DATA=";
	m_pNewJob->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_AddJob::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_AddJob::Execute");
	DIAG_PDEF( DIAG_D, "Single AddJob Received" );
	
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	//if(JobRepository::Instance()->AddSingleJob(m_pNewJob)==true)
	//	m_pNewJob=NULL;

	const std::string& DcName=m_pNewJob->GetDataCenterName();

	bool IsBimJobWasConfirmed(false); //dummy
	simulator->UpdateJob(DcName,m_pNewJob,IsBimJobWasConfirmed);
}



//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// UpdateJob
GsrCorbaCallbackCommand_UpdateJob::GsrCorbaCallbackCommand_UpdateJob(
	const char *sKey,
	const ECSAttrsSeq &FieldsIDsSeq,
	const stringSeq &ValuesSeq)
: m_pJobUpdate(NULL)
{
	bsm::JobKey Key(sKey);
	m_JobDcName=Key.GetCtmName();
	m_pJobUpdate=new GsrCorbaSimulJobDataAdapter;
	m_pJobUpdate->SetForShortUpdate(Key.GetOrderId(),FieldsIDsSeq,ValuesSeq);	
}

GsrCorbaCallbackCommand_UpdateJob::~GsrCorbaCallbackCommand_UpdateJob()
{
	if(m_pJobUpdate!=NULL)
	{
		delete m_pJobUpdate;
		m_pJobUpdate=NULL;
	}
}

void	GsrCorbaCallbackCommand_UpdateJob::Dump(std::ostream& os)
{
	os << "UPD=" << "UpdateJob";
	os << " DATA=";
	m_pJobUpdate->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_UpdateJob::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_UpdateJob::Execute");

	DIAG_PDEF( DIAG_D,  "Update job " << m_pJobUpdate->GetRealOrderId() );

	GsrActionCallback* gsr_actions = GsrService::Instance()->GetGsrActionCallback();
	if( gsr_actions )
	{
		bool was_handled = gsr_actions->OnShortUpdate(m_JobDcName, m_pJobUpdate);
		if( was_handled)
		{
			m_pJobUpdate = NULL; //pass ownership
			return;
		}
	}

	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	bool IsBimJobWasConfirmed(false);  //TODO: why we need it?
	simulator->UpdateJob(m_JobDcName,m_pJobUpdate,IsBimJobWasConfirmed);

}

//
//////////////////////////////////////////////////////////////////////////




//////////////////////////////////////////////////////////////////////////
// UpdateLastInServiceUpdateCallBack
UpdateLastInServiceUpdateCallBack::UpdateLastInServiceUpdateCallBack(const char *sKey)
: m_Time(bsm::GetOsSystemTime())

{
	m_pKey2Update = CORBA::string_dup(sKey);
}

void	UpdateLastInServiceUpdateCallBack::Dump(std::ostream& os)
{
	os << "UPD=" << "LastInService";
}

void UpdateLastInServiceUpdateCallBack::Execute()
{
	DBG_FNC_ENTER("UpdateLastInServiceUpdateCallBack::Execute");

	DIAG_PDEF( DIAG_D,  "Update job " << m_pKey2Update.in() );

	bsm::JobKey key2Update(m_pKey2Update.in());

	//JobRepository::Instance()->LastInServiceUpdate(key2Update.GetCtmName(),m_Time);
	//TODOGSR: call callback action for LastInServiceUpdate

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// UpdateJobFull
GsrCorbaCallbackCommand_UpdateJobFull::GsrCorbaCallbackCommand_UpdateJobFull(const ECSCorbaJob &aJob)
: m_pJobFullUpdate(NULL)
{
	m_pJobFullUpdate=new GsrCorbaSimulJobDataAdapter;
	m_pJobFullUpdate->SetFromCorbaJob(aJob);
}

GsrCorbaCallbackCommand_UpdateJobFull::~GsrCorbaCallbackCommand_UpdateJobFull()
{
	if(m_pJobFullUpdate!=NULL)
	{
		delete m_pJobFullUpdate;
		m_pJobFullUpdate=NULL;
	}
}

void	GsrCorbaCallbackCommand_UpdateJobFull::Dump(std::ostream& os)
{
	os << "UPD=" << "UpdateJobFull";
	os << " DATA=";
	m_pJobFullUpdate->DumpAdapter(os);
}

void GsrCorbaCallbackCommand_UpdateJobFull::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_UpdateJobFull::Execute");

	DIAG_PDEF( DIAG_D,  "Update job Full" << m_pJobFullUpdate->GetRealOrderId());

	const std::string& DcName=m_pJobFullUpdate->GetDataCenterName();

	GsrActionCallback* gsr_actions = GsrService::Instance()->GetGsrActionCallback();
	if( gsr_actions )
	{
		bool was_handled = gsr_actions->OnFullUpdate(DcName, m_pJobFullUpdate);
		if( was_handled)
		{
			m_pJobFullUpdate = NULL; //pass ownership
			return;
		}
	}

	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	bool IsBimJobWasConfirmed(false); //TODO: why we need it?
	SimulJobBaseI* pUpdatedJob=simulator->UpdateJob(DcName,m_pJobFullUpdate,IsBimJobWasConfirmed);

}
//
//////////////////////////////////////////////////////////////////////////




//////////////////////////////////////////////////////////////////////////
// DelCtm
GsrCorbaCallbackCommand_DelCtm::GsrCorbaCallbackCommand_DelCtm(const char *sCTM)
{
	m_pCTM2Delete = strdup(sCTM);
}

void	GsrCorbaCallbackCommand_DelCtm::Dump(std::ostream& os)
{
	os << "UPD=" << "DelCtm";
}

void GsrCorbaCallbackCommand_DelCtm::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_DelCtm::Execute");

	DIAG_PDEF( DIAG_I,  "Delete CTM " << m_pCTM2Delete.in() );

	//ignore the event. we will remove the DC by 'load-net-recommended' event

}
//
///////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// InformStatus
GsrCorbaCallbackCommand_InformStatus::GsrCorbaCallbackCommand_InformStatus(const ECSCorbaAttrHolder &rMsg)
: m_msgParams(rMsg)
{
}

void	GsrCorbaCallbackCommand_InformStatus::Dump(std::ostream& os)
{
	os << "UPD=" << "InformStatus";
}

void GsrCorbaCallbackCommand_InformStatus::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_InformStatus::Execute");

	EMString sStatusMsg;
	ECSAttrHolder	AttrHolder;

	ECSStringVector  sAttr, sFields;

	CorbaSequence2StlVector(&m_msgParams.m_Attributes, sAttr);
	CorbaSequence2StlVector(&m_msgParams.m_Fields, sFields);

	AttrHolder.SetAttrsNamesAndValues(sAttr,sFields);

	std::string value;
	if (AttrHolder.GetAttr(std::string(VP_ATTR_MSG_TEXT), value) == TRC_SUCCESS)
	{

		sStatusMsg = value + " ";
	}
	if (AttrHolder.GetAttr(std::string(VP_ATTR_NAME_RADIUS), value) == TRC_SUCCESS)
	{
		sStatusMsg += "Radius: " + value + " ";
	}
	if (AttrHolder.GetAttr(std::string(VP_ATTR_NAME_STATUS), value) == TRC_SUCCESS)
	{
		sStatusMsg += "Status: " + value + " ";
	}

	DIAG_PDEF( DIAG_I,  sStatusMsg );

	//@@TBD set the message to monitor

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// LoadNetRecommended
GsrCorbaCallbackCommand_LoadNetRecommended::GsrCorbaCallbackCommand_LoadNetRecommended(const char *sCTM)
{
	m_pCTM2Load = CORBA::string_dup(sCTM);
}

void	GsrCorbaCallbackCommand_LoadNetRecommended::Dump(std::ostream& os)
{
	os << "UPD=" << "LoadNetRecommended";
}

void GsrCorbaCallbackCommand_LoadNetRecommended::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_LoadNetRecommended::Execute");

	DIAG_PDEF( DIAG_I,  "PSR: Load Net Recommended  for " << m_pCTM2Load.in()  );

	GsrService::Instance()->RequestRefresh();

}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// NewJobsBegin
GsrCorbaCallbackCommand_NewJobsBegin::GsrCorbaCallbackCommand_NewJobsBegin(
	CORBA::Long nJobs,
	const ECSAttrsSeq &FieldsSeq,
	const ECSAttrsSeq &HierFieldsSeq)
: m_nJobs(nJobs)
, m_FieldsSeq(FieldsSeq)
, m_HierarchyFieldsSeq(HierFieldsSeq)
{
}

void	GsrCorbaCallbackCommand_NewJobsBegin::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsBegin";
}

void GsrCorbaCallbackCommand_NewJobsBegin::Execute()
{

	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsBegin::Execute");
	DIAG_PDEF( DIAG_I, "PSR: Start executing New Jobs Begin Message." << " Number of Jobs " << m_nJobs);

	std::vector<std::string> ctms;
	ctms.push_back(GsrDataCenterMgr::AllCtmNamesStr); 
	
	GsrService::Instance()->RunDataCenterNewDay(ctms);

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// NewJobsIncermentalBegin
GsrCorbaCallbackCommand_NewJobsIncermentalBegin::GsrCorbaCallbackCommand_NewJobsIncermentalBegin(
	CORBA::Long nJobs,
	const stringSeq &ctmSeq)
: m_nJobs(nJobs)
, m_CTMsSeq(ctmSeq)
{
}

void GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsIncermentalBegin";
}

void GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsIncermentalBegin::Execute");
	DIAG_PDEF( DIAG_I,  "PSR: Incremental Begin Received, number of jobs is:  "<< m_nJobs  );

	std::vector<std::string> ctms;
	CRB::StringSeqToStlStringContainer(m_CTMsSeq, ctms);

	GsrService::Instance()->RunDataCenterNewDay(ctms);

}
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
// NewJobsEnd
GsrCorbaCallbackCommand_NewJobsEnd::GsrCorbaCallbackCommand_NewJobsEnd()
{
}

void	GsrCorbaCallbackCommand_NewJobsEnd::Dump(std::ostream& os)
{
	os << "UPD=" << "NewJobsEnd";
}

void GsrCorbaCallbackCommand_NewJobsEnd::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_NewJobsEnd::Execute");

	DIAG_PDEF( DIAG_D, "PSR: Start executing  New Jobs End Message" );

	GsrService::Instance()->RunDataCenterNewDayEnd();
}
//
//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// ResourcesUpdates
GsrCorbaCallbackCommand_ResourcesUpdates::GsrCorbaCallbackCommand_ResourcesUpdates( const stringSeq& update_list  )
:m_UpdateList( update_list )
{
}

void	GsrCorbaCallbackCommand_ResourcesUpdates::Dump(std::ostream& os)
{
	os << "UPD=" << "ResourcesUpdates";
	os << " DATA=";
	std::vector<std::string> upd;
	CRB::StringSeqToStlStringContainer( m_UpdateList, upd );
	if( !upd.empty())
		os << upd[0];
}

void GsrCorbaCallbackCommand_ResourcesUpdates::Execute()
{
	DBG_FNC_ENTER("GsrCorbaCallbackCommand_ResourcesUpdates::Execute");
	CSimulator* simulator = GsrService::Instance()->GetSimulator();

	std::vector<std::string> upd;
	CRB::StringSeqToStlStringContainer( m_UpdateList, upd );

	if( upd.size() > 0)
	{
		const std::string& UpdateStr = upd[0];
		DIAG_PDEF(DIAG_D, UpdateStr); 
		ResourceUpdateData resUpd;
		BuildResourceUpdate::Build(UpdateStr,resUpd);

		simulator->UpdateResource(resUpd);
		delete resUpd.m_pResUpdData; 
	}
}
//
///////////////////////////////////////////////////////////////////////////


} //namespace bsm 

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrCorbaCallbackCommand.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrCorbaCallbackCommand.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrKeepAndLive.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrKeepAndLive.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Mar 25 15:18:49 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrKeepAndLive.cpp#2:cpp:1
*****************************************************************************
Object:  GsrKeepAndLive.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 14:24:23 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrKeepAndLive.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrKeepAndLive.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrKeepAndLive.cpp#2 sqa yakovt cpp ECSNT 1 46511
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrKeepAndLive.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrKeepAndLive.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrKeepAndLive.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 14:24:23 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrKeepAndLive.cpp#2 %  (%full_filespec: GsrKeepAndLive.cpp#2:cpp:1 %)";
#endif

#include "GsrKeepAndLive.h"
#include "GsrService.h"
#include "em_foundations/ExitNotification.h"
#include "BsmCommon/bsm_catch_macro.h"
#include "em_authorizations/UM_Macros.h"
#include "em_idl_prod/ECSCorbaAttrHolder.hh"
#include "em_idl_prod/ECSCorbaUsersManager.hh"

DIAG_REGISTER_MODULE;

namespace bsm{

//////////////////////////////////////////////////////////////////////////
//
GsrKeepAndLive::GsrKeepAndLive()
{
	DBG_FNC_ENTER("GsrKeepAndLive::GsrKeepAndLive");

	::time(&m_lastKeepAlive);

}

//////////////////////////////////////////////////////////////////////////
//
void GsrKeepAndLive::Run()
{
	DBG_FNC_ENTER("GsrKeepAndLive::Run");

	ExitNotification ExitNow;
	while ( !ExitNow() )
	{		
		try
		{
			//sleep before entering the loop again
			os_this_thread::sleep(1);

			if ( GsrService::Instance()->IsReconnectionActive() )
				continue;

			// all exception will be handled here, rc will bad in exception case.
			TRC rc = KeepAlive();

			if( rc != TRC_SUCCESS )
			{
				if( ExitNow() )
					return;

				DIAG_PDEF(DIAG_E, "KeepAlive is failed with rc = " << rc );

				if( rc == TRC_OBJECT_NOT_FOUND )
				{
					DIAG_PDEF(DIAG_E, "rc == TRC_OBJECT_NOT_FOUND, probably BIM user was kicked by GSR" );
					// print current stack to analyzing dead-lock
					if (TDiag::Instance()->IsStacksEnabled())
					{
						TDiag::Instance()->PrintStacks();
					}
				}

				GsrService::Instance()->StartFailover();
			}
		}
		BSM_CATCH_ALL_AND_PRINT("Unexpected exception");
	}
}

//////////////////////////////////////////////////////////////////////////
//
TRC GsrKeepAndLive::KeepAlive()
{
	DBG_FNC_ENTER("GsrKeepAndLive::KeepAlive");

	time_t  curTime;

	time (&curTime);

	TRC rc = TRC_SUCCESS; 

	if ( curTime > (m_lastKeepAlive + 10))
	{
		UM_GENERATE_UID4DIAG(ConnectionSettings::Get()->GetUserID().c_str(), UID_4_DIAG);
		DIAG_PDEF(DIAG_D, "Keep Alive to UID: " << UID_4_DIAG);

		m_lastKeepAlive = curTime;

		///////////////////////////////////////////////////////////////////////
		// make keep and live to the login default user
		// 

		rc = TRC_FAIL; //default, will be changed by CRB_ClientKeepAlive
		try
		{
			ECSCorbaUsersManager_ptr userManager_ptr = GsrGetCRBServant<ECSCorbaUsersManager_ptr>(USERS_MANAGER_SERVANT);
			rc = userManager_ptr->CRB_ClientKeepAlive(ConnectionSettings::Get()->GetUserID());
		}
		BSM_CATCH_ALL_AND_PRINT("KeepAlive is failed. rc=" <<  rc);
		// in case exception TRC_FAIL will be handled by caller

	}	

	return rc;
}


}//namespace bsm
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrKeepAndLive.cpp#2:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrKeepAndLive.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrKeepAndLive.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrKeepAndLive.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrKeepAndLive.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrKeepAndLive.cpp#1       GsrKeepAndLive.cpp#2      
------------------------- -------------------------- --------------------------
create_time               Thu Mar 25 15:18:49 2010   Wed Apr 14 14:24:23 2010  
modify_time               Mon Apr 12 11:58:47 2010   Wed Apr 14 17:02:56 2010  
version                   1                          2                         
source_create_time        Thu Mar 25 15:18:50 2010   Wed Apr 14 14:24:24 2010  
source_modify_time        Tue Apr 06 14:49:02 2010   Wed Apr 14 14:24:30 2010  

===============================================================================
Associated tasks differs:

GsrKeepAndLive.cpp#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrKeepAndLive.cpp#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Mar 25 15:18:49 2010 %
---
> *	%date_created:	Wed Apr 14 14:24:23 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: GsrKeepAndLive.cpp#1 %  (%full_filespec: GsrKeepAndLive.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: GsrKeepAndLive.cpp#2 %  (%full_filespec: GsrKeepAndLive.cpp#2:cpp:1 %)";
54c54
< 			if ( GsrService::Instance()->IsReconnectRunning() )
---
> 			if ( GsrService::Instance()->IsReconnectionActive() )

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Mar 25 15:18:49 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:09 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:46 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 14:24:24 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:20 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:56 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrKeepAndLive.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrKeepAndLive.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Mar 25 15:18:49 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrKeepAndLive.cpp#1 %  (%full_filespec: GsrKeepAndLive.cpp#1:cpp:1 %)";
#endif

#include "GsrKeepAndLive.h"
#include "GsrService.h"
#include "em_foundations/ExitNotification.h"
#include "BsmCommon/bsm_catch_macro.h"
#include "em_authorizations/UM_Macros.h"
#include "em_idl_prod/ECSCorbaAttrHolder.hh"
#include "em_idl_prod/ECSCorbaUsersManager.hh"

DIAG_REGISTER_MODULE;

namespace bsm{

//////////////////////////////////////////////////////////////////////////
//
GsrKeepAndLive::GsrKeepAndLive()
{
	DBG_FNC_ENTER("GsrKeepAndLive::GsrKeepAndLive");

	::time(&m_lastKeepAlive);

}

//////////////////////////////////////////////////////////////////////////
//
void GsrKeepAndLive::Run()
{
	DBG_FNC_ENTER("GsrKeepAndLive::Run");

	ExitNotification ExitNow;
	while ( !ExitNow() )
	{		
		try
		{
			//sleep before entering the loop again
			os_this_thread::sleep(1);

			if ( GsrService::Instance()->IsReconnectRunning() )
				continue;

			// all exception will be handled here, rc will bad in exception case.
			TRC rc = KeepAlive();

			if( rc != TRC_SUCCESS )
			{
				if( ExitNow() )
					return;

				DIAG_PDEF(DIAG_E, "KeepAlive is failed with rc = " << rc );

				if( rc == TRC_OBJECT_NOT_FOUND )
				{
					DIAG_PDEF(DIAG_E, "rc == TRC_OBJECT_NOT_FOUND, probably BIM user was kicked by GSR" );
					// print current stack to analyzing dead-lock
					if (TDiag::Instance()->IsStacksEnabled())
					{
						TDiag::Instance()->PrintStacks();
					}
				}

				GsrService::Instance()->StartFailover();
			}
		}
		BSM_CATCH_ALL_AND_PRINT("Unexpected exception");
	}
}

//////////////////////////////////////////////////////////////////////////
//
TRC GsrKeepAndLive::KeepAlive()
{
	DBG_FNC_ENTER("GsrKeepAndLive::KeepAlive");

	time_t  curTime;

	time (&curTime);

	TRC rc = TRC_SUCCESS; 

	if ( curTime > (m_lastKeepAlive + 10))
	{
		UM_GENERATE_UID4DIAG(ConnectionSettings::Get()->GetUserID().c_str(), UID_4_DIAG);
		DIAG_PDEF(DIAG_D, "Keep Alive to UID: " << UID_4_DIAG);

		m_lastKeepAlive = curTime;

		///////////////////////////////////////////////////////////////////////
		// make keep and live to the login default user
		// 

		rc = TRC_FAIL; //default, will be changed by CRB_ClientKeepAlive
		try
		{
			ECSCorbaUsersManager_ptr userManager_ptr = GsrGetCRBServant<ECSCorbaUsersManager_ptr>(USERS_MANAGER_SERVANT);
			rc = userManager_ptr->CRB_ClientKeepAlive(ConnectionSettings::Get()->GetUserID());
		}
		BSM_CATCH_ALL_AND_PRINT("KeepAlive is failed. rc=" <<  rc);
		// in case exception TRC_FAIL will be handled by caller

	}	

	return rc;
}


}//namespace bsm
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrKeepAndLive.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrKeepAndLive.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrKeepAndLive.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrKeepAndLive.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrReconnector.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrReconnector.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 14:43:38 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrReconnector.cpp#2:cpp:1
*****************************************************************************
Object:  GsrReconnector.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 15 08:26:30 2010
Task:    46629
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrReconnector.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrReconnector.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrReconnector.cpp#2 sqa yakovt cpp ECSNT 1 46629
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrReconnector.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrReconnector.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrReconnector.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 14:43:38 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrReconnector.cpp#1 %  (%full_filespec: GsrReconnector.cpp#1:cpp:1 %)";
#endif

#include "GsrReconnector.h"
#include "GsrService.h"
#include "GsrConnector.h"
#include "GsrActionCallback.h"
#include "em_foundations/ExitNotification.h"
#include "em_foundations/EmHelper.h"
#include "em_foundations/EmException.h"
#include "BsmCommon/bsm_catch_macro.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"
#include "BsmService/GsrService.h"
#include "BsmService/GsrConnector.h"

#include "libfcengine/SimulationMgr.h"

DIAG_REGISTER_MODULE;

namespace bsm{


//////////////////////////////////////////////////////////////////////////
//
GsrReconnector::GsrReconnector()
: m_FailoverCount(0)
, m_lastUptime(bsm::GetOsSystemTime())
{
	m_FailoverEvent.reset();
}


//////////////////////////////////////////////////////////////////////////
//
void GsrReconnector::Run()
{
	DBG_FNC_ENTER("GsrReconnector::Run");

	ExitNotification exiter;

	while ( !exiter.ExitWasNotified() )
	{
		m_FailoverEvent.wait();

		try
		{
			FailoverProcess();
		}
		BSM_CATCH_ALL_AND_PRINT("Unexpected exception");

		m_FailoverEvent.reset();

	}

}


//////////////////////////////////////////////////////////////////////////
//
void GsrReconnector::StartFailoverProcess()
{
	DBG_FNC_ENTER("GsrReconnector::StartFailoverProcess");

	// in case if fail-over is called frequently then force process to exit
	int nMaxFailoverRetries = bsm::Configuration::Instance()->GetNumber(BSMCFG_FailoverMaxRetry, BSMCFG_FailoverMaxRetry_DEFAULT);

	if( nMaxFailoverRetries < 0 ) //used during debugging to avoid reopen VP
	{
		DIAG_PDEF(DIAG_S, "Debug: FailoverMaxRetry < 0, Failover is dissabled!" );
		return;
	}

	m_FailoverStartedEvent.reset();
	DIAG_PDEF(DIAG_W, "Reconnection process is requested" );
	m_FailoverEvent.post();

	m_FailoverStartedEvent.wait();
	DIAG_PDEF(DIAG_W, "Reconnection process is started" );

}

//////////////////////////////////////////////////////////////////////////
//
void GsrReconnector::StartReconnectionProcess()
{
	DBG_FNC_ENTER("GsrReconnector::StartReconnectionProcess");

	m_FailoverCount = 0; //reset this counter

	m_FailoverStartedEvent.reset();
	DIAG_PDEF(DIAG_L, "Reconnection process is requested" );
	m_FailoverEvent.post();

	m_FailoverStartedEvent.wait();
	DIAG_PDEF(DIAG_L, "Reconnection process is started" );
}

//////////////////////////////////////////////////////////////////////////
//
bool GsrReconnector::IsReconnectionActive() const
{
	return m_FailoverEvent.posted();
}


//////////////////////////////////////////////////////////////////////////
//
void GsrReconnector::FailoverProcess()
{
	DBG_FNC_ENTER("CtmBim_FailoverMgr::FailoverProcess");

	//no updates 
	bsm::GsrUpdateLocker update_lock;

	//no clients 
	SimulationMgr_WriteLocker read;

	m_FailoverStartedEvent.post();

	ExitNotification exiter;

	if( exiter.ExitWasNotified() )
		return; //shutdown in process...

	bool bRestored = false;

	UpdateFailoverConter();

	// in case if fail-over is called frequently then force process to exit
	int nMaxFailoverRetries = bsm::Configuration::Instance()->GetNumber(BSMCFG_FailoverMaxRetry, BSMCFG_FailoverMaxRetry_DEFAULT);

	if( nMaxFailoverRetries >= 0 && m_FailoverCount > nMaxFailoverRetries )
	{
		//notify host server that connection to GSR cannot be reestablished. 
		// it is suggested server will be exited
		GsrService::Instance()->GetGsrActionCallback()->OnUnableToReconect();
		return; 
	}

	GsrService* gsr = GsrService::Instance()->Instance();

	while ( !exiter.ExitWasNotified() )
	{
		// prepare list GSRs to connect. first is me.
		std::vector<std::string> GuiServers_ToCheck = GetGsrNamesToReconnect();

		for( std::vector<std::string>::const_iterator s = GuiServers_ToCheck.begin(); s != GuiServers_ToCheck.end(); ++s )
		{
			if( exiter.ExitWasNotified() )
				break; //shutdown in process...

			std::string cur_gsr_name = *s;

			std::stringstream msg_str;
			msg_str
				<<  "reconnection to GSR '" << cur_gsr_name << "' is started, retry# "
				<< m_FailoverCount;
			DIAG_PDEF(DIAG_L, msg_str.str() );
			std::cout << msg_str.str() << std::endl;

			bRestored = gsr->Reconnect(cur_gsr_name);
			if( !bRestored ) {
				long nRetryDelay = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_ConnectToGsrRetryDelay, BSMCFG_ConnectToGsrRetryDelay_DEFAULT);
				DIAG_PDEF(DIAG_W, "Cannot restore conneciton to GSR, sleep " << nRetryDelay << " seconds" );
				if( exiter.ExitWasNotified(nRetryDelay) )
					break;
			}
			else
			{
				std::string msg_str = (std::string)"Connection to GSR with name " + cur_gsr_name + " is restored";
				DIAG_PDEF(DIAG_L, msg_str );
				std::cout << msg_str << std::endl;
				m_lastUptime = bsm::GetOsSystemTime();

				return; // connection is restored, exiting!
			}

		}//foreach GSR loop

	} //forever while loop
}




//////////////////////////////////////////////////////////////////////////
// increment the fail-over counter,
// in case if process was more than "min uptime" then reset the counter
//
void GsrReconnector::UpdateFailoverConter()
{
	DBG_FNC_ENTER("GsrReconnector::UpdateFailoverConter");

	os_time_period min_uptime = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_FailoverMinUptime, BSMCFG_FailoverMinUptime_DEFAULT);

	os_time_and_date now = bsm::GetOsSystemTime();
	os_time_period diff = now - m_lastUptime;
	if( diff > min_uptime )
	{
		m_FailoverCount = 0; //reset this counter
		DIAG_PDEF(DIAG_W, "Failover counter was reset because uptime "
			<< diff.to_minutes() << " minutes"
			<< " is more than minimum uptime " << min_uptime.to_minutes() << " minutes" )
	}

	++m_FailoverCount;

}


//////////////////////////////////////////////////////////////////////////
// prepare list of GSR to reconnect
//
std::vector<std::string> GsrReconnector::GetGsrNamesToReconnect()
{
	std::string currentGsrName = GsrService::Instance()->GetGsrConnector()->GetGsrName();
	std::vector<std::string> GuiServers_ToCheck;
	GuiServers_ToCheck.push_back(currentGsrName);
	std::string server_names = bsm::Configuration::Instance()->GetString(BSMCFG_BackupGUIServers);
	std::vector<std::string> backupGuiServers;
	if( !server_names.empty() )
	{
		os_tokenizer tokenizer;
		tokenizer.separators(",;");
		backupGuiServers = tokenizer.tokenize(server_names);
	}
	std::copy( backupGuiServers.begin(), backupGuiServers.end(), std::back_inserter(GuiServers_ToCheck) );

	return GuiServers_ToCheck;
}




} //namespace bsm



OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrReconnector.cpp#1:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrReconnector.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrReconnector.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrReconnector.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrReconnector.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrReconnector.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrReconnector.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 14:43:49 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrReconnector.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrReconnector.h#1 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrReconnector.h#1@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrReconnector.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrReconnector.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 14:43:49 2010 %
*
**********************************************************************/
#ifndef _1_GsrReconnector_h_H
#define _1_GsrReconnector_h_H

#include "BsmService.h"
#include "BsmCommon/WorkingThread.h"

namespace bsm {

class GsrReconnector : public WorkingThread
{
public:
	GsrReconnector();

	void StartFailoverProcess();
	void StartReconnectionProcess();
	bool IsReconnectionActive() const;

protected:
	virtual void Run(); //WorkingThread implementation

	void FailoverProcess();
	void UpdateFailoverConter();
	std::vector<std::string> GetGsrNamesToReconnect();


private:
	os_event_semaphore		m_FailoverEvent;
	os_event_semaphore		m_FailoverStartedEvent;

	int						m_FailoverCount;
	os_time_and_date		m_lastUptime;
	os_critical_section		m_Locker;

};

}

#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrReconnector.h#1:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrReconnector.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrReconnector.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrReconnector.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrReconnector.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrService.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrService.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Mar 17 12:51:59 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrService.cpp#2:cpp:1
*****************************************************************************
Object:  GsrService.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 15:27:06 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrService.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrService.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrService.cpp#2 sqa yakovt cpp ECSNT 1 46511
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrService.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrService.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrService.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 15:27:06 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrService.cpp#2 %  (%full_filespec: GsrService.cpp#2:cpp:1 %)";
#endif

#include "GsrService.h"
#include "GsrCorbaCallbackCommandMgr.h"
#include "GsrCorbaCallbackCommand.h"
#include "GsrCorbaCallbackCommandMgr.h"
#include "GsrFieldMapper.h"
#include "GsrDataCenterMgr.h"
#include "GsrKeepAndLive.h"
#include "GsrActionCallback.h"
#include "GsrServiceStartupParams.h"
#include "GsrReconnector.h"

#include "em_foundations/EmHelper.h"
#include "em_client_common/CommonDefs.h"
#include "em_client_common/LoginHandler.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "libfcengine/Simulator.h"
#include "libfcengine/SimulationMgr.h"
#include "BsmCommon/bsm_catch_macro.h"

DIAG_REGISTER_MODULE;


namespace bsm{
EM_SINGLETON_IMPLEMENTATION( GsrService );



void LoadNetRecomendedSet::Add(const std::string& dc_name)
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	if( dc_name != GsrDataCenterMgr::AllCtmNamesStr )
		m_LoadNetRecomendeds.insert(dc_name);

}

void LoadNetRecomendedSet::Remove(const std::vector<std::string>& dc_names)
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	for( size_t i=0; i<dc_names.size(); ++i)
	{
		if( m_LoadNetRecomendeds.count(dc_names[i]) > 1)
			m_LoadNetRecomendeds.erase(dc_names[i]);
	}

}
void LoadNetRecomendedSet::RemoveAll()
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	m_LoadNetRecomendeds.clear();
}

bool LoadNetRecomendedSet::Empty() const
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	return 	m_LoadNetRecomendeds.empty();
}


//////////////////////////////////////////////////////////////////////////
////////////////////////// GsrService ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//
GsrService::GsrService()
: m_GsrConnector( new GsrConnector )
, m_GsrViewPoint( new GsrViewPoint )
, m_GsrCorbaCallbackCommandMgr(new GsrCorbaCallbackCommandMgr)
, m_GsrFieldMapper( new GsrFieldMapper )
, m_GsrDataCenterMgr( new GsrDataCenterMgr )
, m_GsrKeepAndLive( new	GsrKeepAndLive )
, m_GsrActionCallback(NULL)
, m_NewDayRunning(true) //at the VP will be opened soon... do nothing until the VP will be not opened.
, m_GsrReconnector( new GsrReconnector )

{
	m_JobRepositoryUpdateLock.SetContextName("JobRepositoryUpdateLock");
}

GsrService::~GsrService()
{
	delete m_GsrConnector;
	delete m_GsrViewPoint;
	delete m_GsrCorbaCallbackCommandMgr;
	delete m_GsrFieldMapper;
	delete m_GsrDataCenterMgr;
	delete m_GsrKeepAndLive;
	delete m_GsrReconnector;
}

//////////////////////////////////////////////////////////////////////////
//
void	GsrService::SetStartupParams(const GsrServiceStartupParams& params)
{
	m_Simulator = params.m_Simulator;
	m_GsrDataCenterMgr->SetSimulator(m_Simulator);
	m_GsrActionCallback = params.m_GsrActionCallback;
	m_GsrConnector->SetGsrName( params.m_GsrServerName );
	m_GsrConnector->SetUserName(params.m_UserName);

}


//////////////////////////////////////////////////////////////////////////
//
int GsrService::startup(int argc, char* argv[])
{
	DBG_FNC_ENTER("GsrService::startup");

	m_GsrFieldMapper->InitJobFields();

	// start all working thread...
	m_GsrCorbaCallbackCommandMgr->Start();
	m_GsrKeepAndLive->Start();
	m_GsrReconnector->Start();

	m_GsrDataCenterMgr->ReloadGlobalCond();

	bool result = m_GsrConnector->LoginToGsr();
	if( result == false )
	{
		DIAG_PDEF(DIAG_W, "start reconnection process, ViewPoint will be open in the process");
		return 0;
	}

	std::cout << "connected to GUI Server " << m_GsrConnector->GetGsrName() << std::endl;
	DIAG_PDEF(DIAG_L, "connected to GUI Server " << m_GsrConnector->GetGsrName() );

	m_Uid = m_GsrConnector->GetUid();

	DIAG_PDEF(DIAG_I, "oppening view point...");
	m_GsrViewPoint->Open();

	return 0;
}

int GsrService::shutdown()
{
	return 0;
}

const std::string& GsrService::GetUid() const 
{ 
	return m_Uid; 
}


void GsrService::AddUpdate( GsrCorbaCallbackCommand* upd)
{
	DBG_FNC_ENTER("GsrService::AddUpdate");

	m_GsrCorbaCallbackCommandMgr->AddCommand(upd);
}

//////////////////////////////////////////////////////////////////////////
// close VP, clear all queues, connect again. the latest set GSR server is used.
//
bool GsrService::Reconnect(const std::string& gsr_name)
{
	DBG_FNC_ENTER("GsrService::Reconnect");

	m_GsrConnector->SetGsrName(gsr_name); //current GSR

	m_GsrConnector->LogoutFromGsr();

	DIAG_PDEF(DIAG_I, "clear all that we can...")
	m_GsrCorbaCallbackCommandMgr->ClearQueue(); // clear all input queue
	m_GsrDataCenterMgr->Clear();				// clear all simulator
	m_GsrActionCallback->OnReconectStarted();

	DIAG_PDEF(DIAG_I, "now login in GSR...")
	bool result = m_GsrConnector->LoginToGsr();
	if( result == false )
	{
		DIAG_PDEF(DIAG_I, "cannot login, reconnecter will be handle it...")
		return false; //
	}

	m_Uid = m_GsrConnector->GetUid();
	DIAG_PDEF(DIAG_I, "oppening view point...");
	m_GsrViewPoint->Open();

	return true;
}


//////////////////////////////////////////////////////////////////////////
//
void	GsrService::StartFailover()
{
	DBG_FNC_ENTER("GsrService::StartFailover");

	m_GsrReconnector->StartFailoverProcess();
}

//////////////////////////////////////////////////////////////////////////
//
void	GsrService::StartReconnection()
{
	DBG_FNC_ENTER("GsrService::StartReconnection");

	m_GsrReconnector->StartReconnectionProcess();
}


void	GsrService::ApplyChanges(const CSimulator::DcsJobUpdatesVec& DcUpdsVec)
{
	DBG_FNC_ENTER("GsrService::ApplyChanges");

	m_Simulator->ApplyGraphChanges(DcUpdsVec);

}


//////////////////////////////////////////////////////////////////////////
//
void GsrService::RunDataCenterNewDay(const std::vector<std::string>& ctms)
{
	DBG_FNC_ENTER("GsrService::RunDataCenterNewDay");

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayBeginStart(ctms);

	m_NewDayRunning = true;
	m_LoadNetRecomendedSet.Remove(ctms);

	m_GsrDataCenterMgr->RunDataCenterNewDay(ctms);

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayBeginEnd(ctms);


}


void GsrService::RunDataCenterNewDayEnd()
{
	m_GsrDataCenterMgr->RunDataCenterNewDayEnd();

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayEnd();

	//unlocks all GUI requests -- all changes are being performed
	m_NewDayRunning = false;
}

//////////////////////////////////////////////////////////////////////////
//
bool GsrService::IsNewDayRunning() const 
{ 
	return m_NewDayRunning || !m_LoadNetRecomendedSet.Empty();
}

bool GsrService::IsReconnectionActive() const
{
	return m_GsrReconnector->IsReconnectionActive();
}


} //namespace bsm
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrService.cpp#2:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrService.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrService.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrService.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrService.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrService.cpp#1           GsrService.cpp#2          
------------------------- -------------------------- --------------------------
create_time               Wed Mar 17 12:51:59 2010   Sun Apr 11 15:27:06 2010  
modify_time               Mon Apr 12 11:58:48 2010   Wed Apr 14 17:02:58 2010  
version                   1                          2                         
source_create_time        Wed Mar 17 12:52:00 2010   Sun Apr 11 15:27:08 2010  
source_modify_time        Thu Apr 08 14:50:09 2010   Wed Apr 14 15:23:48 2010  

===============================================================================
Associated tasks differs:

GsrService.cpp#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrService.cpp#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Wed Mar 17 12:51:59 2010 %
---
> *	%date_created:	Sun Apr 11 15:27:06 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: GsrService.cpp#1 %  (%full_filespec: GsrService.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: GsrService.cpp#2 %  (%full_filespec: GsrService.cpp#2:cpp:1 %)";
26a27
> #include "GsrReconnector.h"
34a36
> #include "BsmCommon/bsm_catch_macro.h"
87a90
> , m_GsrReconnector( new GsrReconnector )
100a104
> 	delete m_GsrReconnector;
123c127,128
< 	
---
> 
> 	// start all working thread...
125d129
< 	
126a131
> 	m_GsrReconnector->Start();
130c135
< 	bool result = m_GsrConnector->LoginToGsr(m_Uid);
---
> 	bool result = m_GsrConnector->LoginToGsr();
136a142,146
> 	std::cout << "connected to GUI Server " << m_GsrConnector->GetGsrName() << std::endl;
> 	DIAG_PDEF(DIAG_L, "connected to GUI Server " << m_GsrConnector->GetGsrName() );
> 
> 	m_Uid = m_GsrConnector->GetUid();
> 
155a166,167
> 	DBG_FNC_ENTER("GsrService::AddUpdate");
> 
159,160c171,174
< 
< void	GsrService::Reconnect()
---
> //////////////////////////////////////////////////////////////////////////
> // close VP, clear all queues, connect again. the latest set GSR server is used.
> //
> bool GsrService::Reconnect(const std::string& gsr_name)
162c176,193
< 	//TODOGSR: implement Reconnect
---
> 	DBG_FNC_ENTER("GsrService::Reconnect");
> 
> 	m_GsrConnector->SetGsrName(gsr_name); //current GSR
> 
> 	m_GsrConnector->LogoutFromGsr();
> 
> 	DIAG_PDEF(DIAG_I, "clear all that we can...")
> 	m_GsrCorbaCallbackCommandMgr->ClearQueue(); // clear all input queue
> 	m_GsrDataCenterMgr->Clear();				// clear all simulator
> 	m_GsrActionCallback->OnReconectStarted();
> 
> 	DIAG_PDEF(DIAG_I, "now login in GSR...")
> 	bool result = m_GsrConnector->LoginToGsr();
> 	if( result == false )
> 	{
> 		DIAG_PDEF(DIAG_I, "cannot login, reconnecter will be handle it...")
> 		return false; //
> 	}
163a195,199
> 	m_Uid = m_GsrConnector->GetUid();
> 	DIAG_PDEF(DIAG_I, "oppening view point...");
> 	m_GsrViewPoint->Open();
> 
> 	return true;
165a202,204
> 
> //////////////////////////////////////////////////////////////////////////
> //
167a207
> 	DBG_FNC_ENTER("GsrService::StartFailover");
169c209,210
< 	//TODOGSR: implement Failover
---
> 	m_GsrReconnector->StartFailoverProcess();
> }
170a212,218
> //////////////////////////////////////////////////////////////////////////
> //
> void	GsrService::StartReconnection()
> {
> 	DBG_FNC_ENTER("GsrService::StartReconnection");
> 
> 	m_GsrReconnector->StartReconnectionProcess();
173c221,222
< void	GsrService::ApplyChanges()
---
> 
> void	GsrService::ApplyChanges(const CSimulator::DcsJobUpdatesVec& DcUpdsVec)
175c224,226
< 	//TODOGSR: apply pending updates
---
> 	DBG_FNC_ENTER("GsrService::ApplyChanges");
> 
> 	m_Simulator->ApplyGraphChanges(DcUpdsVec);
219c270
< bool GsrService::IsReconnectRunning() const
---
> bool GsrService::IsReconnectionActive() const
221c272
< 	return false; //TODOGSR: return true when reconnection is active
---
> 	return m_GsrReconnector->IsReconnectionActive();

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Wed Mar 17 12:51:59 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:10 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:47 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 15:27:07 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:22 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:58 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrService.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		GsrService.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Mar 17 12:51:59 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: GsrService.cpp#1 %  (%full_filespec: GsrService.cpp#1:cpp:1 %)";
#endif

#include "GsrService.h"
#include "GsrCorbaCallbackCommandMgr.h"
#include "GsrCorbaCallbackCommand.h"
#include "GsrCorbaCallbackCommandMgr.h"
#include "GsrFieldMapper.h"
#include "GsrDataCenterMgr.h"
#include "GsrKeepAndLive.h"
#include "GsrActionCallback.h"
#include "GsrServiceStartupParams.h"

#include "em_foundations/EmHelper.h"
#include "em_client_common/CommonDefs.h"
#include "em_client_common/LoginHandler.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "libfcengine/Simulator.h"
#include "libfcengine/SimulationMgr.h"

DIAG_REGISTER_MODULE;


namespace bsm{
EM_SINGLETON_IMPLEMENTATION( GsrService );



void LoadNetRecomendedSet::Add(const std::string& dc_name)
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	if( dc_name != GsrDataCenterMgr::AllCtmNamesStr )
		m_LoadNetRecomendeds.insert(dc_name);

}

void LoadNetRecomendedSet::Remove(const std::vector<std::string>& dc_names)
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	for( size_t i=0; i<dc_names.size(); ++i)
	{
		if( m_LoadNetRecomendeds.count(dc_names[i]) > 1)
			m_LoadNetRecomendeds.erase(dc_names[i]);
	}

}
void LoadNetRecomendedSet::RemoveAll()
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	m_LoadNetRecomendeds.clear();
}

bool LoadNetRecomendedSet::Empty() const
{
	ConstSemLock<os_critical_section> guard(m_LoadNetRecomendedLock);
	return 	m_LoadNetRecomendeds.empty();
}


//////////////////////////////////////////////////////////////////////////
////////////////////////// GsrService ////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//
GsrService::GsrService()
: m_GsrConnector( new GsrConnector )
, m_GsrViewPoint( new GsrViewPoint )
, m_GsrCorbaCallbackCommandMgr(new GsrCorbaCallbackCommandMgr)
, m_GsrFieldMapper( new GsrFieldMapper )
, m_GsrDataCenterMgr( new GsrDataCenterMgr )
, m_GsrKeepAndLive( new	GsrKeepAndLive )
, m_GsrActionCallback(NULL)
, m_NewDayRunning(true) //at the VP will be opened soon... do nothing until the VP will be not opened.

{
	m_JobRepositoryUpdateLock.SetContextName("JobRepositoryUpdateLock");
}

GsrService::~GsrService()
{
	delete m_GsrConnector;
	delete m_GsrViewPoint;
	delete m_GsrCorbaCallbackCommandMgr;
	delete m_GsrFieldMapper;
	delete m_GsrDataCenterMgr;
	delete m_GsrKeepAndLive;
}

//////////////////////////////////////////////////////////////////////////
//
void	GsrService::SetStartupParams(const GsrServiceStartupParams& params)
{
	m_Simulator = params.m_Simulator;
	m_GsrDataCenterMgr->SetSimulator(m_Simulator);
	m_GsrActionCallback = params.m_GsrActionCallback;
	m_GsrConnector->SetGsrName( params.m_GsrServerName );
	m_GsrConnector->SetUserName(params.m_UserName);

}


//////////////////////////////////////////////////////////////////////////
//
int GsrService::startup(int argc, char* argv[])
{
	DBG_FNC_ENTER("GsrService::startup");

	m_GsrFieldMapper->InitJobFields();
	
	m_GsrCorbaCallbackCommandMgr->Start();
	
	m_GsrKeepAndLive->Start();

	m_GsrDataCenterMgr->ReloadGlobalCond();

	bool result = m_GsrConnector->LoginToGsr(m_Uid);
	if( result == false )
	{
		DIAG_PDEF(DIAG_W, "start reconnection process, ViewPoint will be open in the process");
		return 0;
	}

	DIAG_PDEF(DIAG_I, "oppening view point...");
	m_GsrViewPoint->Open();

	return 0;
}

int GsrService::shutdown()
{
	return 0;
}

const std::string& GsrService::GetUid() const 
{ 
	return m_Uid; 
}


void GsrService::AddUpdate( GsrCorbaCallbackCommand* upd)
{
	m_GsrCorbaCallbackCommandMgr->AddCommand(upd);
}


void	GsrService::Reconnect()
{
	//TODOGSR: implement Reconnect

}

void	GsrService::StartFailover()
{

	//TODOGSR: implement Failover

}

void	GsrService::ApplyChanges()
{
	//TODOGSR: apply pending updates

}


//////////////////////////////////////////////////////////////////////////
//
void GsrService::RunDataCenterNewDay(const std::vector<std::string>& ctms)
{
	DBG_FNC_ENTER("GsrService::RunDataCenterNewDay");

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayBeginStart(ctms);

	m_NewDayRunning = true;
	m_LoadNetRecomendedSet.Remove(ctms);

	m_GsrDataCenterMgr->RunDataCenterNewDay(ctms);

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayBeginEnd(ctms);


}


void GsrService::RunDataCenterNewDayEnd()
{
	m_GsrDataCenterMgr->RunDataCenterNewDayEnd();

	if( m_GsrActionCallback != NULL )
		m_GsrActionCallback->OnDataCenterNewDayEnd();

	//unlocks all GUI requests -- all changes are being performed
	m_NewDayRunning = false;
}

//////////////////////////////////////////////////////////////////////////
//
bool GsrService::IsNewDayRunning() const 
{ 
	return m_NewDayRunning || !m_LoadNetRecomendedSet.Empty();
}

bool GsrService::IsReconnectRunning() const
{
	return false; //TODOGSR: return true when reconnection is active
}


} //namespace bsm
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrService.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrService.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrService.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrService.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history GsrService.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  GsrService.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Wed Mar 17 12:51:52 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	GsrService.h#2:INC:1
*****************************************************************************
Object:  GsrService.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 08 23:29:43 2010
Task:    46495
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrService.h#1:INC:1
Successors:
	GsrService.h#3:INC:1
*****************************************************************************
Object:  GsrService.h#3 (INC:1)
Owner:   yakovt
State:   sqa
Created: Mon Apr 12 13:03:48 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	GsrService.h#2:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse GsrService.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
GsrService.h#3 sqa yakovt INC ECSNT 1 46511
	ECSNT\BsmService\GsrService.h#3@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmService\GsrService.h#3@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrService.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrService.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Mon Apr 12 13:03:48 2010 %
*
**********************************************************************/
#ifndef _1_GsrService_h_H
#define _1_GsrService_h_H


#include "BsmService.h"
#include "GsrViewPoint.h"

#include "BsmCommon/ApplicationService.h"
#include "BsmService/GsrConnector.h"
#include "BsmCommon/Locker.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "em_foundations/em_singleton.h"
#include "em_foundations/EmException.h"
#include "libfcengine/Simulator.h"



class CSimulator;

namespace bsm {

	class GsrUpdateLocker;
	class GsrCorbaCallbackCommandMgr;
	class GsrCorbaCallbackCommand;
	class GsrConnector;
	class GsrViewPoint;
	class GsrFieldMapper;
	class GsrDataCenterMgr;
	class GsrKeepAndLive;
	class GsrActionCallback;
	class GsrServiceStartupParams;
	class GsrReconnector;


	class LoadNetRecomendedSet
	{
	public:
		void Add(const std::string& dc_name);
		void Remove(const std::vector<std::string>& dc_names);
		void RemoveAll();
		bool Empty() const;

	private:
		os_critical_section			m_LoadNetRecomendedLock;
		std::set<std::string>		m_LoadNetRecomendeds;
	};

	class BSMSERVICE_API GsrService : public ApplicationService
	{
		EM_SINGLETON( GsrService );
		~GsrService();

	public:
		//application service support
		virtual std::string name() const	{ return "GUI Server Service"; }
		virtual int startup(int argc, char* argv[]);
		virtual int shutdown();

		bool	Reconnect(const std::string& gsr_name);
		bool	IsReconnectionActive() const;
		void	StartFailover();
		void	StartReconnection();
		void	ApplyChanges(const CSimulator::DcsJobUpdatesVec& DcUpdsVec);
		bool	IsNewDayRunning() const; //return true if a ND processing just now or awaiting 

		const std::string& GetUid() const;

		void	SetStartupParams(const GsrServiceStartupParams& params);


	//protected: 
		CSimulator*	GetSimulator() { return m_Simulator; }
		GsrActionCallback*	GetGsrActionCallback() { return m_GsrActionCallback; }
		void AddUpdate(GsrCorbaCallbackCommand* upd); //for update command
		const GsrFieldMapper* GetFieldMapper() const { return m_GsrFieldMapper; }
		void RunDataCenterNewDay(const std::vector<std::string> & ctms);
		void RunDataCenterNewDayEnd();
		void OnLoadNetRecomended(const std::string& dc_name) { m_LoadNetRecomendedSet.Add(dc_name); }
		void RequestRefresh() { m_GsrViewPoint->RequestRefresh(true); }
		GsrConnector* GetGsrConnector() { return m_GsrConnector; }



	protected:
		bool LoginToGsr();
		bool CheckCurrentGsr();

	protected: 		
		GsrService();

	private:
		CSimulator*					m_Simulator;

		GsrConnector*				m_GsrConnector;
		GsrViewPoint*				m_GsrViewPoint;
		GsrCorbaCallbackCommandMgr*	m_GsrCorbaCallbackCommandMgr;
		GsrFieldMapper*				m_GsrFieldMapper;
		GsrDataCenterMgr*			m_GsrDataCenterMgr;
		GsrKeepAndLive*				m_GsrKeepAndLive;
		GsrActionCallback*			m_GsrActionCallback;
		GsrReconnector*				m_GsrReconnector;
	

		std::string m_Uid;

		friend class GsrUpdateLocker;
		bsm::RwOwnedMutex m_JobRepositoryUpdateLock;

		LoadNetRecomendedSet		m_LoadNetRecomendedSet;
		bool						m_NewDayRunning;
	};

//
// lock the job collection during its updating 
// synchronize access between the updates to Job Repository and Engine
//
class GsrUpdateLocker : public bsm::RwWriteLock
{
public:
	GsrUpdateLocker()
		: RwWriteLock( GsrService::Instance()->m_JobRepositoryUpdateLock)
	{
	}

	// for debug
	static std::string ToString()
	{
		return GsrService::Instance()->m_JobRepositoryUpdateLock.ToString();
	}

	static bool IsLocked() 
	{
		//cannot be used iswritelockedByMe because the lock is taken by monitor thread which spawned a working threads
		return GsrService::Instance()->m_JobRepositoryUpdateLock.iswritelocked();
	}
};


//////////////////////////////////////////////////////////////////////////
//if TRC is null then throw exception in case failure, else only return result
//
template <class CRB> CRB GsrGetCRBServant(const char * objName, TRC* return_rc = 0)
{
	SERVER_ID eContext = E_GSR;

	CRB pCRB = 0;
	TRC rc = GetCRBServant(objName, pCRB, eContext);
	if( rc != TRC_SUCCESS )
	{
		GsrService::Instance()->StartFailover();
		if( return_rc != NULL )
			*return_rc = rc;
		else
			throw EmException( "Cannot get CORBA connection for " + std::string(objName), __FILE__,__LINE__);
	}
	else //success
	{
		if( return_rc != NULL )
			*return_rc = TRC_SUCCESS;
	}

	return pCRB;
}


} //namespace bsm


#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object GsrService.h#3:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrService.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmService\GsrService.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmService\GsrService.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  GsrService.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            GsrService.h#2             GsrService.h#3            
------------------------- -------------------------- --------------------------
create_time               Thu Apr 08 23:29:43 2010   Mon Apr 12 13:03:48 2010  
modify_time               Mon Apr 12 11:58:49 2010   Wed Apr 14 17:02:58 2010  
version                   2                          3                         
source_create_time        Thu Apr 08 23:29:42 2010   Mon Apr 12 13:03:50 2010  
source_modify_time        Thu Apr 08 23:30:18 2010   Wed Apr 14 14:24:16 2010  

===============================================================================
Associated tasks differs:

GsrService.h#2
46495: Fix for Task 46486: Fix for Task 46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

GsrService.h#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Apr 08 23:29:43 2010 %
---
> *	%date_created:	Mon Apr 12 13:03:48 2010 %
25a26
> #include "libfcengine/Simulator.h"
42a44
> 	class GsrReconnector;
69,70c71,72
< 		void	Reconnect();
< 		bool	IsReconnectRunning() const;
---
> 		bool	Reconnect(const std::string& gsr_name);
> 		bool	IsReconnectionActive() const;
72c74,75
< 		void	ApplyChanges();
---
> 		void	StartReconnection();
> 		void	ApplyChanges(const CSimulator::DcsJobUpdatesVec& DcUpdsVec);
78a82
> 
87a92,94
> 		GsrConnector* GetGsrConnector() { return m_GsrConnector; }
> 
> 
97d103
< 		std::string					m_GsrName;
106a113
> 		GsrReconnector*				m_GsrReconnector;

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Apr  8 23:29:43 2010: Status set to 'working' by yakovt in role developer
< Fri Apr  9 14:16:23 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:58:48 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Mon Apr 12 13:03:49 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:23 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:02:58 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat GsrService.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	GsrService.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Apr 08 23:29:43 2010 %
*
**********************************************************************/
#ifndef _1_GsrService_h_H
#define _1_GsrService_h_H


#include "BsmService.h"
#include "GsrViewPoint.h"

#include "BsmCommon/ApplicationService.h"
#include "BsmService/GsrConnector.h"
#include "BsmCommon/Locker.h"
#include "em_client_common/CorbaServerPackManager.h"
#include "em_foundations/em_singleton.h"
#include "em_foundations/EmException.h"



class CSimulator;

namespace bsm {

	class GsrUpdateLocker;
	class GsrCorbaCallbackCommandMgr;
	class GsrCorbaCallbackCommand;
	class GsrConnector;
	class GsrViewPoint;
	class GsrFieldMapper;
	class GsrDataCenterMgr;
	class GsrKeepAndLive;
	class GsrActionCallback;
	class GsrServiceStartupParams;


	class LoadNetRecomendedSet
	{
	public:
		void Add(const std::string& dc_name);
		void Remove(const std::vector<std::string>& dc_names);
		void RemoveAll();
		bool Empty() const;

	private:
		os_critical_section			m_LoadNetRecomendedLock;
		std::set<std::string>		m_LoadNetRecomendeds;
	};

	class BSMSERVICE_API GsrService : public ApplicationService
	{
		EM_SINGLETON( GsrService );
		~GsrService();

	public:
		//application service support
		virtual std::string name() const	{ return "GUI Server Service"; }
		virtual int startup(int argc, char* argv[]);
		virtual int shutdown();

		void	Reconnect();
		bool	IsReconnectRunning() const;
		void	StartFailover();
		void	ApplyChanges();
		bool	IsNewDayRunning() const; //return true if a ND processing just now or awaiting 

		const std::string& GetUid() const;

		void	SetStartupParams(const GsrServiceStartupParams& params);

	//protected: 
		CSimulator*	GetSimulator() { return m_Simulator; }
		GsrActionCallback*	GetGsrActionCallback() { return m_GsrActionCallback; }
		void AddUpdate(GsrCorbaCallbackCommand* upd); //for update command
		const GsrFieldMapper* GetFieldMapper() const { return m_GsrFieldMapper; }
		void RunDataCenterNewDay(const std::vector<std::string> & ctms);
		void RunDataCenterNewDayEnd();
		void OnLoadNetRecomended(const std::string& dc_name) { m_LoadNetRecomendedSet.Add(dc_name); }
		void RequestRefresh() { m_GsrViewPoint->RequestRefresh(true); }

	protected:
		bool LoginToGsr();
		bool CheckCurrentGsr();

	protected: 		
		GsrService();

	private:
		std::string					m_GsrName;
		CSimulator*					m_Simulator;

		GsrConnector*				m_GsrConnector;
		GsrViewPoint*				m_GsrViewPoint;
		GsrCorbaCallbackCommandMgr*	m_GsrCorbaCallbackCommandMgr;
		GsrFieldMapper*				m_GsrFieldMapper;
		GsrDataCenterMgr*			m_GsrDataCenterMgr;
		GsrKeepAndLive*				m_GsrKeepAndLive;
		GsrActionCallback*			m_GsrActionCallback;
	

		std::string m_Uid;

		friend class GsrUpdateLocker;
		bsm::RwOwnedMutex m_JobRepositoryUpdateLock;

		LoadNetRecomendedSet		m_LoadNetRecomendedSet;
		bool						m_NewDayRunning;
	};

//
// lock the job collection during its updating 
// synchronize access between the updates to Job Repository and Engine
//
class GsrUpdateLocker : public bsm::RwWriteLock
{
public:
	GsrUpdateLocker()
		: RwWriteLock( GsrService::Instance()->m_JobRepositoryUpdateLock)
	{
	}

	// for debug
	static std::string ToString()
	{
		return GsrService::Instance()->m_JobRepositoryUpdateLock.ToString();
	}

	static bool IsLocked() 
	{
		//cannot be used iswritelockedByMe because the lock is taken by monitor thread which spawned a working threads
		return GsrService::Instance()->m_JobRepositoryUpdateLock.iswritelocked();
	}
};


//////////////////////////////////////////////////////////////////////////
//if TRC is null then throw exception in case failure, else only return result
//
template <class CRB> CRB GsrGetCRBServant(const char * objName, TRC* return_rc = 0)
{
	SERVER_ID eContext = E_GSR;

	CRB pCRB = 0;
	TRC rc = GetCRBServant(objName, pCRB, eContext);
	if( rc != TRC_SUCCESS )
	{
		GsrService::Instance()->StartFailover();
		if( return_rc != NULL )
			*return_rc = rc;
		else
			throw EmException( "Cannot get CORBA connection for " + std::string(objName), __FILE__,__LINE__);
	}
	else //success
	{
		if( return_rc != NULL )
			*return_rc = TRC_SUCCESS;
	}

	return pCRB;
}


} //namespace bsm


#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrService.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\BsmService\GsrService.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\GsrService.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\GsrService.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history Sleeper.cpp#1:cpp:4
Execute (executor.py:83): OUTPUT_BEGIN
Object:  Sleeper.cpp#1 (cpp:4)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 10:25:15 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse Sleeper.cpp#1:cpp:4
Execute (executor.py:83): OUTPUT_BEGIN
Sleeper.cpp#1 sqa yakovt cpp ECSNT 4 46511
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\Sleeper.cpp#1@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Sleeper.cpp#1:cpp:4
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		Sleeper.cpp %
*	Instance:		4
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 10:25:15 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: Sleeper.cpp#1 %  (%full_filespec: Sleeper.cpp#1:cpp:4 %)";
#endif


DIAG_REGISTER_MODULE;
#include "Sleeper.h"
#include "em_foundations/EmException.h"
#include "em_foundations/EmHelper.h"
#include "em_foundations/ExitNotification.h"

namespace bsm {

//////////////////////////////////////////////////////////////////////////
// construction
//
Sleeper::Sleeper()
: m_nSleepInterval(0)
{
}

Sleeper::~Sleeper()
{
}


//////////////////////////////////////////////////////////////////////////
//
void Sleeper::Sleep(size_t sec, ExitNotification* exiter )
{
	DBG_FNC_ENTER("Sleeper::Sleep");

	DIAG_PDEF(DIAG_I, "Sleep " << sec << "seconds" );

	m_nSleepInterval = sec;
	while ( true )
	{
		if( exiter != NULL && exiter->ExitWasNotified() )
		{
			DIAG_PDEF(DIAG_I, "sleeper was exited");
			break;
		}

		{
			os_sem_lock<os_critical_section> guard(m_DataLock);
			if( m_nSleepInterval <= 0 )
				break;
			--m_nSleepInterval;
		}
		os_this_thread::sleep(1);

	}
}

//////////////////////////////////////////////////////////////////////////
//
void Sleeper::Reset(size_t sec)
{
	DBG_FNC_ENTER("Sleeper::Sleep");

	os_sem_lock<os_critical_section> guard(m_DataLock);
	DIAG_PDEF(DIAG_I, "Sleep reset to " << sec << "seconds" );
	m_nSleepInterval = sec;
}



} //namespace bsm
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object Sleeper.cpp#1:cpp:4 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Sleeper.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Sleeper.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\Sleeper.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  Sleeper.cpp#1:cpp:4
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history Sleeper.h#1:INC:3
Execute (executor.py:83): OUTPUT_BEGIN
Object:  Sleeper.h#1 (INC:3)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 10:25:08 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse Sleeper.h#1:INC:3
Execute (executor.py:83): OUTPUT_BEGIN
Sleeper.h#1 sqa yakovt INC ECSNT 3 46511
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#700fp1yakovt-win:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#700FP1_hani_win:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#700FP1_olga_windows:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#eyalWin700_fp1:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\BsmCommon\Sleeper.h#1@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat Sleeper.h#1:INC:3
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	Sleeper.h %
*	Instance:		3
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 14 10:25:08 2010 %
*
**********************************************************************/
#ifndef _3_Sleeper_h_H
#define _3_Sleeper_h_H

class ExitNotification;

namespace bsm {

#include "BsmCommon/BsmCommon.h"

	class BSM_COMMON_API Sleeper 
	{

	public:
		Sleeper();
		virtual ~Sleeper();

		void Sleep(size_t sec, ExitNotification* exiter = NULL );
		void Reset(size_t sec);

	protected:

	private: 
		os_critical_section m_DataLock;
		mutable size_t				m_nSleepInterval;

	};


} //namespace bsm


#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object Sleeper.h#1:INC:3 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Sleeper.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\BsmCommon\Sleeper.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\BsmCommon\Sleeper.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  Sleeper.h#1:INC:3
Execute (executor.py:83): OUTPUT_BEGIN
OUTPUT_END

Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsGsrActions.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsGsrActions.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 08 09:03:27 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsGsrActions.cpp#2:cpp:1
*****************************************************************************
Object:  SlsGsrActions.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 16:19:26 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsGsrActions.cpp#1:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsGsrActions.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsGsrActions.cpp#2 sqa yakovt cpp ECSNT 1 46511
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsGsrActions.cpp#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsGsrActions.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		SlsGsrActions.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 16:19:26 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: SlsGsrActions.cpp#2 %  (%full_filespec: SlsGsrActions.cpp#2:cpp:1 %)";
#endif

#include "em_foundations/EmException.h"
#include "SlsGsrActions.h"
#include "SlsServerEngine.h"


DIAG_REGISTER_MODULE;


namespace sls {


SlsGsrActions::SlsGsrActions()
{
	// Construct

}

/*virtual*/ SlsGsrActions::~SlsGsrActions()
{
}


void SlsGsrActions::OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names )
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBeginEnd");
	std::cout << "TODO: OnDataCenterNewDayBeginEnd\n";

}

void SlsGsrActions::OnDataCenterNewDayEnd()
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBegin");
	std::cout << "TODO: OnDataCenterNewDayEnd\n";

	SlsServerEngine::Instance()->ForceCalculation();

}

void SlsGsrActions::OnReconectStarted()
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBegin");
	std::cout << "TODO: OnReconectStarted\n";

}


void SlsGsrActions::OnUnableToReconect()
{
	DBG_FNC_ENTER("SlsGsrActions::OnUnableToReconect");
	SlsServerEngine::Instance()->Shutdown();
}


} //namespace sls 

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsGsrActions.cpp#2:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsGsrActions.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsGsrActions.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsGsrActions.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsGsrActions.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsGsrActions.cpp#1        SlsGsrActions.cpp#2       
------------------------- -------------------------- --------------------------
create_time               Thu Apr 08 09:03:27 2010   Sun Apr 11 16:19:26 2010  
modify_time               Mon Apr 12 11:59:24 2010   Wed Apr 14 17:03:00 2010  
version                   1                          2                         
source_create_time        Thu Apr 08 09:03:29 2010   Sun Apr 11 16:19:27 2010  
source_modify_time        Thu Apr 08 14:51:03 2010   Wed Apr 14 15:44:30 2010  

===============================================================================
Associated tasks differs:

SlsGsrActions.cpp#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsGsrActions.cpp#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Apr 08 09:03:27 2010 %
---
> *	%date_created:	Sun Apr 11 16:19:26 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: SlsGsrActions.cpp#1 %  (%full_filespec: SlsGsrActions.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: SlsGsrActions.cpp#2 %  (%full_filespec: SlsGsrActions.cpp#2:cpp:1 %)";
19a20
> #include "SlsServerEngine.h"
42c43
< 	std::cout << "OnDataCenterNewDayBeginEnd\n";
---
> 	std::cout << "TODO: OnDataCenterNewDayBeginEnd\n";
49c50,52
< 	std::cout << "OnDataCenterNewDayEnd\n";
---
> 	std::cout << "TODO: OnDataCenterNewDayEnd\n";
> 
> 	SlsServerEngine::Instance()->ForceCalculation();
56c59,61
< 	std::cout << "OnReconectStarted\n";
---
> 	std::cout << "TODO: OnReconectStarted\n";
> 
> }
57a63,67
> 
> void SlsGsrActions::OnUnableToReconect()
> {
> 	DBG_FNC_ENTER("SlsGsrActions::OnUnableToReconect");
> 	SlsServerEngine::Instance()->Shutdown();

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Apr  8 09:03:28 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:29 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:24 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 16:19:26 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:25 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:00 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsGsrActions.cpp#1:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		SlsGsrActions.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Apr 08 09:03:27 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: SlsGsrActions.cpp#1 %  (%full_filespec: SlsGsrActions.cpp#1:cpp:1 %)";
#endif

#include "em_foundations/EmException.h"
#include "SlsGsrActions.h"


DIAG_REGISTER_MODULE;


namespace sls {


SlsGsrActions::SlsGsrActions()
{
	// Construct

}

/*virtual*/ SlsGsrActions::~SlsGsrActions()
{
}


void SlsGsrActions::OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names )
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBeginEnd");
	std::cout << "OnDataCenterNewDayBeginEnd\n";

}

void SlsGsrActions::OnDataCenterNewDayEnd()
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBegin");
	std::cout << "OnDataCenterNewDayEnd\n";

}

void SlsGsrActions::OnReconectStarted()
{
	DBG_FNC_ENTER("SlsGsrActions::OnDataCenterNewDayBegin");
	std::cout << "OnReconectStarted\n";

}


} //namespace sls 

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsGsrActions.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsGsrActions.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsGsrActions.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsGsrActions.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsGsrActions.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsGsrActions.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 08 09:03:34 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsGsrActions.h#2:INC:1
*****************************************************************************
Object:  SlsGsrActions.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Sun Apr 11 16:18:59 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsGsrActions.h#1:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsGsrActions.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsGsrActions.h#2 sqa yakovt INC ECSNT 1 46511
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsGsrActions.h#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsGsrActions.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	SlsGsrActions.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Sun Apr 11 16:18:59 2010 %
*
**********************************************************************/
#ifndef _1_SlsGsrActions_h_H
#define _1_SlsGsrActions_h_H

#include "SlsService_export.h"

#include "BsmService/GsrActionCallback.h"


namespace sls {


class SlsGsrActions : public bsm::GsrActionCallback
{
public:
	SlsGsrActions();
	virtual ~SlsGsrActions();

	virtual void OnDataCenterNewDayBeginStart(const std::vector<std::string>& dc_names ) { return ; }
	virtual void OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names );
	virtual void OnDataCenterNewDayEnd();
	virtual void OnReconectStarted();
	virtual void OnUnableToReconect();
	virtual bool OnShortUpdate(const std::string& dc_name, bsm::GsrCorbaSimulJobDataAdapter* pJobUpdate) { return false; }	//(true: it was updated in the callback)
	virtual bool OnFullUpdate(const std::string& dc_name, bsm::GsrCorbaSimulJobDataAdapter* pJobUpdate) { return false; }	//(true: it was updated in the callback)
	virtual void OnLastInServiceUpdate(const std::string& dc_name, const os_time_and_date& ostime) { return ; }







};

} //namespace sls 


#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsGsrActions.h#2:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsGsrActions.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsGsrActions.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsGsrActions.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsGsrActions.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsGsrActions.h#1          SlsGsrActions.h#2         
------------------------- -------------------------- --------------------------
create_time               Thu Apr 08 09:03:34 2010   Sun Apr 11 16:18:59 2010  
modify_time               Mon Apr 12 11:59:25 2010   Wed Apr 14 17:03:00 2010  
version                   1                          2                         
source_create_time        Thu Apr 08 09:03:35 2010   Sun Apr 11 16:19:00 2010  
source_modify_time        Thu Apr 08 14:51:46 2010   Wed Apr 14 15:44:38 2010  

===============================================================================
Associated tasks differs:

SlsGsrActions.h#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsGsrActions.h#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Thu Apr 08 09:03:34 2010 %
---
> *	%date_created:	Sun Apr 11 16:18:59 2010 %
33a34
> 	virtual void OnUnableToReconect();
35a37,38
> 	virtual void OnLastInServiceUpdate(const std::string& dc_name, const os_time_and_date& ostime) { return ; }
> 

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Apr  8 09:03:34 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:30 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:25 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Sun Apr 11 16:18:59 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:26 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:00 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsGsrActions.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	SlsGsrActions.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Thu Apr 08 09:03:34 2010 %
*
**********************************************************************/
#ifndef _1_SlsGsrActions_h_H
#define _1_SlsGsrActions_h_H

#include "SlsService_export.h"

#include "BsmService/GsrActionCallback.h"


namespace sls {


class SlsGsrActions : public bsm::GsrActionCallback
{
public:
	SlsGsrActions();
	virtual ~SlsGsrActions();

	virtual void OnDataCenterNewDayBeginStart(const std::vector<std::string>& dc_names ) { return ; }
	virtual void OnDataCenterNewDayBeginEnd(const std::vector<std::string>& dc_names );
	virtual void OnDataCenterNewDayEnd();
	virtual void OnReconectStarted();
	virtual bool OnShortUpdate(const std::string& dc_name, bsm::GsrCorbaSimulJobDataAdapter* pJobUpdate) { return false; }	//(true: it was updated in the callback)
	virtual bool OnFullUpdate(const std::string& dc_name, bsm::GsrCorbaSimulJobDataAdapter* pJobUpdate) { return false; }	//(true: it was updated in the callback)






};

} //namespace sls 


#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsGsrActions.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsGsrActions.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsGsrActions.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsGsrActions.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsServer.cpp#5:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsServer.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Mon Mar 01 11:29:54 2010
Task:    45753
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsServer.cpp#2:cpp:1
*****************************************************************************
Object:  SlsServer.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 09 11:11:27 2010
Task:    45852
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServer.cpp#1:cpp:1
Successors:
	SlsServer.cpp#3:cpp:1
*****************************************************************************
Object:  SlsServer.cpp#3 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Mar 09 15:59:29 2010
Task:    45947
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServer.cpp#2:cpp:1
Successors:
	SlsServer.cpp#4:cpp:1
*****************************************************************************
Object:  SlsServer.cpp#4 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Apr 06 10:29:29 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServer.cpp#3:cpp:1
Successors:
	SlsServer.cpp#5:cpp:1
*****************************************************************************
Object:  SlsServer.cpp#5 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 13:17:35 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServer.cpp#4:cpp:1
Successors:
	SlsServer.cpp#6:cpp:1
*****************************************************************************
Object:  SlsServer.cpp#6 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 15 08:43:48 2010
Task:    46629
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServer.cpp#5:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsServer.cpp#6:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsServer.cpp#6 sqa yakovt cpp ECSNT 1 46629
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsServer\SlsServer.cpp#6@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServer.cpp#5:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
// SlsServer.cpp - SLS main
//

#include "stdafx.h"

#include <Common/pragma_begin.h>
#include "ace/OS.h"
#include "ace/Argv_Type_Converter.h"
#include <Common/pragma_end.h>

#include "corekit/DiagPlus.h"
#include "BsmCommon/ContextStreambuf.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_foundations/ExitNotification.h"
#include "corekit/EmExceptionReport.h"
#include "em_foundations/EMRegistryKey.h"
#include "SlsServerServices.h"
#include "ReqSubmitter.h"
#include "SlsService/Sls_Version.h"
#include "Options.h"
#include "RequestSubmitterI.h"
#include <em_foundations/EMMessages.h>
#include <em_foundations/EmProfiler.h>
#include "em_foundations/EmHelper.h"
#include "em_crb_foundations/CrbCallbackRepositoryI.h"

#include "SlsService/ConfigurationService.h"
#include "BsmCommon/CommonApplicationServices.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"


#include "BsmService/BsmAppServiceFactory.h"
#include "BsmService/GsrServiceStartupParams.h"
//#include "SlsService/SlsServiceI.h"

DIAG_REGISTER_MODULE;

// signal handler - unix
#ifndef WIN32
#include <unistd.h>
#include <dlfcn.h>
#include "corekit/SignalHandler.h"
#include "intercept/default_thread_stack_size.h"
#endif


//////////////////////////////////////////////////////////////////////////
// Smart Heap 
//////////////////////////////////////////////////////////////////////////
#ifdef EM_WITH_SMP 
#include <smrtheap.h>

// Uncomment this for specific platform if there are some problem with Smart Heap
//	#if ( defined(OS_UNIX) )
//		unsigned MemDefaultPoolFlags = MEM_POOL_SERIALIZE;
//	#endif

#endif //EM_WITH_SMP


#include <Common/MemoryMngParams.h>

void PatchMemoryAllocator()
{
#if (defined EM_WITH_SMP && defined OS_AIX_5)
	std::cout << "Patching SmartHeap memory allocator to recently loaded shared libraries ..." << std::endl;
	MemPatchProcess();
#endif
}

void InitMemoryAllocator()
{
	// The function is called before the diag init so it does
	// not contains diag messages. This is because the init of smart heap
	// has to be done before any thread is started. If the diag init would
	// decide to start threads thos would cause a problem.
#ifdef EM_WITH_SMP
	std::cout << "Start SmartHeap memory allocator initialization ..." << std::endl;
	MemRegisterTask();
	PatchMemoryAllocator();
	MemoryMngParams::GetMemoryMngParams();
	std::cout << "Smart heap Initialized." << std::endl;
#endif
}

//////////////////////////////////////////////////////////////////////////


// Set the prefix of the DIAG output filename - one for every application module
DIAG_SET_FILENAME("sls");

using namespace sls;

// helper functors
namespace {

	class CmdPerformOp : public std::unary_function< bsm::ApplicationService*, int >
	{
	public:
		CmdPerformOp(std::ostream& aos = std::cout);
		virtual ~CmdPerformOp();
		virtual int PerformOp(argument_type c) = 0;
		result_type operator()(argument_type c);
	protected:
		std::ostream& os;
	};

	class CmdStartup : public CmdPerformOp
	{
	public:
		CmdStartup(int argc, char* argv[],std::ostream& aos = std::cout);
		virtual int PerformOp(argument_type c);
	private:
		int m_argc;
		char **m_argv;
	};

	class CmdShutdown : public CmdPerformOp
	{
	public:
		CmdShutdown(std::ostream& aos = std::cout);
		virtual int PerformOp(argument_type c);
	};


	// diag init helper
	class DiagSystemInitializer
	{
	public:
		DiagSystemInitializer();
		~DiagSystemInitializer();
	};

#ifdef _MSC_VER

	// Declare global instance of crash handler
	class EmDiagStacksReport : public EmExceptionExtraReport
	{
	public:
		virtual void operate() const 
		{
			time_t t = time(0);
			TDiag::Instance()->PrintStacksSafe(t, "Stacks Report" );
			TDiag::Instance()->DumpBufferSafe(t);
		}

	} emDiagStacksReport;
	EmExceptionReport g_EmExceptionReport(GetEMLogLocation().c_str(),&emDiagStacksReport);

#endif //_MSC_VER


	//
	// helpers implementation
	//

	CmdPerformOp::CmdPerformOp(std::ostream& aos /*=std::cout*/) : os(aos)
	{
		// Construct
	}

	CmdPerformOp::~CmdPerformOp() 
	{
		// Destruct
	}


	CmdPerformOp::result_type CmdPerformOp::operator()(CmdPerformOp::argument_type c)
	{
		DBG_FNC_ENTER("CmdPerformOp::operator()");
		int rc = 0;
		try
		{
			if (Options::instance()->bSilent == false)
			{
				os << "[ " << c->name() << " ]" << std::endl;
			}
			rc = PerformOp(c);
			if (rc > 0)
			{
				DIAG_PDEF(DIAG_E, c->name() << " failed with error code: " << rc);
				os << c->name() << " failed with error code: " << rc << std::endl;
			}
			else
			{
				DIAG_PDEF(DIAG_I, c->name() << " completed succesfully");
			}
		}
		catch(std::exception& e)
		{
			DIAG_PDEF(DIAG_E, c->name() << " failed with excepion: " << e.what());
			os << c->name() << " failed with excepion: " << e.what() << std::endl;
			return -2;
		}
		return rc;
	}

	CmdStartup::CmdStartup(int argc, char* argv[] ,std::ostream& aos)
		: m_argc(argc), m_argv(argv), CmdPerformOp(aos) 
	{
		// Construct
	}

	int CmdStartup::PerformOp(CmdStartup::argument_type c)
	{
		DBG_FNC_ENTER("CmdStartup::PerformOp");
		DIAG_PDEF(DIAG_I, "Perform startup '" << c->name() << "'");
		return c->startup(m_argc, m_argv);
	}

	CmdShutdown::CmdShutdown(std::ostream& aos) 
		: CmdPerformOp(aos) 
	{
		// Construct
	}

	int CmdShutdown::PerformOp(CmdShutdown::argument_type c)
	{
		DBG_FNC_ENTER("CmdShutdown::PerformOp");
		DIAG_PDEF(DIAG_I, "Perform shutdown '" << c->name() << "'");
		return c->shutdown();
	}

	// diag init/shudown helper

	DiagSystemInitializer::DiagSystemInitializer()
	{
		// initialize DIAG system
		OptionsImpl* options = Options::instance();

		TDiag* pDiag = TDiag::Instance();
		pDiag->Initialize(
			GetEMLogLocation().c_str(),
			GetEMIniLocation().c_str(), 
			options->logical_name);

		// enable/disable DIAG
		if (options->enable_diag != -1)
		{
			bool bEnableDiag = options->enable_diag ? true : false; 
			pDiag->SetDiagEnabled(bEnableDiag);
		}

		// DIAG stacks
		if (options->enable_diag_stacks == 1) 
		{
			pDiag->EnableStacks();
		}

		// setup debug level
		if (options->startup_debug_level != -1)
		{
			pDiag->SetDebugLevel(DIAG_DEFAULT_OBJNAME, options->startup_debug_level);
		}

	}

	DiagSystemInitializer::~DiagSystemInitializer()
	{
		exit_diag();
	}

	void server_notify_exit(bool bCrashOccured, int signal_no)
	{
        //must not use DIAG or other non async signal safe system calls here	
		//DBG_FNC_ENTER("server_notify_exit");

		std::cout << "Server notify exit issued! (crash: " 
			<< bCrashOccured << " sig: " << signal_no << ")" << std::endl;
		ExitNotification Exit(false);
		
		if (Exit.ExitWasNotified() == false)
		{
			ExitNotification::NotifyExit();
		}
		else
		{
			std::cout << "Force exit!" << std::endl;
			exit(5);
		}
	}

	extern "C" void server_notify_exit_simple(int signal_no)
	{
		std::cout << "Server notify exit issued! (" 
			<< "signal: " << signal_no << ")" << std::endl;
		ExitNotification Exit(false);
		if (Exit.ExitWasNotified() == false)
		{
			ExitNotification::NotifyExit();
		}
		else
		{
			std::cout << "Force exit!" << std::endl;
			exit(6);
		}
	}

#ifdef WIN32 // ctl handler 
	BOOL WINAPI ShutdownCtrlHandler(DWORD dwCtrlType)
	{
		DBG_FNC_ENTER("ShutdownCtrlHandler");
		switch( dwCtrlType )
		{	
			// Allows application to run even if the user logged off	
		case CTRL_LOGOFF_EVENT:
			return TRUE;
			break;
		case CTRL_C_EVENT:
		case CTRL_BREAK_EVENT:
		case CTRL_SHUTDOWN_EVENT:
		case CTRL_CLOSE_EVENT:
			server_notify_exit(false, -1);
			return TRUE;
		default:
			break;
		}
		return FALSE;
	}
#endif // WIN32

	void SetShutdownSignalHandler()
	{
#ifdef WIN32
		SetConsoleCtrlHandler((PHANDLER_ROUTINE) ShutdownCtrlHandler, TRUE);
#else
		static const bool bSimpleSig = getenv("SLS_SIMPLE_SIG") ? true : false;
		if (bSimpleSig == true)
		{
			signal(SIGSEGV, server_notify_exit_simple);
			signal(SIGINT, server_notify_exit_simple); 
			signal(SIGTERM, server_notify_exit_simple); 
			signal(SIGQUIT, server_notify_exit_simple); 
			signal(SIGBUS, server_notify_exit_simple); 
			signal(SIGFPE, server_notify_exit_simple); 
			signal(SIGILL, server_notify_exit_simple); 
			signal(SIGTRAP, server_notify_exit_simple); 
			signal(SIGABRT, server_notify_exit_simple); 
		}
		else // the default signal handle used by EM servers
		{
			std::list<std::string> PreDefinedSignals;
			if (ACE_OS::getenv("EM_NO_SIGNAL_HANDLER") == NULL) 
			{
				PreDefinedSignals.push_back("SEGV crash" );
				PreDefinedSignals.push_back("INT exit");
				PreDefinedSignals.push_back("TERM exit");
				PreDefinedSignals.push_back("QUIT crash");
				PreDefinedSignals.push_back("BUS crash");
				PreDefinedSignals.push_back("FPE crash");
				PreDefinedSignals.push_back("ILL crash"); 
				PreDefinedSignals.push_back("TRAP crash");
				PreDefinedSignals.push_back("ABRT crash"); 

				const int exit_code = 5;
				SignalHandler::Install(
						GetEMIniLocation().c_str(),
						&PreDefinedSignals, 
						&exit_code, 
						server_notify_exit);
			}
		}

   init_default_thread_stack_size();

#endif // WIN32
	}

} // unnamed namespace

class ServiceVec : public std::vector< bsm::ApplicationService* >{
public :
	virtual ~ServiceVec()
	{
			for(iterator it=begin(); it != end(); ++it)
				delete *it;
		clear();
	};
};



static void SetInstall(ServiceVec& CmdVec)
{
	// services this server use
	std::auto_ptr< ConfigurationService > paramsdb_ap( 
		new sls::ConfigurationService() 
		);

	std::auto_ptr< CheckInstallParamService > checkinstall_ap( 
		new CheckInstallParamService() 
		);


	std::auto_ptr< UpdateInstallParamService > updateinstall_ap( 
		new UpdateInstallParamService() 
		);


	std::auto_ptr< sls::CreateSlsComponentService > createslscomponent_ap( 
		new sls::CreateSlsComponentService() 
		);
	
	std::auto_ptr< NotifyExitService > notifyexit_ap( 
		new NotifyExitService() 
		);

	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(checkinstall_ap.release());
	CmdVec.push_back(updateinstall_ap.release());
	CmdVec.push_back(notifyexit_ap.release());

}

static void SetUnInstall(ServiceVec& CmdVec)
{
	// services this server use
	std::auto_ptr< ConfigurationService > paramsdb_ap( 
		new ConfigurationService() 
		);


	std::auto_ptr< UpdateInstallParamService > updateinstall_ap( 
		new UpdateInstallParamService() 
		);

	std::auto_ptr< NotifyExitService > notifyexit_ap( 
		new NotifyExitService() 
		);

	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(updateinstall_ap.release());
	CmdVec.push_back(notifyexit_ap.release());


}


static void SetSlsServiceSeqArr(ServiceVec& CmdVec,RequestSubmitterI& reqSubmitterImpl)
{
	OptionsImpl* options = Options::instance();
	// services this server use
	std::auto_ptr< sls::ConfigurationService > paramsdb_ap( 
		new sls::ConfigurationService() 
		);

	std::auto_ptr< bsm::ResourcesCheckService > resource_ap( 
		new bsm::ResourcesCheckService() 
		);

	std::auto_ptr< CtlService > ctl_ap( 
		new CtlService( reqSubmitterImpl.GetRequestSubmitterMgr() ) 
		);

	std::auto_ptr<CheckLicenseActivationService > license_ap(
		new CheckLicenseActivationService()
		);

	std::auto_ptr< bsm::InitI18NService > I18N_ap( 
		new bsm::InitI18NService() 
		);

	std::auto_ptr< bsm::XAlertsSenderService > xalerts_ap( 
		new bsm::XAlertsSenderService(options->logical_name) 
		);

	std::auto_ptr< bsm::XMLParserService > xml_ap( 
		new bsm::XMLParserService() 
		);

	std::auto_ptr< bsm::TimeZoneInitService > timeZoneInitService_ap( 
		new bsm::TimeZoneInitService() 
		);

	std::auto_ptr< bsm::AuditService > auditService_ap( 
		new bsm::AuditService() 
		);

	std::auto_ptr< bsm::CorbaORBService > orb_ap( 
		new bsm::CorbaORBService(options->logical_name, options->host_name, "SLS") 
		);


	std::auto_ptr< SlsServiceApiStarter > serverApiStarter_ap( 
		new SlsServiceApiStarter 
		);

	std::auto_ptr< SlsServiceEngineStarter > serverEngineStarter_ap( 
		new SlsServiceEngineStarter(reqSubmitterImpl.GetRequestSubmitterMgr()) 
		);


	// parameters needed to start the GSR service 
	bsm::GsrServiceStartupParams params;
	params.m_ClientId = E_BIMC; //TODOSLS: use E_SLSC
	params.m_GsrServerName = Options::instance()->gsr_name;
	params.m_UserName = bsm::Configuration::Instance()->GetString(BSMCFG_SelfSerivceUserName, "emuser"); //TODOSLS:BSMCFG_SelfSerivceUserName_DEFAULT
	serverEngineStarter_ap->FillGsrServiceStartupParams(params);

	//singleton
	bsm::ApplicationService* gsr_service = bsm::BsmAppServiceFactory::Instance()->CreateGsrService(params);

	std::auto_ptr< bsm::ServantsService > servants_ap( 
		new bsm::ServantsService(SLS_CONTEXT, ServerORB::Instance(), ServerORB::OrbID ) 
		);

	// special initialize for callback repository - using ClientORB
	std::auto_ptr< bsm::ServantsService > servants2_ap( 
		new bsm::ServantsService(SLS_CONTEXT, ClientORB::Instance(), ClientORB::OrbID ) 
		);

	std::auto_ptr< RegisterLogicalNameService > RegisterLogicalNameService_ap( 
		new RegisterLogicalNameService("SlsName", Options::instance()->logical_name) 
		);
	
	// setup relevant data between services
	
	servants_ap->AddServant(SLS_REQUEST_SUBMITTER_SERVANT, &reqSubmitterImpl);
	servants_ap->AddServant(SLS_SERVICE_SERVANT, serverApiStarter_ap->GetSlsServiceApi());
	servants2_ap->AddServant(CALLBACKREPOSITORY_SERVANT, CrbCallbackRepo::Instance());

	//push and release the auto_ptr to avoid destruction
	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(resource_ap.release());
	CmdVec.push_back(license_ap.release());
	CmdVec.push_back(I18N_ap.release());
	CmdVec.push_back(xml_ap.release());
	CmdVec.push_back(timeZoneInitService_ap.release());
	CmdVec.push_back(auditService_ap.release());
	CmdVec.push_back(ctl_ap.release());
	CmdVec.push_back(orb_ap.release());
	CmdVec.push_back(xalerts_ap.release());
	CmdVec.push_back(serverEngineStarter_ap.release());
	CmdVec.push_back(serverApiStarter_ap.release());
	
	CmdVec.push_back(gsr_service);
	
	CmdVec.push_back(servants_ap.release());
	CmdVec.push_back(servants2_ap.release());
	CmdVec.push_back(RegisterLogicalNameService_ap.release());
	
}




//
// server main entry point
//
int main(int argc, char* argv[])
{
	std::cout << SLS_SERVER_VER << std::endl << std::endl;

	InitMemoryAllocator(); // must be called before any thread is started !!!

	em_env_setup();

	// parse command-line args args
	ACE_Argv_Type_Converter command_line(argc, argv);
	sls::OptionsImpl* options = Options::instance();
	if (options->parse_args(command_line.get_argc(), command_line.get_ASCII_argv(), std::cout) != 0)
	{
		return 1;
	}

	// initialize DIAG
	DiagSystemInitializer diagInitializer;

#ifdef WIN32
	// initialize exception report - winodws only
	EmDiagStacksReport diagStacksReportFunc;
	EmExceptionReport exceptionReport(GetEMLogLocation().c_str(), &diagStacksReportFunc);
#endif // WIN32 
	
	DBG_FNC_ENTER("main");

	// init messages
	EMMessagesInit();

	// CTL handle / signal handler
	SetShutdownSignalHandler();

	// replace cout default buffer with our own
	std::streambuf* cout_sb = std::cout.rdbuf();
	bsm::ContextStreambuf ssb(cout_sb, "startup");
#ifdef WIN32
	// FIXME: until the stream problem is solved, I left it on windows only
	std::cout.rdbuf(&ssb);
#endif

	// general information
	std::cout << "Process id: " << ACE_OS::getpid() << std::endl;
	DIAG_PDEF(DIAG_I, "Process id: " << ACE_OS::getpid());

	// startup services
	DIAG_PDEF(DIAG_I, "Startup sequence started");
	
	//request submitter
	RequestSubmitterI reqSubmitterImpl;
	reqSubmitterImpl.SetRequestSubmitterMgr(new ReqSubmitterMgr(), true);

	ServiceVec cmdv;
	if(options->install == true)
	{
		SetInstall(cmdv);
		ssb.set_context("Install");
	}
	else if(options->uninstall == true)
	{
		SetUnInstall(cmdv);
		ssb.set_context("Uninstall");
	}
	else
	{
	
		SetSlsServiceSeqArr(cmdv,reqSubmitterImpl);
		ssb.set_context("startup");
	}

	CmdStartup cmdStartup(command_line.get_argc(), command_line.get_ASCII_argv(),std::cout);
	ServiceVec::iterator it = cmdv.begin();
	int iRet = 0;
	
	for (; it != cmdv.end(); ++it)
	{
		iRet = cmdStartup(*it);
		if (iRet != 0)
			break;
	}
	if (iRet != 0)
	{
		if(options->install == true )
		{
			if (iRet == -1)
				std::cout << SLS_SERVER_VER << " installed successfully." << std::endl;
			else
			{
				DIAG_PDEF(DIAG_E, SLS_SERVER_VER << " installation failed.");
				std::cout << SLS_SERVER_VER << " installation failed." << std::endl;
			}
		}
		else if(options->uninstall == true )
		{
			DIAG_PDEF(DIAG_E, SLS_SERVER_VER  << " uninstall failed.");
			std::cout << SLS_SERVER_VER  << " uninstall failed." << std::endl;
		}
		else
		{
			DIAG_PDEF(DIAG_E, "Startup sequence interrupted!");
			std::cout << "Interrupted!" << std::endl;
		}
	}
	else
	{
		if(options->install)
		{
			std::cout << SLS_SERVER_VER << " installed and activated successfully." << std::endl;
		}
		
		if(options->uninstall)
		{
			std::cout << SLS_SERVER_VER << " uninstalled successfully." << std::endl;
		}
		
		if (options->bSilent == false)
		{
			DIAG_PDEF(DIAG_I, "Startup sequence completed, server up and running");
			ssb.set_context("startup");
			std::cout << "Completed" << std::endl;
			// set run context
			ssb.set_context("run");
			std::cout << "Up and running..." << std::endl;

			//print to DIAG
			std::ostringstream str;
			TDiag *pTheDiag = TDiag::Instance(); 
			bsm::Configuration::Instance()->Print(str);
			pTheDiag->PrintDirectly(str.str().c_str());
			pTheDiag->flush(); 
			cout << str.str() << std::endl;
		}

		// wait for the termination event
		ExitNotification::WaitTillPosted();
		std::cout << "exiting...\n";
		DIAG_PDEF(DIAG_I, "Exit notified");

		// wait until all thread complete their work
		if (ExitNotification::WaitTillAllThreadsNotified(10))
		{
			if (options->bSilent == false)
			{
				std::cout << "All Threads were notified of exit." << std::endl;
			}
			DIAG_PDEF(DIAG_S, "All Threads were notified of exit");
		}
		else
		{
			DIAG_PDEF(DIAG_I, "Not all Threads were notified of exit");
			if (options->bSilent == false)
			{
				std::cout << "Not all Threads were notified of exit." << std::endl;
			}
		}
	}

	// shutdown services
	DIAG_PDEF(DIAG_I, "Shutdown sequence started");
	ssb.set_context("shutdown");
	ServiceVec::reverse_iterator rbegin( it ); 
	CmdShutdown cmdShutdown(std::cout);
	std::for_each( rbegin, cmdv.rend(), cmdShutdown);
	if (options->bSilent == false)
	{
		std::cout << "Completed" << std::endl;
	}
	DIAG_PDEF(DIAG_I, "Shutdown sequence completed");

#ifdef WIN32
	// FIXME: until the stream problem is solved, I left it on windows only
	// restore original stream
	 std::cout.rdbuf(cout_sb);
#endif

	 return (iRet);
}

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsServer.cpp#5:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsServer\SlsServer.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsServer
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsServer\SlsServer.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsServer\SlsServer.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsServer.cpp#5:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsServer.cpp#4            SlsServer.cpp#5           
------------------------- -------------------------- --------------------------
create_time               Tue Apr 06 10:29:29 2010   Wed Apr 14 13:17:35 2010  
modify_time               Mon Apr 12 11:59:26 2010   Wed Apr 14 17:03:01 2010  
version                   4                          5                         
source_create_time        Tue Mar 09 17:25:31 2010   Thu Apr 08 14:12:29 2010  
source_modify_time        Thu Apr 08 14:12:29 2010   Wed Apr 14 14:11:29 2010  

===============================================================================
Associated tasks differs:

SlsServer.cpp#4
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsServer.cpp#5
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

498c498
< 	params.m_UserName = bsm::Configuration::Instance()->GetString(BSMCFG_SelfSerivceUserName, "emuser"); //TODOGSR:BSMCFG_SelfSerivceUserName_DEFAULT
---
> 	params.m_UserName = bsm::Configuration::Instance()->GetString(BSMCFG_SelfSerivceUserName, "emuser"); //TODOSLS:BSMCFG_SelfSerivceUserName_DEFAULT
673a674,681
> 
> 			//print to DIAG
> 			std::ostringstream str;
> 			TDiag *pTheDiag = TDiag::Instance(); 
> 			bsm::Configuration::Instance()->Print(str);
> 			pTheDiag->PrintDirectly(str.str().c_str());
> 			pTheDiag->flush(); 
> 			cout << str.str() << std::endl;

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Tue Apr  6 10:29:29 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:31 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:26 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 13:17:35 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:27 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:01 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServer.cpp#4:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
// SlsServer.cpp - SLS main
//

#include "stdafx.h"

#include <Common/pragma_begin.h>
#include "ace/OS.h"
#include "ace/Argv_Type_Converter.h"
#include <Common/pragma_end.h>

#include "corekit/DiagPlus.h"
#include "BsmCommon/ContextStreambuf.h"
#include "em_crb_foundations/ECSOrbCommon.h"
#include "em_foundations/ExitNotification.h"
#include "corekit/EmExceptionReport.h"
#include "em_foundations/EMRegistryKey.h"
#include "SlsServerServices.h"
#include "ReqSubmitter.h"
#include "SlsService/Sls_Version.h"
#include "Options.h"
#include "RequestSubmitterI.h"
#include <em_foundations/EMMessages.h>
#include <em_foundations/EmProfiler.h>
#include "em_foundations/EmHelper.h"
#include "em_crb_foundations/CrbCallbackRepositoryI.h"

#include "SlsService/ConfigurationService.h"
#include "BsmCommon/CommonApplicationServices.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"


#include "BsmService/BsmAppServiceFactory.h"
#include "BsmService/GsrServiceStartupParams.h"
//#include "SlsService/SlsServiceI.h"

DIAG_REGISTER_MODULE;

// signal handler - unix
#ifndef WIN32
#include <unistd.h>
#include <dlfcn.h>
#include "corekit/SignalHandler.h"
#include "intercept/default_thread_stack_size.h"
#endif


//////////////////////////////////////////////////////////////////////////
// Smart Heap 
//////////////////////////////////////////////////////////////////////////
#ifdef EM_WITH_SMP 
#include <smrtheap.h>

// Uncomment this for specific platform if there are some problem with Smart Heap
//	#if ( defined(OS_UNIX) )
//		unsigned MemDefaultPoolFlags = MEM_POOL_SERIALIZE;
//	#endif

#endif //EM_WITH_SMP


#include <Common/MemoryMngParams.h>

void PatchMemoryAllocator()
{
#if (defined EM_WITH_SMP && defined OS_AIX_5)
	std::cout << "Patching SmartHeap memory allocator to recently loaded shared libraries ..." << std::endl;
	MemPatchProcess();
#endif
}

void InitMemoryAllocator()
{
	// The function is called before the diag init so it does
	// not contains diag messages. This is because the init of smart heap
	// has to be done before any thread is started. If the diag init would
	// decide to start threads thos would cause a problem.
#ifdef EM_WITH_SMP
	std::cout << "Start SmartHeap memory allocator initialization ..." << std::endl;
	MemRegisterTask();
	PatchMemoryAllocator();
	MemoryMngParams::GetMemoryMngParams();
	std::cout << "Smart heap Initialized." << std::endl;
#endif
}

//////////////////////////////////////////////////////////////////////////


// Set the prefix of the DIAG output filename - one for every application module
DIAG_SET_FILENAME("sls");

using namespace sls;

// helper functors
namespace {

	class CmdPerformOp : public std::unary_function< bsm::ApplicationService*, int >
	{
	public:
		CmdPerformOp(std::ostream& aos = std::cout);
		virtual ~CmdPerformOp();
		virtual int PerformOp(argument_type c) = 0;
		result_type operator()(argument_type c);
	protected:
		std::ostream& os;
	};

	class CmdStartup : public CmdPerformOp
	{
	public:
		CmdStartup(int argc, char* argv[],std::ostream& aos = std::cout);
		virtual int PerformOp(argument_type c);
	private:
		int m_argc;
		char **m_argv;
	};

	class CmdShutdown : public CmdPerformOp
	{
	public:
		CmdShutdown(std::ostream& aos = std::cout);
		virtual int PerformOp(argument_type c);
	};


	// diag init helper
	class DiagSystemInitializer
	{
	public:
		DiagSystemInitializer();
		~DiagSystemInitializer();
	};

#ifdef _MSC_VER

	// Declare global instance of crash handler
	class EmDiagStacksReport : public EmExceptionExtraReport
	{
	public:
		virtual void operate() const 
		{
			time_t t = time(0);
			TDiag::Instance()->PrintStacksSafe(t, "Stacks Report" );
			TDiag::Instance()->DumpBufferSafe(t);
		}

	} emDiagStacksReport;
	EmExceptionReport g_EmExceptionReport(GetEMLogLocation().c_str(),&emDiagStacksReport);

#endif //_MSC_VER


	//
	// helpers implementation
	//

	CmdPerformOp::CmdPerformOp(std::ostream& aos /*=std::cout*/) : os(aos)
	{
		// Construct
	}

	CmdPerformOp::~CmdPerformOp() 
	{
		// Destruct
	}


	CmdPerformOp::result_type CmdPerformOp::operator()(CmdPerformOp::argument_type c)
	{
		DBG_FNC_ENTER("CmdPerformOp::operator()");
		int rc = 0;
		try
		{
			if (Options::instance()->bSilent == false)
			{
				os << "[ " << c->name() << " ]" << std::endl;
			}
			rc = PerformOp(c);
			if (rc > 0)
			{
				DIAG_PDEF(DIAG_E, c->name() << " failed with error code: " << rc);
				os << c->name() << " failed with error code: " << rc << std::endl;
			}
			else
			{
				DIAG_PDEF(DIAG_I, c->name() << " completed succesfully");
			}
		}
		catch(std::exception& e)
		{
			DIAG_PDEF(DIAG_E, c->name() << " failed with excepion: " << e.what());
			os << c->name() << " failed with excepion: " << e.what() << std::endl;
			return -2;
		}
		return rc;
	}

	CmdStartup::CmdStartup(int argc, char* argv[] ,std::ostream& aos)
		: m_argc(argc), m_argv(argv), CmdPerformOp(aos) 
	{
		// Construct
	}

	int CmdStartup::PerformOp(CmdStartup::argument_type c)
	{
		DBG_FNC_ENTER("CmdStartup::PerformOp");
		DIAG_PDEF(DIAG_I, "Perform startup '" << c->name() << "'");
		return c->startup(m_argc, m_argv);
	}

	CmdShutdown::CmdShutdown(std::ostream& aos) 
		: CmdPerformOp(aos) 
	{
		// Construct
	}

	int CmdShutdown::PerformOp(CmdShutdown::argument_type c)
	{
		DBG_FNC_ENTER("CmdShutdown::PerformOp");
		DIAG_PDEF(DIAG_I, "Perform shutdown '" << c->name() << "'");
		return c->shutdown();
	}

	// diag init/shudown helper

	DiagSystemInitializer::DiagSystemInitializer()
	{
		// initialize DIAG system
		OptionsImpl* options = Options::instance();

		TDiag* pDiag = TDiag::Instance();
		pDiag->Initialize(
			GetEMLogLocation().c_str(),
			GetEMIniLocation().c_str(), 
			options->logical_name);

		// enable/disable DIAG
		if (options->enable_diag != -1)
		{
			bool bEnableDiag = options->enable_diag ? true : false; 
			pDiag->SetDiagEnabled(bEnableDiag);
		}

		// DIAG stacks
		if (options->enable_diag_stacks == 1) 
		{
			pDiag->EnableStacks();
		}

		// setup debug level
		if (options->startup_debug_level != -1)
		{
			pDiag->SetDebugLevel(DIAG_DEFAULT_OBJNAME, options->startup_debug_level);
		}

	}

	DiagSystemInitializer::~DiagSystemInitializer()
	{
		exit_diag();
	}

	void server_notify_exit(bool bCrashOccured, int signal_no)
	{
        //must not use DIAG or other non async signal safe system calls here	
		//DBG_FNC_ENTER("server_notify_exit");

		std::cout << "Server notify exit issued! (crash: " 
			<< bCrashOccured << " sig: " << signal_no << ")" << std::endl;
		ExitNotification Exit(false);
		
		if (Exit.ExitWasNotified() == false)
		{
			ExitNotification::NotifyExit();
		}
		else
		{
			std::cout << "Force exit!" << std::endl;
			exit(5);
		}
	}

	extern "C" void server_notify_exit_simple(int signal_no)
	{
		std::cout << "Server notify exit issued! (" 
			<< "signal: " << signal_no << ")" << std::endl;
		ExitNotification Exit(false);
		if (Exit.ExitWasNotified() == false)
		{
			ExitNotification::NotifyExit();
		}
		else
		{
			std::cout << "Force exit!" << std::endl;
			exit(6);
		}
	}

#ifdef WIN32 // ctl handler 
	BOOL WINAPI ShutdownCtrlHandler(DWORD dwCtrlType)
	{
		DBG_FNC_ENTER("ShutdownCtrlHandler");
		switch( dwCtrlType )
		{	
			// Allows application to run even if the user logged off	
		case CTRL_LOGOFF_EVENT:
			return TRUE;
			break;
		case CTRL_C_EVENT:
		case CTRL_BREAK_EVENT:
		case CTRL_SHUTDOWN_EVENT:
		case CTRL_CLOSE_EVENT:
			server_notify_exit(false, -1);
			return TRUE;
		default:
			break;
		}
		return FALSE;
	}
#endif // WIN32

	void SetShutdownSignalHandler()
	{
#ifdef WIN32
		SetConsoleCtrlHandler((PHANDLER_ROUTINE) ShutdownCtrlHandler, TRUE);
#else
		static const bool bSimpleSig = getenv("SLS_SIMPLE_SIG") ? true : false;
		if (bSimpleSig == true)
		{
			signal(SIGSEGV, server_notify_exit_simple);
			signal(SIGINT, server_notify_exit_simple); 
			signal(SIGTERM, server_notify_exit_simple); 
			signal(SIGQUIT, server_notify_exit_simple); 
			signal(SIGBUS, server_notify_exit_simple); 
			signal(SIGFPE, server_notify_exit_simple); 
			signal(SIGILL, server_notify_exit_simple); 
			signal(SIGTRAP, server_notify_exit_simple); 
			signal(SIGABRT, server_notify_exit_simple); 
		}
		else // the default signal handle used by EM servers
		{
			std::list<std::string> PreDefinedSignals;
			if (ACE_OS::getenv("EM_NO_SIGNAL_HANDLER") == NULL) 
			{
				PreDefinedSignals.push_back("SEGV crash" );
				PreDefinedSignals.push_back("INT exit");
				PreDefinedSignals.push_back("TERM exit");
				PreDefinedSignals.push_back("QUIT crash");
				PreDefinedSignals.push_back("BUS crash");
				PreDefinedSignals.push_back("FPE crash");
				PreDefinedSignals.push_back("ILL crash"); 
				PreDefinedSignals.push_back("TRAP crash");
				PreDefinedSignals.push_back("ABRT crash"); 

				const int exit_code = 5;
				SignalHandler::Install(
						GetEMIniLocation().c_str(),
						&PreDefinedSignals, 
						&exit_code, 
						server_notify_exit);
			}
		}

   init_default_thread_stack_size();

#endif // WIN32
	}

} // unnamed namespace

class ServiceVec : public std::vector< bsm::ApplicationService* >{
public :
	virtual ~ServiceVec()
	{
			for(iterator it=begin(); it != end(); ++it)
				delete *it;
		clear();
	};
};



static void SetInstall(ServiceVec& CmdVec)
{
	// services this server use
	std::auto_ptr< ConfigurationService > paramsdb_ap( 
		new sls::ConfigurationService() 
		);

	std::auto_ptr< CheckInstallParamService > checkinstall_ap( 
		new CheckInstallParamService() 
		);


	std::auto_ptr< UpdateInstallParamService > updateinstall_ap( 
		new UpdateInstallParamService() 
		);


	std::auto_ptr< sls::CreateSlsComponentService > createslscomponent_ap( 
		new sls::CreateSlsComponentService() 
		);
	
	std::auto_ptr< NotifyExitService > notifyexit_ap( 
		new NotifyExitService() 
		);

	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(checkinstall_ap.release());
	CmdVec.push_back(updateinstall_ap.release());
	CmdVec.push_back(notifyexit_ap.release());

}

static void SetUnInstall(ServiceVec& CmdVec)
{
	// services this server use
	std::auto_ptr< ConfigurationService > paramsdb_ap( 
		new ConfigurationService() 
		);


	std::auto_ptr< UpdateInstallParamService > updateinstall_ap( 
		new UpdateInstallParamService() 
		);

	std::auto_ptr< NotifyExitService > notifyexit_ap( 
		new NotifyExitService() 
		);

	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(updateinstall_ap.release());
	CmdVec.push_back(notifyexit_ap.release());


}


static void SetSlsServiceSeqArr(ServiceVec& CmdVec,RequestSubmitterI& reqSubmitterImpl)
{
	OptionsImpl* options = Options::instance();
	// services this server use
	std::auto_ptr< sls::ConfigurationService > paramsdb_ap( 
		new sls::ConfigurationService() 
		);

	std::auto_ptr< bsm::ResourcesCheckService > resource_ap( 
		new bsm::ResourcesCheckService() 
		);

	std::auto_ptr< CtlService > ctl_ap( 
		new CtlService( reqSubmitterImpl.GetRequestSubmitterMgr() ) 
		);

	std::auto_ptr<CheckLicenseActivationService > license_ap(
		new CheckLicenseActivationService()
		);

	std::auto_ptr< bsm::InitI18NService > I18N_ap( 
		new bsm::InitI18NService() 
		);

	std::auto_ptr< bsm::XAlertsSenderService > xalerts_ap( 
		new bsm::XAlertsSenderService(options->logical_name) 
		);

	std::auto_ptr< bsm::XMLParserService > xml_ap( 
		new bsm::XMLParserService() 
		);

	std::auto_ptr< bsm::TimeZoneInitService > timeZoneInitService_ap( 
		new bsm::TimeZoneInitService() 
		);

	std::auto_ptr< bsm::AuditService > auditService_ap( 
		new bsm::AuditService() 
		);

	std::auto_ptr< bsm::CorbaORBService > orb_ap( 
		new bsm::CorbaORBService(options->logical_name, options->host_name, "SLS") 
		);


	std::auto_ptr< SlsServiceApiStarter > serverApiStarter_ap( 
		new SlsServiceApiStarter 
		);

	std::auto_ptr< SlsServiceEngineStarter > serverEngineStarter_ap( 
		new SlsServiceEngineStarter(reqSubmitterImpl.GetRequestSubmitterMgr()) 
		);


	// parameters needed to start the GSR service 
	bsm::GsrServiceStartupParams params;
	params.m_ClientId = E_BIMC; //TODOSLS: use E_SLSC
	params.m_GsrServerName = Options::instance()->gsr_name;
	params.m_UserName = bsm::Configuration::Instance()->GetString(BSMCFG_SelfSerivceUserName, "emuser"); //TODOGSR:BSMCFG_SelfSerivceUserName_DEFAULT
	serverEngineStarter_ap->FillGsrServiceStartupParams(params);

	//singleton
	bsm::ApplicationService* gsr_service = bsm::BsmAppServiceFactory::Instance()->CreateGsrService(params);

	std::auto_ptr< bsm::ServantsService > servants_ap( 
		new bsm::ServantsService(SLS_CONTEXT, ServerORB::Instance(), ServerORB::OrbID ) 
		);

	// special initialize for callback repository - using ClientORB
	std::auto_ptr< bsm::ServantsService > servants2_ap( 
		new bsm::ServantsService(SLS_CONTEXT, ClientORB::Instance(), ClientORB::OrbID ) 
		);

	std::auto_ptr< RegisterLogicalNameService > RegisterLogicalNameService_ap( 
		new RegisterLogicalNameService("SlsName", Options::instance()->logical_name) 
		);
	
	// setup relevant data between services
	
	servants_ap->AddServant(SLS_REQUEST_SUBMITTER_SERVANT, &reqSubmitterImpl);
	servants_ap->AddServant(SLS_SERVICE_SERVANT, serverApiStarter_ap->GetSlsServiceApi());
	servants2_ap->AddServant(CALLBACKREPOSITORY_SERVANT, CrbCallbackRepo::Instance());

	//push and release the auto_ptr to avoid destruction
	CmdVec.push_back(paramsdb_ap.release());
	CmdVec.push_back(resource_ap.release());
	CmdVec.push_back(license_ap.release());
	CmdVec.push_back(I18N_ap.release());
	CmdVec.push_back(xml_ap.release());
	CmdVec.push_back(timeZoneInitService_ap.release());
	CmdVec.push_back(auditService_ap.release());
	CmdVec.push_back(ctl_ap.release());
	CmdVec.push_back(orb_ap.release());
	CmdVec.push_back(xalerts_ap.release());
	CmdVec.push_back(serverEngineStarter_ap.release());
	CmdVec.push_back(serverApiStarter_ap.release());
	
	CmdVec.push_back(gsr_service);
	
	CmdVec.push_back(servants_ap.release());
	CmdVec.push_back(servants2_ap.release());
	CmdVec.push_back(RegisterLogicalNameService_ap.release());
	
}




//
// server main entry point
//
int main(int argc, char* argv[])
{
	std::cout << SLS_SERVER_VER << std::endl << std::endl;

	InitMemoryAllocator(); // must be called before any thread is started !!!

	em_env_setup();

	// parse command-line args args
	ACE_Argv_Type_Converter command_line(argc, argv);
	sls::OptionsImpl* options = Options::instance();
	if (options->parse_args(command_line.get_argc(), command_line.get_ASCII_argv(), std::cout) != 0)
	{
		return 1;
	}

	// initialize DIAG
	DiagSystemInitializer diagInitializer;

#ifdef WIN32
	// initialize exception report - winodws only
	EmDiagStacksReport diagStacksReportFunc;
	EmExceptionReport exceptionReport(GetEMLogLocation().c_str(), &diagStacksReportFunc);
#endif // WIN32 
	
	DBG_FNC_ENTER("main");

	// init messages
	EMMessagesInit();

	// CTL handle / signal handler
	SetShutdownSignalHandler();

	// replace cout default buffer with our own
	std::streambuf* cout_sb = std::cout.rdbuf();
	bsm::ContextStreambuf ssb(cout_sb, "startup");
#ifdef WIN32
	// FIXME: until the stream problem is solved, I left it on windows only
	std::cout.rdbuf(&ssb);
#endif

	// general information
	std::cout << "Process id: " << ACE_OS::getpid() << std::endl;
	DIAG_PDEF(DIAG_I, "Process id: " << ACE_OS::getpid());

	// startup services
	DIAG_PDEF(DIAG_I, "Startup sequence started");
	
	//request submitter
	RequestSubmitterI reqSubmitterImpl;
	reqSubmitterImpl.SetRequestSubmitterMgr(new ReqSubmitterMgr(), true);

	ServiceVec cmdv;
	if(options->install == true)
	{
		SetInstall(cmdv);
		ssb.set_context("Install");
	}
	else if(options->uninstall == true)
	{
		SetUnInstall(cmdv);
		ssb.set_context("Uninstall");
	}
	else
	{
	
		SetSlsServiceSeqArr(cmdv,reqSubmitterImpl);
		ssb.set_context("startup");
	}

	CmdStartup cmdStartup(command_line.get_argc(), command_line.get_ASCII_argv(),std::cout);
	ServiceVec::iterator it = cmdv.begin();
	int iRet = 0;
	
	for (; it != cmdv.end(); ++it)
	{
		iRet = cmdStartup(*it);
		if (iRet != 0)
			break;
	}
	if (iRet != 0)
	{
		if(options->install == true )
		{
			if (iRet == -1)
				std::cout << SLS_SERVER_VER << " installed successfully." << std::endl;
			else
			{
				DIAG_PDEF(DIAG_E, SLS_SERVER_VER << " installation failed.");
				std::cout << SLS_SERVER_VER << " installation failed." << std::endl;
			}
		}
		else if(options->uninstall == true )
		{
			DIAG_PDEF(DIAG_E, SLS_SERVER_VER  << " uninstall failed.");
			std::cout << SLS_SERVER_VER  << " uninstall failed." << std::endl;
		}
		else
		{
			DIAG_PDEF(DIAG_E, "Startup sequence interrupted!");
			std::cout << "Interrupted!" << std::endl;
		}
	}
	else
	{
		if(options->install)
		{
			std::cout << SLS_SERVER_VER << " installed and activated successfully." << std::endl;
		}
		
		if(options->uninstall)
		{
			std::cout << SLS_SERVER_VER << " uninstalled successfully." << std::endl;
		}
		
		if (options->bSilent == false)
		{
			DIAG_PDEF(DIAG_I, "Startup sequence completed, server up and running");
			ssb.set_context("startup");
			std::cout << "Completed" << std::endl;
			// set run context
			ssb.set_context("run");
			std::cout << "Up and running..." << std::endl;
		}

		// wait for the termination event
		ExitNotification::WaitTillPosted();
		std::cout << "exiting...\n";
		DIAG_PDEF(DIAG_I, "Exit notified");

		// wait until all thread complete their work
		if (ExitNotification::WaitTillAllThreadsNotified(10))
		{
			if (options->bSilent == false)
			{
				std::cout << "All Threads were notified of exit." << std::endl;
			}
			DIAG_PDEF(DIAG_S, "All Threads were notified of exit");
		}
		else
		{
			DIAG_PDEF(DIAG_I, "Not all Threads were notified of exit");
			if (options->bSilent == false)
			{
				std::cout << "Not all Threads were notified of exit." << std::endl;
			}
		}
	}

	// shutdown services
	DIAG_PDEF(DIAG_I, "Shutdown sequence started");
	ssb.set_context("shutdown");
	ServiceVec::reverse_iterator rbegin( it ); 
	CmdShutdown cmdShutdown(std::cout);
	std::for_each( rbegin, cmdv.rend(), cmdShutdown);
	if (options->bSilent == false)
	{
		std::cout << "Completed" << std::endl;
	}
	DIAG_PDEF(DIAG_I, "Shutdown sequence completed");

#ifdef WIN32
	// FIXME: until the stream problem is solved, I left it on windows only
	// restore original stream
	 std::cout.rdbuf(cout_sb);
#endif

	 return (iRet);
}

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsServer\SlsServer.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsServer
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsServer\SlsServer.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsServer.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsServer.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsServerEngine.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsServerEngine.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 07 11:39:29 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsServerEngine.cpp#2:cpp:1
*****************************************************************************
Object:  SlsServerEngine.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 08 17:04:54 2010
Task:    46486
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServerEngine.cpp#1:cpp:1
Successors:
	SlsServerEngine.cpp#3:cpp:1
*****************************************************************************
Object:  SlsServerEngine.cpp#3 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Apr 13 16:20:21 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServerEngine.cpp#2:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsServerEngine.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsServerEngine.cpp#3 sqa yakovt cpp ECSNT 1 46511
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsServerEngine.cpp#3@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServerEngine.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		SlsServerEngine.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Tue Apr 13 16:20:21 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: SlsServerEngine.cpp#3 %  (%full_filespec: SlsServerEngine.cpp#3:cpp:1 %)";
#endif

#include "em_foundations/EmException.h"
#include "em_foundations/ExitNotification.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"

#include "SlsServer/ReqSubmitter.h"

#include "libfcengine/Simulator.h"
#include "libfcengine/SimulatorFactory.h"
#include "ForecastDAL/DALMgr.h"

#include "libfcengine/SLSDefManager.h"

#include "BsmService/SLSDefWrapperDB.h"
#include "BsmService/GsrServiceStartupParams.h"
#include "BsmService/GsrService.h"

#include "SlsServiceCmds.h"
#include "SlsServerEngine.h"
#include "Sls_Version.h"		
#include "SlsGsrActions.h"



DIAG_REGISTER_MODULE;


namespace sls {

EM_SINGLETON_IMPLEMENTATION(SlsServerEngine);

SlsServerEngine::SlsServerEngine()
	: m_reqMgr(NULL)
	, m_Simulator(CSimulatorFactory::CreateSimulator())
	, m_SlsGsrActions( new SlsGsrActions )
{

}

/*virtual*/ SlsServerEngine::~SlsServerEngine()
{
	UnregisterCommands();

	// Destruct
	delete m_Simulator;
	m_Simulator = NULL;
	delete m_SlsGsrActions;
	m_SlsGsrActions = NULL;
}


void SlsServerEngine::SetReqSubmitterMgr(ReqSubmitterMgr* reqMgr)
{
	if (m_reqMgr != NULL)
		UnregisterCommands();
	m_reqMgr = reqMgr;
}

bool SlsServerEngine::RegisterCommands()
{
	DBG_FNC_ENTER("SlsServerEngine::RegisterCommands");

	if (m_reqMgr == NULL)
		return false;

	ReqCmdBase* cmdArr[] = {
		new CmdGetVersion,
		new CmdDumpJobs,
		new CmdReconnect
	};

	for (size_t i = 0; i < sizeof(cmdArr)/sizeof(*cmdArr); ++i)
	{
		bool reg = m_reqMgr->RegisterCmd( cmdArr[i] ); 
		if (reg == true)
		{
			DIAG_PDEF(DIAG_I, "Command '" << cmdArr[i]->GetName() << "' was registered");
			m_regCommands.push_back( cmdArr[i]->GetName() );
		}
		else
		{
			DIAG_PDEF(DIAG_E, "Failed to register command: " << cmdArr[i]->GetName());
			delete cmdArr[i];
		}
	}
	return true;
}

bool SlsServerEngine::UnregisterCommands()
{
	DBG_FNC_ENTER("SlsServerEngine::UnregisterCommands");
	if (m_reqMgr == NULL)
		return false;

	for (std::vector< std::string >::const_iterator it = m_regCommands.begin()
		; it != m_regCommands.end()
		; ++it)
	{
		const std::string& cmdName = *it;
		ReqCmdBase* pCmd = m_reqMgr->UnRegisterCmd(cmdName);
		if (pCmd != NULL)
		{
			DIAG_PDEF(DIAG_I, "Command '" << pCmd->GetName() << "' was unregistered");
			delete pCmd;
		}
	}
	m_regCommands.clear();
	return true;
}


void SlsServerEngine::FillGsrServiceStartupParams( bsm::GsrServiceStartupParams& params )
{
	params.m_Simulator				= m_Simulator;
	params.m_GsrActionCallback		= m_SlsGsrActions;
}


/*virtual*/ int SlsServerEngine::Init(int argc,char* argv[])
{
	// 
	DBG_FNC_ENTER("SlsServerEngine::Startup");

	// register commands in the request submitter
	DIAG_PDEF(DIAG_I, "register commands in the request submitter");
	RegisterCommands();

	//T: Definition Load before VP
	RWDBConnection conn = Forecast::DAL::DALMgr::instance()->GetConnection();
	SLSDefWrapperDB* db = SLSDefWrapperDB::Instance();
	bsm::SLSDefManager * m = SlsServerEngine::Instance()->GetSimulator()->GetSLSDefManager();
	EM_ASSERT_AND_THROW( m != 0 , "should not be null " );
	//db->GetLatestDefinitionSet(  m->GetLatestDefinitionSet(), &conn );
	//

	this->Start(); //start own working thread

	return 0;
}


std::string SlsServerEngine::GetVersion() const
{
	return SLS_SERVER_VER;
}




void SlsServerEngine::Shutdown()
{
	DBG_FNC_ENTER("SlsServerEngine::Shutdown");

	if (m_reqMgr)
	{
		std::istringstream is("STOP");
		std::ostringstream os;
		m_reqMgr->ExecuteCmdFromStream(is, os);
	}
}

//////////////////////////////////////////////////////////////////////////
//
void SlsServerEngine::Run()
{
	DBG_FNC_ENTER("SlsServerEngine::Run");

	ExitNotification exiter;

	DIAG_PDEF(DIAG_I, "wait until VP will be opened");
	while( !exiter.ExitWasNotified() && bsm::GsrService::Instance()->IsNewDayRunning() )
	{
		os_this_thread::sleep(1); 
	}

	DIAG_PDEF(DIAG_L, "Self service engine is bounded");
	std::cout << "Self service engine is bound\n";

	while( !exiter.ExitWasNotified() )
	{
		while( bsm::GsrService::Instance()->IsNewDayRunning() )
		{
			if( exiter.ExitWasNotified() )
				return;
			os_this_thread::sleep(1);
		}

		CalcSlsSerivces();

		size_t nSleep = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_DetectInterval, BSMCFG_DetectInterval_DEFAULT);
		m_DetectIntervalSleeper.Sleep(nSleep, &exiter);
	}

}


//////////////////////////////////////////////////////////////////////////
//
void SlsServerEngine::CalcSlsSerivces()
{
	DBG_FNC_ENTER("SlsServerEngine::CalcSlsSerivces");

	bsm::GsrUpdateLocker locker;

	CSimulator::DcsJobUpdatesVec DcUpdsVec; //SLS server does not use any pending updates
	bsm::GsrService::Instance()->ApplyChanges(DcUpdsVec);

	cout << "TODO: Calc...\n";

}

//////////////////////////////////////////////////////////////////////////
// reset interval timer so next calculation will start as soon as possible
//
void SlsServerEngine::ForceCalculation()
{
	DBG_FNC_ENTER("SlsServerEngine::ForceCalculation");

	m_DetectIntervalSleeper.Reset(0);
}


} //namespace sls 

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsServerEngine.cpp#3:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServerEngine.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServerEngine.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsServerEngine.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsServerEngine.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsServerEngine.cpp#2      SlsServerEngine.cpp#3     
------------------------- -------------------------- --------------------------
create_time               Thu Apr 08 17:04:54 2010   Tue Apr 13 16:20:21 2010  
modify_time               Mon Apr 12 11:59:27 2010   Wed Apr 14 17:03:01 2010  
version                   2                          3                         
source_create_time        Thu Apr 08 17:04:56 2010   Tue Apr 13 16:20:21 2010  
source_modify_time        Thu Apr 08 17:05:13 2010   Wed Apr 14 15:26:28 2010  

===============================================================================
Associated tasks differs:

SlsServerEngine.cpp#2
46486: Fix for Task 46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsServerEngine.cpp#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Wed Apr 07 11:39:29 2010 %
---
> *	%date_created:	Tue Apr 13 16:20:21 2010 %
15c15
< static const char *_cxxsrc = "@(#) %filespec: SlsServerEngine.cpp#1 %  (%full_filespec: SlsServerEngine.cpp#1:cpp:1 %)";
---
> static const char *_cxxsrc = "@(#) %filespec: SlsServerEngine.cpp#3 %  (%full_filespec: SlsServerEngine.cpp#3:cpp:1 %)";
55,56d54
< 	//TODOSLS: customize simulator (minimazae memory)
< 
88c86,87
< 		new CmdDumpJobs
---
> 		new CmdDumpJobs,
> 		new CmdReconnect
187c186
< 	ExitNotification ExitNow;
---
> 	ExitNotification exiter;
190c189
< 	while( !ExitNow() && bsm::GsrService::Instance()->IsNewDayRunning() )
---
> 	while( !exiter.ExitWasNotified() && bsm::GsrService::Instance()->IsNewDayRunning() )
198c197
< 	while( !ExitNow() )
---
> 	while( !exiter.ExitWasNotified() )
202c201
< 			if( ExitNow() )
---
> 			if( exiter.ExitWasNotified() )
209,212c208,209
< 		size_t nSleep = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_DetectInterval);
< 		ExitNow.ExitWasNotified(nSleep);
< 
< 
---
> 		size_t nSleep = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_DetectInterval, BSMCFG_DetectInterval_DEFAULT);
> 		m_DetectIntervalSleeper.Sleep(nSleep, &exiter);
216a214
> 
225c223,235
< 	bsm::GsrService::Instance()->ApplyChanges();
---
> 	CSimulator::DcsJobUpdatesVec DcUpdsVec; //SLS server does not use any pending updates
> 	bsm::GsrService::Instance()->ApplyChanges(DcUpdsVec);
> 
> 	cout << "TODO: Calc...\n";
> 
> }
> 
> //////////////////////////////////////////////////////////////////////////
> // reset interval timer so next calculation will start as soon as possible
> //
> void SlsServerEngine::ForceCalculation()
> {
> 	DBG_FNC_ENTER("SlsServerEngine::ForceCalculation");
226a237
> 	m_DetectIntervalSleeper.Reset(0);

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Thu Apr  8 17:04:55 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 17:42:36 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:27 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Tue Apr 13 16:20:21 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:27 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:01 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServerEngine.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	C++ %name:		SlsServerEngine.cpp %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 07 11:39:29 2010 %
*
**********************************************************************/
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: SlsServerEngine.cpp#1 %  (%full_filespec: SlsServerEngine.cpp#1:cpp:1 %)";
#endif

#include "em_foundations/EmException.h"
#include "em_foundations/ExitNotification.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/Configuration.h"
#include "BsmCommon/BsmConfigurationDef.h"

#include "SlsServer/ReqSubmitter.h"

#include "libfcengine/Simulator.h"
#include "libfcengine/SimulatorFactory.h"
#include "ForecastDAL/DALMgr.h"

#include "libfcengine/SLSDefManager.h"

#include "BsmService/SLSDefWrapperDB.h"
#include "BsmService/GsrServiceStartupParams.h"
#include "BsmService/GsrService.h"

#include "SlsServiceCmds.h"
#include "SlsServerEngine.h"
#include "Sls_Version.h"		
#include "SlsGsrActions.h"



DIAG_REGISTER_MODULE;


namespace sls {

EM_SINGLETON_IMPLEMENTATION(SlsServerEngine);

SlsServerEngine::SlsServerEngine()
	: m_reqMgr(NULL)
	, m_Simulator(CSimulatorFactory::CreateSimulator())
	, m_SlsGsrActions( new SlsGsrActions )
{
	//TODOSLS: customize simulator (minimazae memory)


}

/*virtual*/ SlsServerEngine::~SlsServerEngine()
{
	UnregisterCommands();

	// Destruct
	delete m_Simulator;
	m_Simulator = NULL;
	delete m_SlsGsrActions;
	m_SlsGsrActions = NULL;
}


void SlsServerEngine::SetReqSubmitterMgr(ReqSubmitterMgr* reqMgr)
{
	if (m_reqMgr != NULL)
		UnregisterCommands();
	m_reqMgr = reqMgr;
}

bool SlsServerEngine::RegisterCommands()
{
	DBG_FNC_ENTER("SlsServerEngine::RegisterCommands");

	if (m_reqMgr == NULL)
		return false;

	ReqCmdBase* cmdArr[] = {
		new CmdGetVersion,
		new CmdDumpJobs
	};

	for (size_t i = 0; i < sizeof(cmdArr)/sizeof(*cmdArr); ++i)
	{
		bool reg = m_reqMgr->RegisterCmd( cmdArr[i] ); 
		if (reg == true)
		{
			DIAG_PDEF(DIAG_I, "Command '" << cmdArr[i]->GetName() << "' was registered");
			m_regCommands.push_back( cmdArr[i]->GetName() );
		}
		else
		{
			DIAG_PDEF(DIAG_E, "Failed to register command: " << cmdArr[i]->GetName());
			delete cmdArr[i];
		}
	}
	return true;
}

bool SlsServerEngine::UnregisterCommands()
{
	DBG_FNC_ENTER("SlsServerEngine::UnregisterCommands");
	if (m_reqMgr == NULL)
		return false;

	for (std::vector< std::string >::const_iterator it = m_regCommands.begin()
		; it != m_regCommands.end()
		; ++it)
	{
		const std::string& cmdName = *it;
		ReqCmdBase* pCmd = m_reqMgr->UnRegisterCmd(cmdName);
		if (pCmd != NULL)
		{
			DIAG_PDEF(DIAG_I, "Command '" << pCmd->GetName() << "' was unregistered");
			delete pCmd;
		}
	}
	m_regCommands.clear();
	return true;
}


void SlsServerEngine::FillGsrServiceStartupParams( bsm::GsrServiceStartupParams& params )
{
	params.m_Simulator				= m_Simulator;
	params.m_GsrActionCallback		= m_SlsGsrActions;
}


/*virtual*/ int SlsServerEngine::Init(int argc,char* argv[])
{
	// 
	DBG_FNC_ENTER("SlsServerEngine::Startup");

	// register commands in the request submitter
	DIAG_PDEF(DIAG_I, "register commands in the request submitter");
	RegisterCommands();

	//T: Definition Load before VP
	RWDBConnection conn = Forecast::DAL::DALMgr::instance()->GetConnection();
	SLSDefWrapperDB* db = SLSDefWrapperDB::Instance();
	bsm::SLSDefManager * m = SlsServerEngine::Instance()->GetSimulator()->GetSLSDefManager();
	EM_ASSERT_AND_THROW( m != 0 , "should not be null " );
	//db->GetLatestDefinitionSet(  m->GetLatestDefinitionSet(), &conn );
	//

	this->Start(); //start own working thread

	return 0;
}


std::string SlsServerEngine::GetVersion() const
{
	return SLS_SERVER_VER;
}




void SlsServerEngine::Shutdown()
{
	DBG_FNC_ENTER("SlsServerEngine::Shutdown");

	if (m_reqMgr)
	{
		std::istringstream is("STOP");
		std::ostringstream os;
		m_reqMgr->ExecuteCmdFromStream(is, os);
	}
}

//////////////////////////////////////////////////////////////////////////
//
void SlsServerEngine::Run()
{
	DBG_FNC_ENTER("SlsServerEngine::Run");

	ExitNotification ExitNow;

	DIAG_PDEF(DIAG_I, "wait until VP will be opened");
	while( !ExitNow() && bsm::GsrService::Instance()->IsNewDayRunning() )
	{
		os_this_thread::sleep(1); 
	}

	DIAG_PDEF(DIAG_L, "Self service engine is bounded");
	std::cout << "Self service engine is bound\n";

	while( !ExitNow() )
	{
		while( bsm::GsrService::Instance()->IsNewDayRunning() )
		{
			if( ExitNow() )
				return;
			os_this_thread::sleep(1);
		}

		CalcSlsSerivces();

		size_t nSleep = bsm::Configuration::Instance()->GetTimeIntervalInSec(BSMCFG_DetectInterval);
		ExitNow.ExitWasNotified(nSleep);


	}

}

//////////////////////////////////////////////////////////////////////////
//
void SlsServerEngine::CalcSlsSerivces()
{
	DBG_FNC_ENTER("SlsServerEngine::CalcSlsSerivces");

	bsm::GsrUpdateLocker locker;

	bsm::GsrService::Instance()->ApplyChanges();

}


} //namespace sls 

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServerEngine.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServerEngine.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsServerEngine.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsServerEngine.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsServerEngine.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsServerEngine.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 07 11:39:25 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsServerEngine.h#2:INC:1
*****************************************************************************
Object:  SlsServerEngine.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Tue Apr 13 18:05:35 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServerEngine.h#1:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsServerEngine.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsServerEngine.h#2 sqa yakovt INC ECSNT 1 46511
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsServerEngine.h#2@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServerEngine.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	SlsServerEngine.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Tue Apr 13 18:05:35 2010 %
*
**********************************************************************/
#ifndef _1_SlsServerEngine_h_H
#define _1_SlsServerEngine_h_H


#include "SlsService_export.h"

#include "em_foundations/em_singleton.h"
#include "BsmCommon/WorkingThread.h"
#include "BsmCommon/Sleeper.h"


class ReqSubmitterMgr;
class CSimulator;
class ExitNotification;

namespace bsm
{
	class GsrServiceStartupParams;
}

namespace sls {

	class SlsGsrActions;


	class SLSSERVICE_API SlsServerEngine : public bsm::WorkingThread
	{
		SlsServerEngine();
	public:
		virtual ~SlsServerEngine();

		EM_SINGLETON(SlsServerEngine);

		// for startup
		int Init(int argc, char* argv[]);
		void FillGsrServiceStartupParams( bsm::GsrServiceStartupParams& params );
		void SetReqSubmitterMgr(ReqSubmitterMgr* reqMgr);

		std::string GetVersion() const;
		void Shutdown();
		CSimulator*		GetSimulator()		{ return m_Simulator; }

		virtual void Run(); //bsm::WorkingThread

		void ForceCalculation();


	protected:
		void CalcSlsSerivces();
		void Sleep( size_t sec, ExitNotification& exiter );

		// commands 
		bool RegisterCommands();
		bool UnregisterCommands();
		ReqSubmitterMgr*						m_reqMgr;
		std::vector< std::string >				m_regCommands;

	private:
		CSimulator*				m_Simulator;
		SlsGsrActions*			m_SlsGsrActions;
		bsm::Sleeper				m_DetectIntervalSleeper;



	};
} //namespace sls 


#endif
OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsServerEngine.h#2:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServerEngine.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServerEngine.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsServerEngine.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsServerEngine.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsServerEngine.h#1        SlsServerEngine.h#2       
------------------------- -------------------------- --------------------------
create_time               Wed Apr 07 11:39:25 2010   Tue Apr 13 18:05:35 2010  
modify_time               Mon Apr 12 11:59:28 2010   Wed Apr 14 17:03:02 2010  
version                   1                          2                         
source_create_time        Wed Apr 07 11:39:26 2010   Tue Apr 13 18:05:36 2010  
source_modify_time        Thu Apr 08 14:03:17 2010   Wed Apr 14 12:06:07 2010  

===============================================================================
Associated tasks differs:

SlsServerEngine.h#1
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsServerEngine.h#2
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

10c10
< *	%date_created:	Wed Apr 07 11:39:25 2010 %
---
> *	%date_created:	Tue Apr 13 18:05:35 2010 %
20a21
> #include "BsmCommon/Sleeper.h"
24a26
> class ExitNotification;
54a57,59
> 		void ForceCalculation();
> 
> 
56a62
> 		void Sleep( size_t sec, ExitNotification& exiter );
65,66c71,73
< 		CSimulator*		m_Simulator;
< 		SlsGsrActions*	m_SlsGsrActions;
---
> 		CSimulator*				m_Simulator;
> 		SlsGsrActions*			m_SlsGsrActions;
> 		bsm::Sleeper				m_DetectIntervalSleeper;

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Wed Apr  7 11:39:25 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:36 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:28 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Tue Apr 13 18:05:36 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:28 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:02 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServerEngine.h#1:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
/**********************************************************************
*                 Copyright BMC Software Inc., 
*     as an unpublished licensed work. All rights reserved.
*     -----------------------------------------------------
*
*	Header %name:	SlsServerEngine.h %
*	Instance:		1
*	Description:	
*	%created_by:	yakovt %
*	%date_created:	Wed Apr 07 11:39:25 2010 %
*
**********************************************************************/
#ifndef _1_SlsServerEngine_h_H
#define _1_SlsServerEngine_h_H


#include "SlsService_export.h"

#include "em_foundations/em_singleton.h"
#include "BsmCommon/WorkingThread.h"


class ReqSubmitterMgr;
class CSimulator;

namespace bsm
{
	class GsrServiceStartupParams;
}

namespace sls {

	class SlsGsrActions;


	class SLSSERVICE_API SlsServerEngine : public bsm::WorkingThread
	{
		SlsServerEngine();
	public:
		virtual ~SlsServerEngine();

		EM_SINGLETON(SlsServerEngine);

		// for startup
		int Init(int argc, char* argv[]);
		void FillGsrServiceStartupParams( bsm::GsrServiceStartupParams& params );
		void SetReqSubmitterMgr(ReqSubmitterMgr* reqMgr);

		std::string GetVersion() const;
		void Shutdown();
		CSimulator*		GetSimulator()		{ return m_Simulator; }

		virtual void Run(); //bsm::WorkingThread

	protected:
		void CalcSlsSerivces();

		// commands 
		bool RegisterCommands();
		bool UnregisterCommands();
		ReqSubmitterMgr*						m_reqMgr;
		std::vector< std::string >				m_regCommands;

	private:
		CSimulator*		m_Simulator;
		SlsGsrActions*	m_SlsGsrActions;



	};
} //namespace sls 


#endif
OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServerEngine.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServerEngine.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsServerEngine.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsServerEngine.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsServiceCmds.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsServiceCmds.cpp#1 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Mon Mar 01 11:31:20 2010
Task:    45753
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsServiceCmds.cpp#2:cpp:1
*****************************************************************************
Object:  SlsServiceCmds.cpp#2 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Tue Apr 06 11:36:27 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServiceCmds.cpp#1:cpp:1
Successors:
	SlsServiceCmds.cpp#3:cpp:1
*****************************************************************************
Object:  SlsServiceCmds.cpp#3 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 13:56:40 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServiceCmds.cpp#2:cpp:1
Successors:
	SlsServiceCmds.cpp#4:cpp:1
*****************************************************************************
Object:  SlsServiceCmds.cpp#4 (cpp:1)
Owner:   yakovt
State:   sqa
Created: Thu Apr 15 10:57:27 2010
Task:    46633
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServiceCmds.cpp#3:cpp:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsServiceCmds.cpp#4:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsServiceCmds.cpp#4 sqa yakovt cpp ECSNT 1 46633
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsServiceCmds.cpp#4@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServiceCmds.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
#include "stdafx.h"
#ifndef lint
static const char *_cxxsrc = "@(#) %filespec: SlsServiceCmds.cpp#1 %  (%full_filespec: SlsServiceCmds.cpp#1:cpp:1 %)";
#endif

#include "SlsServiceI.h"
#include "SlsServiceCmds.h"
#include "BsmService/GsrService.h"
#include "libfcengine/Simulator.h"
#include "SlsServerEngine.h"

#include "BsmService/GsrService.h"

DIAG_REGISTER_MODULE;

namespace sls {

// get version information

CmdGetVersion::CmdGetVersion() 
	:	CmdBase("VER")
{
	// Construct
}

/*virtual*/ int CmdGetVersion::Execute(std::istream& is, std::ostream& os)
{
	os << SlsServerEngine::Instance()->GetVersion();
	return 0;
}

/*virtual*/ std::ostream& CmdGetVersion::PrintUsage(std::ostream& os) const
{
	os << GetName() << " - server version information";
	return os;
}

CmdReadParams::CmdReadParams()
	: CmdBase("RPARAMS")
{
	// Construct
}

/*virtual*/ int CmdReadParams::Execute(std::istream& is,std::ostream& os)
{
	DBG_FNC_ENTER("GsrService::Reconnect");

	try
	{
		os << "TODO";
	}
	catch (const std::exception& e)
	{
		os << "Error: " << e.what();
		return 1;
	}


	return 0;
}

/*virtual*/ std::ostream& CmdReadParams::PrintUsage(std::ostream& os) const
{
	os << GetName() << " - read system parameters from database";
	return os;
}


//////////////////////////////////////////////////////////////////////////
CmdDumpJobs::CmdDumpJobs()
: CmdBase("DumpJobs")
{
	// Construct
}

/*virtual*/ int CmdDumpJobs::Execute(std::istream& is,std::ostream& os)
{
	DBG_FNC_ENTER("GsrService::Reconnect");

	try
	{
		bsm::GsrUpdateLocker update_lock;

		SlsServerEngine::Instance()->GetSimulator()->DumpToStream(os);

	}
	catch (const std::exception& e)
	{
		os << "Error: " << e.what();
		return 1;
	}


	return 0;
}

/*virtual*/ std::ostream& CmdDumpJobs::PrintUsage(std::ostream& os) const
{
	os << GetName() << " dump all jobs information";
	return os;
}

//////////////////////////////////////////////////////////////////////////
CmdReconnect::CmdReconnect()
: CmdBase("RECONNECT")
{
	// Construct
}

/*virtual*/ int CmdReconnect::Execute(std::istream& is,std::ostream& os)
{
	DBG_FNC_ENTER("GsrService::Reconnect");

	try
	{

		bsm::GsrService::Instance()->StartReconnection();
		os << "reconnection is started\n" ;

	}
	catch (const std::exception& e)
	{
		os << "Error: " << e.what();
		return 1;
	}


	return 0;
}

/*virtual*/ std::ostream& CmdReconnect::PrintUsage(std::ostream& os) const
{
	os << GetName() << " dump all jobs information";
	return os;
}


} // sls namespace

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsServiceCmds.cpp#3:cpp:1 has type cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServiceCmds.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServiceCmds.cpp
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsServiceCmds.cpp
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsServiceCmds.cpp#3:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsServiceCmds.cpp#2       SlsServiceCmds.cpp#3      
------------------------- -------------------------- --------------------------
create_time               Tue Apr 06 11:36:27 2010   Wed Apr 14 13:56:40 2010  
modify_time               Mon Apr 12 11:59:30 2010   Wed Apr 14 17:03:02 2010  
version                   2                          3                         
source_create_time        Wed Feb 24 13:01:54 2010   Thu Apr 08 16:33:12 2010  
source_modify_time        Thu Apr 08 16:33:12 2010   Wed Apr 14 14:32:01 2010  

===============================================================================
Associated tasks differs:

SlsServiceCmds.cpp#2
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsServiceCmds.cpp#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

1a2,4
> #ifndef lint
> static const char *_cxxsrc = "@(#) %filespec: SlsServiceCmds.cpp#1 %  (%full_filespec: SlsServiceCmds.cpp#1:cpp:1 %)";
> #endif
3,8d5
< //#include <ostream>
< //#include <sstream>
< //#include <memory>
< //#include <algorithm>
< //#include <ospace/config.h> // include objectspace before tao
< //#include <ospace/extern.h> // because of missing 'senum'
14a12,15
> #include "BsmService/GsrService.h"
> 
> DIAG_REGISTER_MODULE;
> 
44a46,47
> 	DBG_FNC_ENTER("GsrService::Reconnect");
> 
74a78,79
> 	DBG_FNC_ENTER("GsrService::Reconnect");
> 
94c99,133
< 	os << GetName() << "dump all jobs information";
---
> 	os << GetName() << " dump all jobs information";
> 	return os;
> }
> 
> //////////////////////////////////////////////////////////////////////////
> CmdReconnect::CmdReconnect()
> : CmdBase("RECONNECT")
> {
> 	// Construct
> }
> 
> /*virtual*/ int CmdReconnect::Execute(std::istream& is,std::ostream& os)
> {
> 	DBG_FNC_ENTER("GsrService::Reconnect");
> 
> 	try
> 	{
> 
> 		bsm::GsrService::Instance()->StartReconnection();
> 		os << "reconnection is started\n" ;
> 
> 	}
> 	catch (const std::exception& e)
> 	{
> 		os << "Error: " << e.what();
> 		return 1;
> 	}
> 
> 
> 	return 0;
> }
> 
> /*virtual*/ std::ostream& CmdReconnect::PrintUsage(std::ostream& os) const
> {
> 	os << GetName() << " dump all jobs information";

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Tue Apr  6 11:36:28 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:39 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:30 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 13:56:40 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:29 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:02 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServiceCmds.cpp#2:cpp:1
Execute (executor.py:83): OUTPUT_BEGIN
#include "stdafx.h"

//#include <ostream>
//#include <sstream>
//#include <memory>
//#include <algorithm>
//#include <ospace/config.h> // include objectspace before tao
//#include <ospace/extern.h> // because of missing 'senum'
#include "SlsServiceI.h"
#include "SlsServiceCmds.h"
#include "BsmService/GsrService.h"
#include "libfcengine/Simulator.h"
#include "SlsServerEngine.h"

namespace sls {

// get version information

CmdGetVersion::CmdGetVersion() 
	:	CmdBase("VER")
{
	// Construct
}

/*virtual*/ int CmdGetVersion::Execute(std::istream& is, std::ostream& os)
{
	os << SlsServerEngine::Instance()->GetVersion();
	return 0;
}

/*virtual*/ std::ostream& CmdGetVersion::PrintUsage(std::ostream& os) const
{
	os << GetName() << " - server version information";
	return os;
}

CmdReadParams::CmdReadParams()
	: CmdBase("RPARAMS")
{
	// Construct
}

/*virtual*/ int CmdReadParams::Execute(std::istream& is,std::ostream& os)
{
	try
	{
		os << "TODO";
	}
	catch (const std::exception& e)
	{
		os << "Error: " << e.what();
		return 1;
	}


	return 0;
}

/*virtual*/ std::ostream& CmdReadParams::PrintUsage(std::ostream& os) const
{
	os << GetName() << " - read system parameters from database";
	return os;
}


//////////////////////////////////////////////////////////////////////////
CmdDumpJobs::CmdDumpJobs()
: CmdBase("DumpJobs")
{
	// Construct
}

/*virtual*/ int CmdDumpJobs::Execute(std::istream& is,std::ostream& os)
{
	try
	{
		bsm::GsrUpdateLocker update_lock;

		SlsServerEngine::Instance()->GetSimulator()->DumpToStream(os);

	}
	catch (const std::exception& e)
	{
		os << "Error: " << e.what();
		return 1;
	}


	return 0;
}

/*virtual*/ std::ostream& CmdDumpJobs::PrintUsage(std::ostream& os) const
{
	os << GetName() << "dump all jobs information";
	return os;
}


} // sls namespace

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServiceCmds.cpp
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServiceCmds.cpp
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsServiceCmds.cpp.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsServiceCmds.cpp.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
Execute (executor.py:80): EXECUTE_CMD: ccm history SlsServiceCmds.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Object:  SlsServiceCmds.h#1 (INC:1)
Owner:   yakovt
State:   sqa
Created: Mon Mar 01 11:31:22 2010
Task:    45753
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
Successors:
	SlsServiceCmds.h#2:INC:1
*****************************************************************************
Object:  SlsServiceCmds.h#2 (INC:1)
Owner:   yakovt
State:   sqa
Created: Tue Apr 06 11:36:58 2010
Task:    46075
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServiceCmds.h#1:INC:1
Successors:
	SlsServiceCmds.h#3:INC:1
*****************************************************************************
Object:  SlsServiceCmds.h#3 (INC:1)
Owner:   yakovt
State:   sqa
Created: Wed Apr 14 13:51:13 2010
Task:    46511
Comment:
changed to sqa state by GAP automatic approval
Predecessors:
	SlsServiceCmds.h#2:INC:1
Successors:
*****************************************************************************
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm finduse SlsServiceCmds.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
SlsServiceCmds.h#3 sqa yakovt INC ECSNT 1 46511
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#700fp1yakovt-win:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#bldrem_EM700FP1_U_INT:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#bldrem_EM700FP1_W_INT:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#R7.0.0.01hdaganWin:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#700FP1_sabuawad_desktop:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#700FP1_hani_win:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#700FP1_olga_windows:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#eyalWin700_fp1:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#bldrem_EM700FP1_W_CI:project:4
	ECSNT\SlsService\SlsServiceCmds.h#3@ECSNT#bldrem_EM700FP1_U_CI:project:4
OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServiceCmds.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
#ifndef __SLS_SERVICE_CMDS_H__
#define __SLS_SERVICE_CMDS_H__

#include <iosfwd>
#include <string>
#include <set>
#include <functional>

#include "SlsService_export.h"
#include <Common/pragma_begin.h>
#include "em_idl_prod/slsS.hh"
#include <Common/pragma_end.h>
#include "SlsServer/ReqSubmitter.h"


namespace sls {

	class SlsServerEngine;

	class SLSSERVICE_API CmdBase : public ReqNamedCmd
	{
	public:
		CmdBase(const std::string& name) : ReqNamedCmd(name) {}
	};

	class SLSSERVICE_API CmdGetVersion : public CmdBase
	{
	public:
		CmdGetVersion();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};

	class SLSSERVICE_API CmdReadParams : public CmdBase
	{
	public:
		CmdReadParams();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};


	class SLSSERVICE_API CmdDumpJobs : public CmdBase
	{
	public:
		CmdDumpJobs();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};

	class SLSSERVICE_API CmdReconnect : public CmdBase
	{
	public:
		CmdReconnect();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};




} // sls namespace

#endif // __SLS_SERVICE_CMDS_H__

OUTPUT_END

ExtractFromCm (cmtaskdiff.py:309): object SlsServiceCmds.h#3:INC:1 has type INC
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServiceCmds.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\new\ECSNT\SlsService\SlsServiceCmds.h
ExtractFromCm (cmtaskdiff.py:312): make patch for ECSNT\SlsService\SlsServiceCmds.h
Execute (executor.py:80): EXECUTE_CMD: ccm diff -vc  SlsServiceCmds.h#3:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
Attribute name            SlsServiceCmds.h#2         SlsServiceCmds.h#3        
------------------------- -------------------------- --------------------------
create_time               Tue Apr 06 11:36:58 2010   Wed Apr 14 13:51:13 2010  
modify_time               Mon Apr 12 11:59:31 2010   Wed Apr 14 17:03:03 2010  
version                   2                          3                         
source_create_time        Wed Feb 24 11:55:52 2010   Wed Apr 07 15:09:19 2010  
source_modify_time        Wed Apr 07 15:09:19 2010   Wed Apr 14 13:54:24 2010  

===============================================================================
Associated tasks differs:

SlsServiceCmds.h#2
46075: 700.1: Refactoring: moving GSR Stuff to Bsm Service

SlsServiceCmds.h#3
46511: 700fp1: sls/gsr reconnection

===============================================================================
Text attribute 'source' differs:

50a51,59
> 	class SLSSERVICE_API CmdReconnect : public CmdBase
> 	{
> 	public:
> 		CmdReconnect();
> 		virtual int Execute(std::istream& is, std::ostream& os);
> 		virtual std::ostream& PrintUsage(std::ostream& os) const;
> 	};
> 
> 

===============================================================================
Text attribute 'status_log' differs:

1,3c1,3
< Tue Apr  6 11:37:01 2010: Status set to 'working' by yakovt in role developer
< Thu Apr  8 16:46:40 2010: Status set to 'integrate' by yakovt in role developer
< Mon Apr 12 11:59:31 2010: Status set to 'sqa' by bldrem in role build_mgr
---
> Wed Apr 14 13:51:13 2010: Status set to 'working' by yakovt in role developer
> Wed Apr 14 15:56:29 2010: Status set to 'integrate' by yakovt in role developer
> Wed Apr 14 17:03:03 2010: Status set to 'sqa' by bldrem in role build_mgr

OUTPUT_END

Execute (executor.py:80): EXECUTE_CMD: ccm cat SlsServiceCmds.h#2:INC:1
Execute (executor.py:83): OUTPUT_BEGIN
#ifndef __SLS_SERVICE_CMDS_H__
#define __SLS_SERVICE_CMDS_H__

#include <iosfwd>
#include <string>
#include <set>
#include <functional>

#include "SlsService_export.h"
#include <Common/pragma_begin.h>
#include "em_idl_prod/slsS.hh"
#include <Common/pragma_end.h>
#include "SlsServer/ReqSubmitter.h"


namespace sls {

	class SlsServerEngine;

	class SLSSERVICE_API CmdBase : public ReqNamedCmd
	{
	public:
		CmdBase(const std::string& name) : ReqNamedCmd(name) {}
	};

	class SLSSERVICE_API CmdGetVersion : public CmdBase
	{
	public:
		CmdGetVersion();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};

	class SLSSERVICE_API CmdReadParams : public CmdBase
	{
	public:
		CmdReadParams();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};


	class SLSSERVICE_API CmdDumpJobs : public CmdBase
	{
	public:
		CmdDumpJobs();
		virtual int Execute(std::istream& is, std::ostream& os);
		virtual std::ostream& PrintUsage(std::ostream& os) const;
	};



} // sls namespace

#endif // __SLS_SERVICE_CMDS_H__

OUTPUT_END

SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServiceCmds.h
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\old\ECSNT\SlsService\SlsServiceCmds.h
SaveTextToFile (cmtaskdiff.py:204): saved to C:\work\cmtaskdiff\tmp\46511\patch\SlsServiceCmds.h.patch
SaveTextToFile (cmtaskdiff.py:206): creating in C:\work\cmtaskdiff\tmp\46511\patch
SaveTextToFile (cmtaskdiff.py:209): save text to file C:\work\cmtaskdiff\tmp\46511\patch\SlsServiceCmds.h.patch
Save (cmtaskdiff.py:245): save index to C:\work\cmtaskdiff\tmp\46511/_index.csv
processing ECSNT\BsmCommon\BsmCommon.vcproj
processing ECSNT\BsmCommon\BsmConfigurationDef.h
processing ECSNT\BsmService\BsmService.vcproj
processing ECSNT\BsmCommon\Configuration.cpp
processing ECSNT\BsmCommon\Configuration.h
processing ECSNT\SlsService\ConfigurationService.cpp
processing ECSNT\BsmService\GsrActionCallback.h
processing ECSNT\BsmService\GsrConnector.cpp
processing ECSNT\BsmService\GsrConnector.h
processing ECSNT\BsmService\GsrCorbaCallbackCommand.cpp
processing ECSNT\BsmService\GsrKeepAndLive.cpp
processing ECSNT\BsmService\GsrReconnector.cpp
processing ECSNT\BsmService\GsrReconnector.h
processing ECSNT\BsmService\GsrService.cpp
processing ECSNT\BsmService\GsrService.h
processing ECSNT\BsmCommon\Sleeper.cpp
processing ECSNT\BsmCommon\Sleeper.h
processing ECSNT\SlsService\SlsGsrActions.cpp
processing ECSNT\SlsService\SlsGsrActions.h
processing ECSNT\SlsServer\SlsServer.cpp
processing ECSNT\SlsService\SlsServerEngine.cpp
processing ECSNT\SlsService\SlsServerEngine.h
processing ECSNT\SlsService\SlsServiceCmds.cpp
processing ECSNT\SlsService\SlsServiceCmds.h
